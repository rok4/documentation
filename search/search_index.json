{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Le projet ROK4","text":"<p>Le projet ROK4 est un projet open-source (sous licence CeCILL-C) d\u00e9velopp\u00e9 par les \u00e9quipes du projet G\u00e9oportail (@Geoportail) de l\u2019Institut National de l\u2019Information G\u00e9ographique et Foresti\u00e8re (@IGNFrance).</p>"},{"location":"#contenu-du-projet","title":"Contenu du projet","text":"<p>Il comprend des outils de pr\u00e9g\u00e9n\u00e9ration (en Perl) et g\u00e9n\u00e9ration (en C++) de pyramides de donn\u00e9es image et vecteur, et un serveur de diffusion (en C++) de ces donn\u00e9es en WMS, WMTS et TMS. Vous pouvez trouver plus de d\u00e9tails dans ces projets. </p> <p> </p> G\u00e9n\u00e9ration et diffusion <p>Des outils de gestion (\u00e9crits en Perl) permettent entre autre l'analyse et la suppression des pyramides.</p> <p>Une refonte des outils \u00e9crits en Python est en cours, et remplacera au fur et \u00e0 mesure ceux en Perl.</p> <p>Les librairies g\u00e9n\u00e9riques du projet, en Perl, en Python et en C++ sont dans des projets \u00e0 part afin d'\u00eatre plus facilement r\u00e9utilisables.</p> <p>Des styles et des tile matrix sets, utilis\u00e9 au niveau des g\u00e9n\u00e9rations et de la diffusion sont dans des projets ind\u00e9pendents.</p> <p> </p> D\u00e9coupage du projet <p>Des configurations Docker sont \u00e9galement disponibles pour permettre la compilation des applicatifs sous forme d'image docker, ainsi que l'utilisation des images pour tester le fonctionnement de ces applicatifs.</p>"},{"location":"#les-donnees","title":"Les donn\u00e9es","text":"<p>Les donn\u00e9es dans la pyramide sont tuil\u00e9es selon un quadrillage d\u00e9fini dans le TileMatrixSet.</p> <p> </p> Serveur et g\u00e9n\u00e9ration <p>La pyramide produite par les outils de pr\u00e9-g\u00e9n\u00e9ration et g\u00e9n\u00e9ration est d\u00e9crite \u00e0 travers un fichier, le descripteur de pyramide, qui va pr\u00e9ciser le TMS utilis\u00e9 pour d\u00e9couper les donn\u00e9es, les caract\u00e9ristiques des donn\u00e9es images ou vecteur, les diff\u00e9rents niveaux de r\u00e9solutions. Vous pouvez consultez les sp\u00e9cifications d'une pyramide et le sch\u00e9ma JSON du descripteur.</p> <p>Pour que cette pyramide soit diffus\u00e9e par le serveur, on va cr\u00e9er un descripteur de couche (sch\u00e9ma JSON du descripteur), qui va contenir \u00e0 la fois des informations propres au serveur (nom, titre et r\u00e9sum\u00e9 de la couche, styles...) mais aussi r\u00e9f\u00e9rencer le descripteur des pyramides \u00e0 diffuser.</p>"},{"location":"#visualisation-du-quadrillage","title":"Visualisation du quadrillage","text":"<p>Exemple du quadrillage Web Mercator, utilis\u00e9 sur le site G\u00e9oportail (cliquer sur la carte pour obtenir les indices de la tuile, ainsi qu'un exemple de requ\u00eate getTile).</p>      Niveau :      , colonne :      , ligne :  \u203a\u203a Centrer sur la tuile <p> </p>"},{"location":"devs/","title":"Documentation d\u00e9veloppeur","text":"<ul> <li>Code c++ (en fran\u00e7ais)</li> <li>Code c++ (en anglais)</li> <li>Code Perl (en anglais)</li> <li>Code Python (en anglais)</li> </ul>"},{"location":"devs/#versions-des-composants","title":"Versions des composants","text":"<ul> <li>Serveur : develop</li> <li>Outils de pr\u00e9-g\u00e9n\u00e9ration : develop</li> <li>Outils de g\u00e9n\u00e9ration : develop</li> <li>Outils de gestion : develop</li> <li>Librairies Core C++ : develop</li> <li>Librairies Core Perl : develop</li> <li>Librairies Core Python : 1.2.0</li> </ul>"},{"location":"core-cpp/","title":"Librairies CORE CPP","text":""},{"location":"core-cpp/#variables-cmake","title":"Variables CMake","text":"<p>Dans le cas d'une compilation autonome :</p> <ul> <li><code>FILEIMAGE_ENABLED</code> : active la compilation des classes de lecture d'image fichier. Valeur par d\u00e9faut : <code>1</code>, <code>0</code> pour d\u00e9sactiver.</li> <li><code>KDU_ENABLED</code> : active la compilation avec le driver Kakadu pour la lecture des fichiers JPEG2000</li> <li><code>KDU_THREADING</code> : renseigne le niveau de parall\u00e9lisation dans le cas de l'utilisation de Kakadu. Valeur par d\u00e9faut : <code>0</code></li> <li><code>OBJECT_ENABLED</code> : active la compilation des classes de gestion des stockages objet. Valeur par d\u00e9faut : <code>1</code>, <code>0</code> pour d\u00e9sactiver.</li> <li><code>UNITTEST_ENABLED</code> : active la compilation des tests unitaires. Valeur par d\u00e9faut : <code>1</code>, <code>0</code> pour d\u00e9sactiver.</li> </ul>"},{"location":"core-cpp/#compilation-et-tests-unitaires","title":"Compilation et tests unitaires","text":"<pre><code>mkdir build &amp;&amp; cd build\ncmake ..\nmake\nmake test\n</code></pre>"},{"location":"core-cpp/#dependances","title":"D\u00e9pendances","text":"<ul> <li>Paquets debian</li> <li>zlib1g-dev</li> <li>libcurl4-openssl-dev</li> <li>libproj-dev</li> <li>libssl-dev</li> <li>libturbojpeg0-dev</li> <li>libjpeg-dev</li> <li>libc6-dev</li> <li>libjson11-1-dev</li> <li>libboost-log-dev</li> <li>libboost-filesystem-dev</li> <li>libboost-system-dev</li> <li>libsqlite3-dev</li> <li>Si <code>FILEIMAGE_ENABLED</code> \u00e0 1<ul> <li>Si <code>KDU_ENABLED</code> \u00e0 0</li> <li>libopenjp2-7-dev</li> <li>libpng-dev</li> <li>libtiff5-dev</li> </ul> </li> <li>Si <code>OBJECT_ENABLED</code> \u00e0 1<ul> <li>librados-dev</li> </ul> </li> <li>Si <code>UNITTEST_ENABLED</code> \u00e0 <code>1</code><ul> <li>libcppunit-dev</li> </ul> </li> </ul>"},{"location":"core-cpp/#utilisation-en-submodule-git","title":"Utilisation en submodule GIT","text":"<ul> <li>Si le d\u00e9p\u00f4t de code est \u00e0 c\u00f4t\u00e9 : <code>git submodule add ../core-cpp.git lib/core</code></li> <li>Sinon : <code>git submodule add https://github.com/rok4/core-cpp.git lib/core</code></li> </ul>"},{"location":"core-cpp/#variables-denvironnement-utilisees-dans-les-librairies","title":"Variables d'environnement utilis\u00e9es dans les librairies","text":"<p>Leur d\u00e9finition est contr\u00f4l\u00e9e \u00e0 l'usage.</p> <ul> <li>Pour le stockage CEPH<ul> <li><code>ROK4_CEPH_CONFFILE</code></li> <li><code>ROK4_CEPH_USERNAME</code></li> <li><code>ROK4_CEPH_CLUSTERNAME</code></li> </ul> </li> <li>Pour le stockage S3<ul> <li><code>ROK4_S3_URL</code></li> <li><code>ROK4_S3_KEY</code></li> <li><code>ROK4_S3_SECRETKEY</code></li> </ul> </li> <li>Pour le stockage SWIFT<ul> <li><code>ROK4_SWIFT_AUTHURL</code></li> <li><code>ROK4_SWIFT_USER</code></li> <li><code>ROK4_SWIFT_PASSWD</code></li> <li><code>ROK4_SWIFT_PUBLICURL</code></li> <li>Si authentification via Swift<ul> <li><code>ROK4_SWIFT_ACCOUNT</code></li> </ul> </li> <li>Si connection via keystone (pr\u00e9sence de <code>ROK4_KEYSTONE_DOMAINID</code>)<ul> <li><code>ROK4_KEYSTONE_DOMAINID</code></li> <li><code>ROK4_KEYSTONE_PROJECTID</code></li> </ul> </li> <li><code>ROK4_SWIFT_TOKEN_FILE</code> afin de sauvegarder le token d'acc\u00e8s, et ne pas le demander si ce fichier en contient un</li> </ul> </li> <li>Pour configurer l'usage de libcurl (int\u00e9raction SWIFT et S3)<ul> <li><code>ROK4_SSL_NO_VERIFY</code></li> <li><code>HTTP_PROXY</code></li> <li><code>HTTPS_PROXY</code></li> <li><code>NO_PROXY</code></li> </ul> </li> </ul>"},{"location":"core-cpp/CHANGELOG/","title":"Librairies ROK4 core C++","text":""},{"location":"core-cpp/CHANGELOG/#summary","title":"Summary","text":"<p>Styles et TMS peuvent \u00eatre charg\u00e9s depuis des objets, et sont g\u00e9r\u00e9s via un annuaire global.</p>"},{"location":"core-cpp/CHANGELOG/#changelog","title":"Changelog","text":""},{"location":"core-cpp/CHANGELOG/#changed","title":"[Changed]","text":"<ul> <li>Les chargements des styles et des TMS passent par un syst\u00e8me d'annuaire global. Ce dernier s'occupe de lire le fichier (stockage fichier ou objet) dans le cas d'une demande d'un nouveau, ou retourne celui d\u00e9j\u00e0 charg\u00e9</li> </ul>"},{"location":"core-perl/","title":"Librairies CORE Perl","text":"<p>Ces librairies Perl sont utilis\u00e9es par les outils de pr\u00e9g\u00e9n\u00e9ration et ceux de gestion et analyse</p>"},{"location":"core-perl/#installation-depuis-le-paquet-debian","title":"Installation depuis le paquet debian","text":"<p>T\u00e9l\u00e9charger le paquet sur GitHub : https://github.com/rok4/core-perl/releases/</p> <pre><code>apt install ./librok4-core-perl-&lt;version&gt;-linux-all.deb\n</code></pre>"},{"location":"core-perl/#installation-depuis-les-sources","title":"Installation depuis les sources","text":"<p>D\u00e9pendances (paquets debian) :</p> <ul> <li>perl-base</li> <li>libgdal-perl</li> <li>libpq-dev</li> <li>gdal-bin</li> <li>libfile-find-rule-perl</li> <li>libfile-copy-link-perl</li> <li>libconfig-ini-perl</li> <li>libdbi-perl</li> <li>libdbd-pg-perl</li> <li>libdevel-size-perl</li> <li>libdigest-sha-perl</li> <li>libfile-map-perl</li> <li>libfindbin-libs-perl</li> <li>libhttp-message-perl</li> <li>liblwp-protocol-https-perl</li> <li>libmath-bigint-perl</li> <li>libterm-progressbar-perl</li> <li>liblog-log4perl-perl</li> <li>libjson-parse-perl</li> <li>libjson-perl</li> <li>libjson-validator-perl</li> <li>libtest-simple-perl</li> <li>libxml-libxml-perl</li> <li>libnet-amazon-s3-perl</li> </ul> <pre><code>perl Makefile.PL INSTALL_BASE=/usr PREREQ_FATAL=1\nmake\nmake install\n</code></pre>"},{"location":"core-perl/#variables-denvironnement-utilisees-dans-les-librairies","title":"Variables d'environnement utilis\u00e9es dans les librairies","text":"<p>Leur d\u00e9finition est contr\u00f4l\u00e9e \u00e0 l'usage.</p> <ul> <li><code>ROK4_TMS_DIRECTORY</code> pour y chercher les Tile Matrix Sets</li> <li>Pour le stockage CEPH<ul> <li><code>ROK4_CEPH_CONFFILE</code></li> <li><code>ROK4_CEPH_USERNAME</code></li> <li><code>ROK4_CEPH_CLUSTERNAME</code></li> </ul> </li> <li>Pour le stockage S3<ul> <li><code>ROK4_S3_URL</code></li> <li><code>ROK4_S3_KEY</code></li> <li><code>ROK4_S3_SECRETKEY</code></li> </ul> </li> <li>Pour le stockage SWIFT<ul> <li><code>ROK4_SWIFT_AUTHURL</code></li> <li><code>ROK4_SWIFT_USER</code></li> <li><code>ROK4_SWIFT_PASSWD</code></li> <li><code>ROK4_SWIFT_PUBLICURL</code></li> <li>Si authentification via Swift<ul> <li><code>ROK4_SWIFT_ACCOUNT</code></li> </ul> </li> <li>Si connection via keystone (pr\u00e9sence de <code>ROK4_KEYSTONE_DOMAINID</code>)<ul> <li><code>ROK4_KEYSTONE_DOMAINID</code></li> <li><code>ROK4_KEYSTONE_PROJECTID</code></li> </ul> </li> </ul> </li> <li>Pour configurer l'agent de requ\u00eate (int\u00e9raction SWIFT et S3)<ul> <li><code>ROK4_SSL_NO_VERIFY</code></li> <li><code>HTTP_PROXY</code></li> <li><code>HTTPS_PROXY</code></li> <li><code>NO_PROXY</code></li> </ul> </li> </ul>"},{"location":"core-perl/CHANGELOG/","title":"Librairies ROK4 core Perl","text":""},{"location":"core-perl/CHANGELOG/#summary","title":"Summary","text":"<p>Corrections diverses</p>"},{"location":"core-perl/CHANGELOG/#changelog","title":"Changelog","text":""},{"location":"core-perl/CHANGELOG/#fixed","title":"[Fixed]","text":"<ul> <li>R\u00e9cup\u00e9ration correcrte de la valeur de nodata depuis un descipteur de pyramide XML</li> <li>\u00c9criture correcte d'un descripteur de pyramide JSON sur CEPH</li> </ul>"},{"location":"core-python/","title":"Librairies CORE Python","text":"<p>Ces librairies Python sont utilis\u00e9es par les outils python du d\u00e9p\u00f4t pytools</p>"},{"location":"core-python/#compiler-la-librairie","title":"Compiler la librairie","text":"<p><code>VERSION=1.0.0 python setup.py bdist_wheel</code></p>"},{"location":"core-python/#installer-la-librairie","title":"Installer la librairie","text":"<pre><code>apt install python3-rados\npython -m venv --system-site-packages venv\nsource venv/bin/activate\npip install rok4lib-1.0.0-py3-none-any.whl\n</code></pre>"},{"location":"core-python/#jouer-les-tests-unitaires","title":"Jouer les tests unitaires","text":"<p><code>pytest</code></p> <p>Pour avoir la couverture des tests unitaires :</p> <pre><code>source venv/bin/activate\npip install coverage\ncoverage run -m pytest\ncoverage report -m\n</code></pre>"},{"location":"core-python/#utiliser-la-librairie","title":"Utiliser la librairie","text":"<pre><code>from rok4.TileMatrixSet import TileMatrixSet\n\ntry:\n    tms = TileMatrixSet(\"file:///path/to/tms.json\")\nexcept Exception as exc:\n    print(exc)\n</code></pre>"},{"location":"core-python/#compiler-la-documentation","title":"Compiler la documentation","text":"<pre><code>source venv/bin/activate\npip install pdoc3 \nVERSION=1.0.0 pdoc --html rok4\n</code></pre>"},{"location":"core-python/CHANGELOG/","title":"Librairies ROK4 core Python","text":""},{"location":"core-python/CHANGELOG/#summary","title":"Summary","text":"<p>Ajout des librairies pour l'utilitaire make-layer.py</p>"},{"location":"core-python/CHANGELOG/#changelog","title":"Changelog","text":""},{"location":"core-python/CHANGELOG/#added","title":"[Added]","text":"<ul> <li> <p>Librairie Storage : compl\u00e9tion des tests unitaires</p> </li> <li> <p>Librairie Pyramid :</p> </li> <li> <p>Ajout de getter sur les niveaux du haut et du bas</p> </li> <li> <p>Ajout de la librairie de gestion d'une couche Layer :</p> </li> <li>Chargement d'une couche depuis des param\u00e8tres</li> <li>Chargement d'une couche depuis un descripteur</li> <li>\u00c9criture du descripteur au format attendu par le serveur</li> <li> <p>\u00c9criture des tests unitaires</p> </li> <li> <p>Ajout d'une librairie d'utilitaires Utils</p> </li> <li>Conversion d'un SRS en objet OSR SpatialReference</li> <li>Conversion d'une bbox en objet OGR Geometry</li> <li>Reprojection d'une bbox avec densification des c\u00f4t\u00e9s et reprojection partielle</li> <li> <p>\u00c9criture des tests unitaires</p> </li> <li> <p>Configuration de l'outil coverage pour voir la couverture des tests unitaires</p> </li> </ul>"},{"location":"docker/","title":"ROK4 &amp; Docker","text":"<ul> <li>Compilation des images</li> <li>G\u00e9n\u00e9ration de pyramides</li> <li>Ex\u00e9cution d'une stack avec le serveur</li> </ul>"},{"location":"docker/build/","title":"Compilation des images applicatives","text":"<p>L'installation des applicatifs s'appuie sur les paquets debian disponibles au niveau des releases sur GitHub.</p> <p>Dans le cas de pr\u00e9sence d'un proxy, ajouter les arguments <code>--build-arg http_proxy=http://votre.proxy.fr:1234 --build-arg https_proxy=http://votre.proxy.fr:1234</code>.</p> <p>Les styles et les Tile Matrix Sets sont par d\u00e9faut ceux de la version 4.0. Il espossible de changer cela en pr\u00e9cisant les arguments <code>ROK4TILEMATRIXSETS_VERSION</code> et <code>ROK4STYLES_VERSION</code> :</p> <ul> <li>https://github.com/rok4/tilematrixsets/releases</li> <li>https://github.com/rok4/styles/releases</li> </ul>"},{"location":"docker/build/#compilation-de-limage-de-pre-generation","title":"Compilation de l'image de pr\u00e9-g\u00e9n\u00e9ration","text":"<p>Versions applicatives disponibles : https://github.com/rok4/pregeneration/releases</p> <p><code>docker build -t rok4/pregeneration:TAG --build-arg ROK4PREGENERATION_VERSION=TAG --build-arg ROK4COREPERL_VERSION=TAG -f pregeneration/debian11.Dockerfile  pregeneration/</code></p>"},{"location":"docker/build/#compilation-de-limage-de-generation","title":"Compilation de l'image de g\u00e9n\u00e9ration","text":"<p>Versions applicatives disponibles : https://github.com/rok4/generation/releases</p> <p><code>docker build -t rok4/generation:TAG --build-arg ROK4GENERATION_VERSION=TAG -f generation/debian11.Dockerfile  generation/</code></p>"},{"location":"docker/build/#compilation-de-limage-des-outils-de-gestion","title":"Compilation de l'image des outils de gestion","text":"<p>Versions applicatives disponibles : https://github.com/rok4/tools/releases</p> <p><code>docker build -t rok4/tools:TAG --build-arg ROK4TOOLS_VERSION=TAG --build-arg ROK4COREPERL_VERSION=TAG -f tools/debian11.Dockerfile  tools/</code></p>"},{"location":"docker/build/#compilation-de-limage-complete-de-generation","title":"Compilation de l'image compl\u00e8te de g\u00e9n\u00e9ration","text":"<p><code>docker build -t rok4/fullgeneration:TAG --build-arg ROK4PREGENERATION_VERSION=TAG --build-arg ROK4COREPERL_VERSION=TAG --build-arg ROK4GENERATION_VERSION=TAG --build-arg ROK4TOOLS_VERSION=TAG -f fullgeneration/debian11.Dockerfile fullgeneration/</code></p>"},{"location":"docker/build/#compilation-de-limage-du-serveur-de-diffusion","title":"Compilation de l'image du serveur de diffusion","text":"<p>Versions applicatives disponibles : https://github.com/rok4/server/releases</p> <p><code>docker build -t rok4/server:TAG --build-arg ROK4SERVER_VERSION=TAG -f server/debian11.Dockerfile server/</code></p>"},{"location":"docker/build/builder/","title":"Compilation des artefacts du projet ROK4 avec docker","text":""},{"location":"docker/build/builder/#compilation-des-images-de-compilation","title":"Compilation des images de compilation","text":"<pre><code>docker build -t rok4/builder:alpine3 -f alpine3.Dockerfile .\ndocker build -t rok4/builder:debian11 -f debian11.Dockerfile .\ndocker build -t rok4/builder:debian12 -f debian12.Dockerfile .\n</code></pre>"},{"location":"docker/build/builder/#generation-des-artefacts","title":"G\u00e9n\u00e9ration des artefacts","text":"<p>Il y a la possibilit\u00e9 de compiler le code local \u00e0 la machine, ou de r\u00e9cup\u00e9rer la version tagg\u00e9e sur GitHub. Pour du code local, il suffit de monter le code source du composant voulu dans <code>/sources/&lt;composant&gt;</code>. Exemples :</p> <pre><code># Depuis le code local\ndocker run --rm -v /home/ign/rok4/core-perl:/sources/core-perl -v /home/ign/rok4/:/artefacts rok4/builder:debian11 core-perl 1.0.0\n# Depuis le code sur GitHub\ndocker run --rm -v /home/ign/rok4/:/artefacts rok4/builder:debian11 core-perl 1.0.0\n</code></pre> <p>Dans les commandes suivantes, on montrera l'exemple de compilation depuis GitHub</p>"},{"location":"docker/build/builder/#projet-server","title":"Projet <code>server</code>","text":"<p>Commandes : </p> <pre><code>docker run --rm -v $PWD:/artefacts rok4/builder:debian11 server 4.0.0\ndocker run --rm -v $PWD:/artefacts rok4/builder:debian12 server 4.0.0\ndocker run --rm -v $PWD:/artefacts rok4/builder:alpine3 server 4.0.0\n</code></pre> <p>Artefacts :</p> <ul> <li><code>rok4-server-4.0.0-alpine3-amd64.tar.gz</code></li> <li><code>rok4-server-4.0.0-debian11-amd64.deb</code></li> <li><code>rok4-server-4.0.0-debian11-amd64.tar.gz</code></li> <li><code>rok4-server-4.0.0-debian12-amd64.deb</code></li> <li><code>rok4-server-4.0.0-debian12-amd64.tar.gz</code></li> </ul>"},{"location":"docker/build/builder/#projet-generation","title":"Projet <code>generation</code>","text":"<p>Commandes : </p> <pre><code>docker run --rm -v $PWD:/artefacts rok4/builder:debian11 generation 4.0.0\ndocker run --rm -v $PWD:/artefacts rok4/builder:debian12 generation 4.0.0\ndocker run --rm -v $PWD:/artefacts rok4/builder:alpine3 generation 4.0.0\n</code></pre> <p>Artefacts :</p> <ul> <li><code>rok4-generation-4.0.0-alpine3-amd64.tar.gz</code></li> <li><code>rok4-generation-4.0.0-debian11-amd64.deb</code></li> <li><code>rok4-generation-4.0.0-debian11-amd64.tar.gz</code></li> <li><code>rok4-generation-4.0.0-debian12-amd64.deb</code></li> <li><code>rok4-generation-4.0.0-debian12-amd64.tar.gz</code></li> </ul>"},{"location":"docker/build/builder/#projet-core-perl","title":"Projet <code>core-perl</code>","text":"<p>Commande : </p> <pre><code>docker run --rm -v $PWD:/artefacts rok4/builder:debian11 core-perl 1.0.0\n</code></pre> <p>Artefacts :</p> <ul> <li><code>librok4-core-perl-1.0.0-linux-all.deb</code></li> <li><code>librok4-core-perl-1.0.0-linux-all.tar.gz</code></li> </ul>"},{"location":"docker/build/builder/#projet-pregeneration","title":"Projet <code>pregeneration</code>","text":"<p>Commande : </p> <pre><code>docker run --rm -v $PWD:/artefacts rok4/builder:debian11 pregeneration 4.0.0\n</code></pre> <p>Artefacts :</p> <ul> <li><code>rok4-pregeneration-4.0.0-linux-all.deb</code></li> <li><code>rok4-pregeneration-4.0.0-linux-all.tar.gz</code></li> </ul>"},{"location":"docker/build/builder/#projet-tools","title":"Projet <code>tools</code>","text":"<p>Commande : </p> <pre><code>docker run --rm -v $PWD:/artefacts rok4/builder:debian11 tools 4.0.0\n</code></pre> <p>Artefacts :</p> <ul> <li><code>rok4-tools-4.0.0-linux-all.deb</code></li> <li><code>rok4-tools-4.0.0-linux-all.tar.gz</code></li> </ul>"},{"location":"docker/build/builder/#projet-styles","title":"Projet <code>styles</code>","text":"<p>Commande : </p> <pre><code>docker run --rm -v $PWD:/artefacts rok4/builder:debian11 styles 4.0\n</code></pre> <p>Artefacts :</p> <ul> <li><code>rok4-styles-4.0-linux-all.deb</code></li> <li><code>rok4-styles-4.0-linux-all.tar.gz</code></li> </ul>"},{"location":"docker/build/builder/#projet-tilematrixsets","title":"Projet <code>tilematrixsets</code>","text":"<p>Commande : </p> <pre><code>docker run --rm -v $PWD:/artefacts rok4/builder:debian11 tilematrixsets 4.0\n</code></pre> <p>Artefacts :</p> <ul> <li><code>rok4-tilematrixsets-4.0-linux-all.deb</code></li> <li><code>rok4-tilematrixsets-4.0-linux-all.tar.gz</code></li> </ul>"},{"location":"docker/build/builder/#projet-tippecanoe","title":"Projet <code>tippecanoe</code>","text":"<p>C'est un projet externe (https://github.com/mapbox/tippecanoe), dont les artefacts ne sont pas forc\u00e9ment disponibles au format requis. On va donc les compiler de la m\u00eame mani\u00e8re que les composants ROK4. Seul l'ex\u00e9cutable <code>tippecanoe</code> est n\u00e9cessaire</p> <p>Commandes : </p> <pre><code>docker run --rm -v $PWD:/artefacts rok4/builder:debian11 tippecanoe master\ndocker run --rm -v $PWD:/artefacts rok4/builder:debian12 tippecanoe master\ndocker run --rm -v $PWD:/artefacts rok4/builder:alpine3 tippecanoe master\n</code></pre> <p>Artefacts :</p> <ul> <li><code>tippecanoe-master-alpine3</code></li> </ul>"},{"location":"docker/build/fullgeneration/","title":"Suite compl\u00e8te de g\u00e9n\u00e9ration du projet ROK4 conteneuris\u00e9e","text":"<p>Cette image contient tous les outils de traitement et de gestion des pyramides de donn\u00e9es, c'est \u00e0 dire :</p> <ul> <li>les outil permettant d'\u00e9crire les scripts de g\u00e9n\u00e9ration ou de modification de pyramide ROK4 raster et vecteur. Ces outils font partie du projet, la documentation compl\u00e8te est disponible ici, avec le code source.</li> <li>les outils permettant la manipulation des donn\u00e9es images (reprojection, r\u00e9echantillonnage, superposition...) ainsi que la mise au format final des donn\u00e9es (\u00e9criture des dalles des pyramides ROK4). Ces outils font partie du projet, la documentation compl\u00e8te est disponible ici, avec le code source.</li> <li>les outils facilitant la gestion des pyramides (suppression, statistiques), la cr\u00e9ation de descripteur de couche par d\u00e9faut, ainsi qu'un outil de conversion bas\u00e9 sur les TMS. Ces outils font partie du projet, la documentation compl\u00e8te est disponible ici, avec le code source.</li> <li>l'outil tippecanoe, permettant le calcul des tuiles vectorielles</li> <li>la suite d'outil GDAL, permettant l'extraction des donn\u00e9es vecteur</li> </ul>"},{"location":"docker/build/fullgeneration/#utilisation","title":"Utilisation","text":"<p>Consulter les documentations sur les pages des images :</p> <ul> <li>rok4/pregeneration</li> <li>rok4/generation</li> <li>rok4/tools</li> </ul>"},{"location":"docker/build/generation/","title":"Outils de g\u00e9n\u00e9ration du projet ROK4 conteneuris\u00e9s","text":"<p>Cette image contient tous les binaires permettant d'ex\u00e9cuter les scripts g\u00e9n\u00e9r\u00e9s par les outils de pr\u00e9-g\u00e9n\u00e9ration, c'est \u00e0 dire :</p> <ul> <li>les outils permettant la manipulation des donn\u00e9es images (reprojection, r\u00e9echantillonnage, superposition...) ainsi que la mise au format final des donn\u00e9es (\u00e9criture des dalles des pyramides ROK4). Ces outils font partie du projet, la documentation compl\u00e8te est disponible ici, avec le code source.</li> <li>l'outil tippecanoe, permettant le calcul des tuiles vectorielles</li> <li>la suite d'outil GDAL, permettant l'extraction des donn\u00e9es vecteur</li> </ul>"},{"location":"docker/build/generation/#outils-du-projets","title":"Outils du projets","text":"<ul> <li>CACHE2WORK : passage d'une dalle de pyramide raster au format de travail (d\u00e9tuilage et d\u00e9compression)</li> <li>CHECKWORK : contr\u00f4le de la conformit\u00e9 d'une image de travail aux formats g\u00e9r\u00e9s par les outils</li> <li>COMPOSENTIFF : fusion d'images respectant une grille en une seule</li> <li>DECIMATENTIFF : assemblage d'images et d\u00e9cimation</li> <li>MANAGENODATA : identification du masque de donn\u00e9e et modification des pixels de nodata</li> <li>MERGE4TIFF : fusion de 4 images en carr\u00e9 et sous \u00e9chantillonnage</li> <li>MERGENTIFF : assemblage d'images, r\u00e9echantillonnage et reprojection</li> <li>OVERLAYNTIFF : superposition d'images de m\u00eame dimensions</li> <li>PBF2CACHE : conditionnement de fichiers PBF en une dalle de donn\u00e9e vecteur</li> <li>WORK2CACHE : passage d'une image au format de travail \u00e0 une dalle de pyramide raster (tuilage et compression)</li> </ul>"},{"location":"docker/build/generation/#outils-externes","title":"Outils externes","text":"<ul> <li>TIPPECANOE</li> <li>Suite GDAL</li> <li>WGET</li> </ul>"},{"location":"docker/build/generation/#exemple-dappel-dune-commande","title":"Exemple d'appel d'une commande","text":"<pre><code>docker run --rm \\\n    --user $(id -u):$(id -g) \\\n    -v $PWD/inputs:/inputs:ro \\\n    -v $PWD/output:/output \\\n    rok4/generation:develop-debian11 \\\n    mergeNtiff -f /inputs/conf.txt -p /inputs/pente.json -c zip -i lanczos -n -99999\n</code></pre> <p>Avec les fichiers :</p> <ul> <li>de configuration <code>./inputs/conf.txt</code> :</li> </ul> <pre><code>IMG /output/image.tif       EPSG:3857       700000   5807000 715000  5792000 20      20\nIMG /inputs/mnt.tif   IGNF:LAMB93     959997.500000000000     6565002.500000000000    964997.500000000000     6560002.500000000000    50.00000000000  50.00000000000\n</code></pre> <ul> <li>de style <code>./inputs/pente.json</code></li> <li>de donn\u00e9es MNT <code>./inputs/mnt.tif</code></li> </ul>"},{"location":"docker/build/generation/#exemple-dappel-dun-script-issu-de-la-pregeneration","title":"Exemple d'appel d'un script issu de la pr\u00e9g\u00e9n\u00e9ration","text":"<pre><code>docker run --rm \\\n    --user $(id -u):$(id -g) \\\n    -v $PWD/data:/data:ro \\\n    -v $PWD/pyramids:/pyramids \\\n    -v $PWD/scripts:/scripts \\\n    -v $PWD/common:/common \\\n    rok4/generation \\\n    bash /scripts/main.sh 10\n</code></pre> <p>Il existe des exemples complets d'utilisation des images de pr\u00e9g\u00e9n\u00e9ration et g\u00e9n\u00e9ration ici.</p>"},{"location":"docker/build/pregeneration/","title":"Outils de pr\u00e9g\u00e9n\u00e9ration du projet ROK4 conteneuris\u00e9s","text":"<p>Cette suite d'outil permet d'\u00e9crire les scripts de g\u00e9n\u00e9ration ou de modification de pyramide ROK4 raster et vecteur.</p> <p>La documentation compl\u00e8te est disponible ici, avec le code source.</p> <p>Il existe \u00e9galement des exemples complets d'utilisation des images de pr\u00e9g\u00e9n\u00e9ration et g\u00e9n\u00e9ration ici.</p>"},{"location":"docker/build/pregeneration/#outils","title":"Outils","text":"<ul> <li>BE4 : g\u00e9n\u00e9ration d'une pyramide ROK4 raster \u00e0 partir d'images g\u00e9or\u00e9ferenc\u00e9es ou par moissonnage d'un service WMS</li> <li>JOINCACHE : g\u00e9n\u00e9ration d'une pyramide ROK4 raster par assemblage de pyramides raster sources</li> <li>4ALAMO : g\u00e9n\u00e9ration d'une pyramide ROK4 vecteur \u00e0 partir de donn\u00e9es sur PostgreSQL ou de fichiers GeoJSON</li> <li>4HEAD : recalcul des niveaux du haut d'une pyramide raster \u00e0 partir d'un niveau de r\u00e9f\u00e9rence</li> <li>PYR2PYR : recopie d'une pyramide d'un stockage \u00e0 un autre</li> </ul>"},{"location":"docker/build/pregeneration/#exemple-dappel-dune-commande","title":"Exemple d'appel d'une commande","text":"<pre><code>docker run --rm \\\n    --user $(id -u):$(id -g) \\\n    -v $PWD/confs:/confs:ro \\\n    -v $PWD/data:/data:ro \\\n    -v $PWD/pyramids:/pyramids \\\n    -v $PWD/scripts:/scripts \\\n    -v $PWD/common:/common \\\n    rok4/pregeneration:${tag} \\\n    be4.pl --conf /confs/\n</code></pre> <p>Avec les fichiers :</p> <ul> <li>de configuration <code>./confs/bdortho.json</code> :</li> </ul> <pre><code>{\n    \"datasources\": [{\n        \"top\": \"0\",\n        \"bottom\": \"15\",\n        \"source\": {\n            \"type\": \"IMAGES\",\n            \"directory\": \"/data/\",\n            \"srs\": \"IGNF:LAMB93\"\n        }\n    }],\n    \"pyramid\": {\n        \"type\": \"GENERATION\",\n        \"name\": \"BDORTHO\",\n        \"compression\": \"jpg\",\n        \"tms\": \"PM.json\",\n        \"storage\": {\n            \"type\": \"FILE\",\n            \"root\": \"/pyramids/BDORTHO\"\n        },\n        \"nodata\": [255, 255, 255]\n    },\n    \"process\": {\n        \"directories\": {\n            \"scripts\": \"/scripts\",\n            \"local_tmp\": \"/tmp\",\n            \"shared_tmp\": \"/common\"\n        },\n        \"parallelization\": 2\n    }\n}\n</code></pre> <ul> <li>de donn\u00e9es : \u00e0 d\u00e9compresser dans <code>./data/</code> (1 Go en tout)<ul> <li>https://eu.ftp.opendatasoft.com/datacorsica/BDORTHO_2-0_RVB-5M00_JP2-E100_LAMB93_D02A_2016-01-01.7z</li> <li>https://eu.ftp.opendatasoft.com/datacorsica/BDORTHO_2-0_RVB-5M00_JP2-E100_LAMB93_D02B_2016-01-01.7z</li> </ul> </li> </ul>"},{"location":"docker/build/tools/","title":"Outils de gestion du projet ROK4 conteneuris\u00e9s","text":"<p>Cette suite d'outil facilite la gestion des pyramides (suppression, statistiques), la cr\u00e9ation de descripteur de couche par d\u00e9faut, ainsi qu'un outil de conversion bas\u00e9 sur les TMS.</p> <p>La documentation compl\u00e8te est disponible ici, avec le code source.</p>"},{"location":"docker/build/tools/#convert2json","title":"CONVERT2JSON","text":"<p>Cet outil convertit un descripteur de pyramide de l'ancien format (XML, extension .pyr) vers le nouveau (JSON).</p> <p><code>docker run --rm -v /home/ign/descriptors:/descriptors rok4/tools convert2json.pl /descriptors/pyramid.pyr</code></p> <p>Le nouveau descripteur <code>pyramid.json</code> est \u00e9crit \u00e0 c\u00f4t\u00e9 de l'ancien.</p>"},{"location":"docker/build/tools/#sup-pyr","title":"SUP-PYR","text":"<p>Cet outil supprime une pyramide \u00e0 partir de son descripteur. Pour une pyramide stock\u00e9e en fichier, il suffit de supprimer le dossier des donn\u00e9es. Dans le cas de stockage objet, le fichier liste est parcouru et les dalles sont supprim\u00e9es une par une.</p> <p>Exemple de suppression d'une pyramide fichier :</p> <pre><code>docker run --rm \\\n    -v /home/ign/pyramids:/pyramids \\\n    rok4/tools \\\n    sup-pyr.pl --pyramid file:///pyramids/bdortho.json\n</code></pre> <p>Exemple de suppression d'une pyramide S3 :</p> <pre><code>docker run --rm \\\n    -e ROK4_S3_URL=https://s3.storage.com \\\n    -e ROK4_S3_KEY=key \\\n    -e ROK4_S3_SECRETKEY=secretkey \\\n    rok4/tools \\\n    sup-pyr.pl --pyramid s3:///bucket_name/pyramids/bdortho.json\n</code></pre>"},{"location":"docker/build/tools/#create-layer","title":"CREATE-LAYER","text":"<p>Cet outil g\u00e9n\u00e8re un descripteur de couche pour le serveur ROK4 \u00e0 partir du descripteur de pyramide et du dossier des TileMatrixSets. La couche utilisera alors la pyramide en entr\u00e9e dans sa globalit\u00e9.</p> <pre><code>docker run --rm \\\n    -e ROK4_S3_URL=https://s3.storage.com \\\n    -e ROK4_S3_KEY=key \\\n    -e ROK4_S3_SECRETKEY=secretkey \\\n    rok4/tools \\\n    create-layer.pl --title \"Photographies a\u00e9riennes\" --pyramid s3:///bucket_name/pyramids/bdortho.json\n</code></pre>"},{"location":"docker/build/tools/#pyrolyse","title":"PYROLYSE","text":"<p>Cet outil g\u00e9n\u00e8re un fichier JSON contenant, pour les dalles et les tuiles, DATA ou MASK, la taille totale, le nombre, la taille moyenne minimale et maximale, au global et par niveau. Les tailles sont en octet et les mesures sont faites sur les vraies donn\u00e9es (list\u00e9es dans le fichier liste). Pour des donn\u00e9es vecteur, on ne compte que les tuiles de taille non nulle.</p> <p>Stockages g\u00e9r\u00e9s pour l'analyse des dalles : FICHIER, CEPH, S3, SWIFT Stockages g\u00e9r\u00e9s pour l'analyse des tuiles : FICHIER, SWIFT</p> <pre><code>docker run --rm \\\n    -e ROK4_S3_URL=https://s3.storage.com \\\n    -e ROK4_S3_KEY=key \\\n    -e ROK4_S3_SECRETKEY=secretkey \\\n    -v ./output:/output\n    rok4/tools \\\n    pyrolyse.pl --pyramid s3:///bucket_name/pyramids/bdortho.json --json /output/stats.json --slabs ALL --tiles ALL --perfs /output/perfs.txt\n</code></pre>"},{"location":"docker/build/tools/#tms-toolbox","title":"TMS-TOOLBOX","text":"<p>Ce outil permet de r\u00e9aliser de nombreuses conversion entre indices de dalles, de tuiles, requ\u00eates getTile ou getMap, liste de fichiers, g\u00e9om\u00e9trie WKT... gr\u00e2ce au TMS utilis\u00e9 (ne n\u00e9cessite pas de pyramide).</p> <pre><code>docker run --rm \\\n    -v ./input:/input\n    rok4/tools \\\n    tms-toolbox.pl --tms PM --from GEOM_FILE:/input/geom.wkt --to SLAB_INDICES --level 15 --slabsize 16x16\n</code></pre>"},{"location":"docker/run/datasets/","title":"Stacks de g\u00e9n\u00e9ration","text":"<p>La g\u00e9n\u00e9ration compl\u00e8te se fait en utilisant les images <code>rok4/pregeneration</code>, <code>rok4/generation</code> et <code>rok4/tools</code>, disponibles sur Docker Hub</p>"},{"location":"docker/run/datasets/#be4","title":"BE4","text":""},{"location":"docker/run/datasets/#outil","title":"Outil","text":"<ul> <li> <p>Options pour le choix des \u00e9tapes de g\u00e9n\u00e9ration</p> <ul> <li><code>--pregeneration</code> : \u00e9tape de g\u00e9n\u00e9ration des scripts</li> <li><code>--generation</code> : \u00e9tape d'ex\u00e9cution des scripts</li> <li><code>--layer</code> : \u00e9tape de g\u00e9n\u00e9ration du descripteur de couche</li> <li><code>--image</code> : \u00e9tape de compilation de l'image de la pyramide</li> <li><code>--all</code> : les 4 \u00e9tapes</li> </ul> </li> <li> <p>Options pour le choix du jeu de donn\u00e9es</p> <ul> <li><code>--ortho</code></li> <li><code>--alti</code></li> <li><code>--pente</code></li> </ul> </li> </ul>"},{"location":"docker/run/datasets/#jeux-de-donnees","title":"Jeux de donn\u00e9es","text":"Image de donn\u00e9es Commande \u00e0 lancer Dossier de pyramide <code>rok4/dataset:bdortho5m-martinique</code> <code>bash be4-generation.sh --all --ortho</code> <code>pyramids/BDORTHO</code> <code>rok4/dataset:pente-martinique</code> <code>bash be4-generation.sh --all --alti</code> <code>pyramids/ALTI</code> <code>rok4/dataset:bdalti-martinique</code> <code>bash be4-generation.sh --all --pente</code> <code>pyramids/PENTE</code>"},{"location":"docker/run/datasets/#4alamo","title":"4ALAMO","text":""},{"location":"docker/run/datasets/#outil_1","title":"Outil","text":"<ul> <li> <p>Options pour le choix des \u00e9tapes de g\u00e9n\u00e9ration</p> <ul> <li><code>--pregeneration</code> : \u00e9tape de g\u00e9n\u00e9ration des scripts</li> <li><code>--generation</code> : \u00e9tape d'ex\u00e9cution des scripts</li> <li><code>--layer</code> : \u00e9tape de g\u00e9n\u00e9ration du descripteur de couche</li> <li><code>--image</code> : \u00e9tape de compilation de l'image de la pyramide</li> <li><code>--all</code> : les 4 \u00e9tapes</li> </ul> </li> <li> <p>Options pour le choix du jeu de donn\u00e9es</p> <ul> <li><code>--limadm</code></li> </ul> </li> </ul>"},{"location":"docker/run/datasets/#jeux-de-donnees_1","title":"Jeux de donn\u00e9es","text":"Image de donn\u00e9es Commande \u00e0 lancer Dossier de pyramide <code>rok4/dataset:geofla-martinique</code> <code>bash 4alamo-generation.sh --all --limadm</code> <code>pyramids/LIMADM</code>"},{"location":"docker/run/datasets/#tile-matrix-sets-utilise","title":"Tile Matrix Sets utilis\u00e9","text":"<ul> <li>PM</li> <li>UTM20W84MART_1M_MNT</li> </ul>"},{"location":"docker/run/datasets/#details-sur-les-jeux-de-donnees","title":"D\u00e9tails sur les jeux de donn\u00e9es","text":"<p>Jeux disponibles sous forme d'images Docker sur Docker Hub</p>"},{"location":"docker/run/datasets/#rok4datasetbdalti-martinique","title":"rok4/dataset:bdalti-martinique","text":"<p>1 pyramide, 1 couche</p> <ul> <li>Type : pyramide raster<ul> <li>Zone : Martinique</li> <li>Tile Matrix Set : UTM20W84MART_1M_MNT</li> <li>Niveau du bas : 6 (25m)</li> <li>Source des donn\u00e9es : Alti (25m). Les donn\u00e9es (format ASC) doivent \u00eatre transform\u00e9es en TIF pour \u00eatre prise en charge par les outils de g\u00e9n\u00e9ration. Dans le dossier d\u00e9zipp\u00e9 :</li> </ul> </li> </ul> <pre><code>cd BDALTIV2/1_DONNEES_LIVRAISON_2020-06-00407/BDALTIV2_MNT_25M_ASC_WGS84UTM20_MART87_D972\ngdalbuildvrt BDALTIV2_2-0_25M_ASC_WGS84UTM20-MART87_D972_2015-10-21.vrt BDALTIV2_25M_MTQ_0675_1625_MNT_WGS84UTM20_MART87.asc BDALTIV2_25M_MTQ_0675_1650_MNT_WGS84UTM20_MART87.asc BDALTIV2_25M_MTQ_0700_1600_MNT_WGS84UTM20_MART87.asc BDALTIV2_25M_MTQ_0700_1625_MNT_WGS84UTM20_MART87.asc BDALTIV2_25M_MTQ_0700_1650_MNT_WGS84UTM20_MART87.asc BDALTIV2_25M_MTQ_0725_1600_MNT_WGS84UTM20_MART87.asc BDALTIV2_25M_MTQ_0725_1625_MNT_WGS84UTM20_MART87.asc BDALTIV2_25M_MTQ_0725_1650_MNT_WGS84UTM20_MART87.asc\ngdalwarp BDALTIV2_2-0_25M_ASC_WGS84UTM20-MART87_D972_2015-10-21.vrt BDALTIV2_2-0_25M_ASC_WGS84UTM20-MART87_D972_2015-10-21.tif\n</code></pre> <ul> <li> <p>Volume \u00e0 monter : /pyramids/ALTI</p> </li> <li> <p>Exemple de requ\u00eate \u00e0 jouer pour ajouter la couche (avec Get Feature Info activ\u00e9 sur la valeur du pixel)</p> </li> </ul> <pre><code>curl -X POST $ROK4SERVER_ENDPOINT/admin/layers/ALTI \\\n-H 'Content-Type: application/json; charset=utf-8' \\\n--data-binary @- &lt;&lt; EOF\n{\n   \"wms\" : {\n      \"authorized\" : true,\n      \"crs\" : [\n         \"IGNF:UTM20W84MART\",\n         \"CRS:84\",\n         \"IGNF:WGS84G\",\n         \"EPSG:3857\",\n         \"EPSG:4258\",\n         \"EPSG:4326\"\n      ]\n   },\n   \"tms\" : {\n      \"authorized\" : true\n   },\n   \"keywords\" : [\n      \"UTM20W84MART_1M_MNT\",\n      \"RASTER\"\n   ],\n   \"wmts\" : {\n      \"authorized\" : true\n   },\n   \"pyramids\" : [\n      {\n         \"top_level\" : \"0\",\n         \"path\" : \"/pyramids/ALTI/ALTI.json\",\n         \"bottom_level\" : \"6\"\n      }\n   ],\n   \"title\" : \"ALTI\",\n   \"resampling\" : \"nn\",\n   \"abstract\" : \"Diffusion de la donn\u00e9e ALTI.json\",\n   \"styles\" : [\n      \"normal\",\n      \"hypso\"\n   ],\n   \"get_feature_info\": {\n      \"type\": \"PYRAMID\"\n   }\n}\nEOF\n</code></pre>"},{"location":"docker/run/datasets/#rok4datasetpente-martinique","title":"rok4/dataset:pente-martinique","text":"<p>1 pyramide, 1 couche</p> <ul> <li> <p>Type : pyramide raster</p> <ul> <li>Zone : Martinique</li> <li>Tile Matrix Set : PM</li> <li>Niveau du bas : 13 (20m)</li> <li>Source des donn\u00e9es : Alti (250m)</li> </ul> </li> <li> <p>Volume \u00e0 monter : /pyramids/PENTE</p> </li> <li> <p>Exemple de requ\u00eate \u00e0 jouer pour ajouter la couche</p> </li> </ul> <pre><code>curl -X POST $ROK4SERVER_ENDPOINT/admin/layers/PENTE \\\n-H 'Content-Type: application/json; charset=utf-8' \\\n--data-binary @- &lt;&lt; EOF\n{\n   \"wms\" : {\n      \"authorized\" : true,\n      \"crs\" : [\n         \"EPSG:3857\",\n         \"CRS:84\",\n         \"IGNF:WGS84G\",\n         \"EPSG:3857\",\n         \"EPSG:4258\",\n         \"EPSG:4326\"\n      ]\n   },\n   \"abstract\" : \"Diffusion de la donn\u00e9e PENTE.json\",\n   \"title\" : \"PENTE\",\n   \"pyramids\" : [\n      {\n         \"bottom_level\" : \"13\",\n         \"path\" : \"/pyramids/PENTE/PENTE.json\",\n         \"top_level\" : \"0\"\n      }\n   ],\n   \"styles\" : [\n      \"normal\"\n   ],\n   \"tms\" : {\n      \"authorized\" : true\n   },\n   \"wmts\" : {\n      \"authorized\" : true\n   },\n   \"keywords\" : [\n      \"PM\",\n      \"RASTER\"\n   ]\n}\nEOF\n</code></pre>"},{"location":"docker/run/datasets/#rok4datasetbdortho5m-martinique","title":"rok4/dataset:bdortho5m-martinique","text":"<p>1 pyramides, 1 couches</p> <ul> <li> <p>Type : pyramide raster</p> <ul> <li>Zone : Martinique</li> <li>Tile Matrix Set : PM</li> <li>Niveau du bas : 15 (7m)</li> <li>Source des donn\u00e9es : BDOrtho (5m)</li> </ul> </li> <li> <p>Volume \u00e0 monter : /pyramids/BDORTHO</p> </li> <li> <p>Exemple de requ\u00eate \u00e0 jouer pour ajouter la couche</p> </li> </ul> <pre><code>curl -X POST $ROK4SERVER_ENDPOINT/admin/layers/BDORTHO \\\n-H 'Content-Type: application/json; charset=utf-8' \\\n--data-binary @- &lt;&lt; EOF\n{\n   \"title\" : \"BDORTHO\",\n   \"abstract\" : \"Diffusion de la donn\u00e9e BDORTHO.json\",\n   \"wmts\" : {\n      \"authorized\" : true\n   },\n   \"keywords\" : [\n      \"PM\",\n      \"RASTER\"\n   ],\n   \"tms\" : {\n      \"authorized\" : true\n   },\n   \"styles\" : [\n      \"normal\"\n   ],\n   \"pyramids\" : [\n      {\n         \"path\" : \"/pyramids/BDORTHO/BDORTHO.json\",\n         \"top_level\" : \"0\",\n         \"bottom_level\" : \"15\"\n      }\n   ],\n   \"wms\" : {\n      \"crs\" : [\n         \"EPSG:3857\",\n         \"CRS:84\",\n         \"IGNF:WGS84G\",\n         \"EPSG:3857\",\n         \"EPSG:4258\",\n         \"EPSG:4326\"\n      ],\n      \"authorized\" : true\n   }\n}\nEOF\n</code></pre>"},{"location":"docker/run/datasets/#rok4datasetgeofla-martinique","title":"rok4/dataset:geofla-martinique","text":"<p>1 pyramide, 1 couche</p> <ul> <li> <p>Type : pyramide vecteur</p> <ul> <li>Zone : Martinique</li> <li>Tile Matrix Set : PM</li> <li>Niveau du bas : 18</li> <li>Source des donn\u00e9es : GEOFLA</li> </ul> </li> <li> <p>Volume \u00e0 monter : /pyramids/LIMADM</p> </li> <li> <p>Exemple de requ\u00eate \u00e0 jouer pour ajouter la couche</p> </li> </ul> <pre><code>curl -X POST $ROK4SERVER_ENDPOINT/admin/layers/LIMADM \\\n-H 'Content-Type: application/json; charset=utf-8' \\\n--data-binary @- &lt;&lt; EOF\n{\n   \"tms\" : {\n      \"authorized\" : true\n   },\n   \"keywords\" : [\n      \"PM\",\n      \"RASTER\"\n   ],\n   \"abstract\" : \"Diffusion de la donn\u00e9e LIMADM.json\",\n   \"title\" : \"LIMADM\",\n   \"pyramids\" : [\n      {\n         \"top_level\" : \"0\",\n         \"path\" : \"/pyramids/LIMADM/LIMADM.json\",\n         \"bottom_level\" : \"18\"\n      }\n   ]\n}\nEOF\n</code></pre>"},{"location":"docker/run/datasets/#rok4datasetminio","title":"rok4/dataset:minio","text":"<p>Cette image, ayant pour base <code>minio/minio</code>, est un styockage S3 contenant les styles, les tile matrix sets, les pyramides et les descripteurs de couche. Ce stockage centralis\u00e9 permet d'exploiter le fonctionnement du serveur ROK4 5.0.0.</p> <p>Ce stockage se lance via la commande <code>docker run -p 9000:9000 -p 9001:9001 rok4/dataset:minio</code> et une interface graphique de gestion est disponible \u00e0 l'URL <code>http://localhost:9001/buckets</code> (acc\u00e8s : rok4 / rok4S3storage)</p> <p>Ce stockage contient les buckets suivants :</p> <ul> <li><code>styles</code> : tous les styles du projet ROK4</li> <li><code>tilematrixsets</code> : tous les tile matrix sets du projet ROK4</li> <li><code>pyramids</code> : les pyramides BDORTHO, ALTI, PENTE et LIMADM</li> <li><code>layers</code> : l'objet liste <code>list.txt</code> et les descripteurs de couche BDORTHO, ALTI, PENTE et LIMADM</li> </ul>"},{"location":"docker/run/server/","title":"Stacks de diffusion","text":"<p>Le serveur permet la diffusion des donn\u00e9es conditionn\u00e9es sous forme de pyramide raster ou vecteur selon les protocoles Web Map Service, Web Map Tiled Service et Tile Map Service</p> <p>La documentation compl\u00e8te est disponible ici, avec le code source.</p>"},{"location":"docker/run/server/#lancement-rapide","title":"Lancement rapide","text":""},{"location":"docker/run/server/#version-4","title":"Version 4+","text":"<pre><code>docker run --publish 9000:9000 rok4/server:4.1.0\n</code></pre>"},{"location":"docker/run/server/#version-5","title":"Version 5+","text":"<pre><code>docker run --publish 9000:9000 -e SERVER_LOGOUTPUT=standard_output rok4/server:5.0.1\n</code></pre>"},{"location":"docker/run/server/#configuration-personnalisee","title":"Configuration personnalis\u00e9e","text":"<p>Liste des variables d'environnement inject\u00e9es dans les fichiers de configuration du serveur (et valeurs par d\u00e9faut) :</p> <ul> <li><code>server.json</code><ul> <li>SERVER_LOGLEVEL (<code>error</code>)</li> <li>SERVER_LOGOUTPUT (<code>standard_output_stream_for_errors</code>, valide pour la version 4, surcharger avec <code>standard_output</code> pour la version 5)</li> <li>SERVER_NBTHREAD (<code>4</code>)</li> <li>SERVER_CACHE_SIZE (<code>1000</code>)</li> <li>SERVER_CACHE_VALIDITY (<code>10</code>)</li> <li>SERVER_LAYERS (<code>/etc/rok4/layers</code>)</li> <li>SERVER_STYLES (<code>/etc/rok4/styles</code>)</li> <li>SERVER_TMS (<code>/etc/rok4/tilematrixsets</code>)</li> </ul> </li> <li>SERVER_BACKLOG (<code>0</code>)</li> <li><code>services.json</code></li> <li>SERVICE_TITLE (<code>WMS/WMTS/TMS server</code>)</li> <li>SERVICE_ABSTRACT (<code>This server provide WMS, WMTS and TMS raster and vector data broadcast</code>)</li> <li>SERVICE_PROVIDERNAME (<code>ROK4 Team</code>)</li> <li>SERVICE_PROVIDERSITE (<code>https://github.com/rok4/documentation</code>)</li> <li>SERVICE_KEYWORDS (<code>WMS,WMTS,TMS,Docker</code>)</li> <li>SERVICE_FEE (<code>none</code>)</li> <li>SERVICE_ACCESSCONSTRAINT (<code>none</code>)</li> <li>SERVICE_INDIVIDUALNAME (``)</li> <li>SERVICE_INDIVIDUALPOSITION (``)</li> <li>SERVICE_VOICE (``)</li> <li>SERVICE_FACSIMILE (``)</li> <li>SERVICE_ADDRESSTYPE (``)</li> <li>SERVICE_DELIVERYPOINT (``)</li> <li>SERVICE_CITY (``)</li> <li>SERVICE_ADMINISTRATIVEAREA (``)</li> <li>SERVICE_POSTCODE (``)</li> <li>SERVICE_COUNTRY (``)</li> <li>SERVICE_ELECTRONICMAILADDRESS (``)</li> <li>SERVICE_WMS (<code>WMS service</code>)</li> <li>SERVICE_MAXWIDTH (<code>10000</code>)</li> <li>SERVICE_MAXHEIGHT (<code>10000</code>)</li> <li>SERVICE_LAYERLIMIT (<code>2</code>)</li> <li>SERVICE_MAXTILEX (<code>256</code>)</li> <li>SERVICE_MAXTILEY (<code>256</code>)</li> <li>SERVICE_FORMATLIST (<code>image/jpeg,image/png,image/tiff,image/geotiff,image/x-bil;bits=32</code>)</li> <li>SERVICE_GLOBALCRSLIST (<code>CRS:84,EPSG:3857</code>)</li> <li>SERVICE_FULLYSTYLING (<code>true</code>)</li> <li>SERVICE_INSPIRE (<code>false</code>)</li> <li>SERVICE_METADATAWMS_URL (``)</li> <li>SERVICE_METADATAWMS_TYPE (``)</li> <li>SERVICE_METADATAWMS_URL (``)</li> <li>SERVICE_METADATAWMS_TYPE (``)</li> <li>SERVICE_WMTSSUPPORT (<code>true</code>)</li> <li>SERVICE_TMSSUPPORT (<code>true</code>)</li> <li>SERVICE_WMSSUPPORT (<code>true</code>)</li> <li>SERVICE_WMTS_ENDPOINT (<code>http://localhost/wmts</code>)</li> <li>SERVICE_TMS_ENDPOINT (<code>http://localhost/tms</code>)</li> <li>SERVICE_WMS_ENDPOINT (<code>http://localhost/wms</code>)</li> </ul> <p>Il est possible de surcharger chacune de ces valeurs de configuration via des variables d'environnement. Exemple :</p> <p><code>docker run --publish 9000:9000 -e SERVICE_TITLE='\"Mon serveur ROK4\"' rok4/server</code></p> <p>Afin de d\u00e9finir des valeurs avec des espaces (comme dans l'exemple), il faut bien encapsuler la cha\u00eene avec des des doubles quotes et des simples.</p> <p>Il est aussi possible de d\u00e9finir toutes les variables d'environnement dans un fichier (une variable par ligne) et de faire l'appel suivant :</p> <p><code>docker run --publish 9000:9000 --env-file=custom_env rok4/server</code></p> <p>En d\u00e9finissant la variable d'environnement <code>IMPORT_LAYERS_FROM_PYRAMIDS</code> \u00e0 une valeur non nulle, le script de lancement du serveur copie les fichiers avec l'extension <code>.lay.json</code> trouv\u00e9s dans le dossier <code>/pyramids</code> dans le dossier <code>/layers</code> (en supprimant le .lay du nom).</p>"},{"location":"docker/run/server/#lancement-au-sein-dune-stack-avec-stockage-fichier-version-4","title":"Lancement au sein d'une stack avec stockage fichier (version 4)","text":"<p>Avec les fichiers :</p> <ul> <li><code>docker-compose.yaml</code></li> </ul> <pre><code>version: \"3\"\nservices:\n  front:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n    links:\n      - middle\n    volumes:\n      - ./nginx.conf:/etc/nginx/conf.d/default.conf\n\n  middle:\n    image: rok4/server:4.1.0\n    volumes:\n      - volume-limadm:/pyramids/LIMADM\n      - volume-alti:/pyramids/ALTI\n      - volume-ortho:/pyramids/BDORTHO\n      - volume-pente:/pyramids/PENTE\n    environment:\n      - IMPORT_LAYERS_FROM_PYRAMIDS=oui\n      - SERVICE_WMTS_ENDPOINT=http://localhost/wmts\n      - SERVICE_WMS_ENDPOINT=http://localhost/wms\n      - SERVICE_TMS_ENDPOINT=http://localhost/tms\n    depends_on:\n      - data-limadm\n      - data-alti\n      - data-pente\n      - data-ortho\n\n  data-limadm:\n    image: rok4/dataset:geofla-martinique\n    volumes:\n      - volume-limadm:/pyramids/LIMADM\n\n  data-alti:\n    image: rok4/dataset:bdalti-martinique\n    volumes:\n      - volume-alti:/pyramids/ALTI\n\n  data-pente:\n    image: rok4/dataset:pente-martinique\n    volumes:\n      - volume-pente:/pyramids/PENTE\n\n  data-ortho:\n    image: rok4/dataset:bdortho5m-martinique\n    volumes:\n      - volume-ortho:/pyramids/BDORTHO\n\nvolumes:\n  volume-limadm:\n  volume-alti:\n  volume-ortho:\n  volume-pente:\n\n</code></pre> <ul> <li>Fichier <code>nginx.conf</code> :</li> </ul> <pre><code>upstream server { server middle:9000; }\n\nserver {\n    listen 80 default_server;\n\n    location / {\n        fastcgi_pass server;\n        include fastcgi_params;\n        add_header 'Access-Control-Allow-Origin' '*';\n    }\n}\n</code></pre> <p>Cette stack comprend :</p> <ul> <li>Un front NGINX, permettant l'interrogation du serveur en HTTP, avec une configuration minimale</li> <li>Un serveur ROK4</li> <li>Des jeux de donn\u00e9es, disponible sous forme d'images</li> </ul> <p>Les capacit\u00e9s des 3 services rendus (WMS, WMTS et TMS) sont disponibles aux URL :</p> <ul> <li>WMS : http://localhost/wms?SERVICE=WMS&amp;REQUEST=GetCapabilities&amp;VERSION=1.3.0</li> <li>WMTS : http://localhost/wmts?SERVICE=WMTS&amp;REQUEST=GetCapabilities&amp;VERSION=1.0.0</li> <li>TMS : http://localhost/tms/1.0.0</li> <li>Routes de sant\u00e9 (\u00e0 partir de la version <code>4.1.0</code>) : </li> <li>http://localhost/healthcheck</li> <li>http://localhost/healthcheck/info</li> <li>http://localhost/healthcheck/threads</li> <li>http://localhost/healthcheck/depends</li> </ul> <p>Une stack plus compl\u00e8te incluant un visualisateur est disponible ici.</p>"},{"location":"docker/run/server/#lancement-au-sein-dune-stack-avec-stockage-s3-version-5","title":"Lancement au sein d'une stack avec stockage S3 (version 5)","text":"<p>Avec les fichiers :</p> <ul> <li><code>docker-compose.yaml</code></li> </ul> <pre><code>version: \"3\"\nservices:\n  front:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n    links:\n      - middle\n    volumes:\n      - ./nginx.conf:/etc/nginx/conf.d/default.conf\n\n  middle:\n    image: rok4/server:5.0.1\n    depends_on:\n      - storage\n    environment:\n      - SERVER_LOGLEVEL=info\n      - IMPORT_LAYERS_FROM_PYRAMIDS=non\n      - SERVICE_WMTS_ENDPOINT=http://localhost:8082/data/wmts\n      - SERVICE_WMS_ENDPOINT=http://localhost:8082/data/wms\n      - SERVICE_TMS_ENDPOINT=http://localhost:8082/data/tms\n      - ROK4_S3_SECRETKEY=rok4S3storage\n      - ROK4_S3_KEY=rok4\n      - ROK4_S3_URL=http://storage:9000\n      - SERVER_LOGOUTPUT=standard_output\n      - SERVER_LAYERS=s3://layers/list.txt\n      - SERVER_STYLES=s3://styles\n      - SERVER_TMS=s3://tilematrixsets\n\n  storage:\n    image: rok4/dataset:minio\n    command: server /data --console-address \":9001\"\n    ports:\n      - \"9000:9000\"\n      - \"9001:9001\"\n\n</code></pre> <ul> <li>Fichier <code>nginx.conf</code> :</li> </ul> <pre><code>upstream server { server middle:9000; }\n\nserver {\n    listen 80 default_server;\n\n    location / {\n        fastcgi_pass server;\n        include fastcgi_params;\n        add_header 'Access-Control-Allow-Origin' '*';\n    }\n}\n</code></pre> <p>Cette stack comprend :</p> <ul> <li>Un front NGINX, permettant l'interrogation du serveur en HTTP, avec une configuration minimale</li> <li>Des serveurs ROK4</li> <li>Un stockage S3, disponible sous forme d'image, tag <code>minio</code></li> </ul> <p>Les capacit\u00e9s des 3 services rendus (WMS, WMTS et TMS) sont disponibles aux URL :</p> <ul> <li>WMS : http://localhost/wms?SERVICE=WMS&amp;REQUEST=GetCapabilities&amp;VERSION=1.3.0</li> <li>WMTS : http://localhost/wmts?SERVICE=WMTS&amp;REQUEST=GetCapabilities&amp;VERSION=1.0.0</li> <li>TMS : http://localhost/tms/1.0.0</li> <li>Routes de sant\u00e9 : </li> <li>http://localhost/healthcheck</li> <li>http://localhost/healthcheck/info</li> <li>http://localhost/healthcheck/threads</li> <li>http://localhost/healthcheck/depends</li> <li>Interface du minio : http://localhost:9000 (acc\u00e8s : rok4 / rok4S3storage)</li> </ul> <p>Une stack plus compl\u00e8te incluant un visualisateur est disponible ici.</p>"},{"location":"generation/","title":"Suite d'outils de g\u00e9n\u00e9ration de dalles raster et vecteur","text":"<p>Les outils de g\u00e9n\u00e9ration font partie du projet open-source ROK4 (sous licence CeCILL-C) d\u00e9velopp\u00e9 par les \u00e9quipes du projet G\u00e9oportail(@Geoportail) de l\u2019Institut National de l\u2019Information G\u00e9ographique et Foresti\u00e8re (@IGNFrance). Ils sont \u00e9crits en C++ et permettent le calcul des dalles de donn\u00e9es composant les pyramides exploit\u00e9es par le serveur.</p> <p>Ces outils sont appel\u00e9s dans les scripts g\u00e9n\u00e9r\u00e9s par les outils de pr\u00e9g\u00e9n\u00e9ration.</p>"},{"location":"generation/#installation-via-le-paquet-debian","title":"Installation via le paquet debian","text":"<p>T\u00e9l\u00e9charger les paquets sur GitHub : * (les outils de g\u00e9n\u00e9ration)[https://github.com/rok4/generation/releases/] * (les styles)[https://github.com/rok4/styles/releases/]</p> <pre><code>apt install ./rok4-styles-&lt;version&gt;-linux-all.deb\napt install ./rok4-generation-&lt;version&gt;-ubuntu20.04-amd64.deb\n</code></pre>"},{"location":"generation/#installation-depuis-les-sources","title":"Installation depuis les sources","text":""},{"location":"generation/#recuperation-du-projet","title":"R\u00e9cup\u00e9ration du projet","text":"<p><code>git clone --recursive https://github.com/rok4/generation</code></p>"},{"location":"generation/#variables-cmake","title":"Variables CMake","text":"<ul> <li><code>CMAKE_INSTALL_PREFIX</code> : dossier d'installation du serveur. Valeur par d\u00e9faut : <code>/usr/local</code></li> <li><code>BUILD_VERSION</code> : version des outils compil\u00e9s. Valeur par d\u00e9faut : <code>0.0.0</code></li> <li><code>OBJECT_ENABLED</code> : active la compilation des classes de gestion des stockages objet. Valeur par d\u00e9faut : <code>0</code>, <code>1</code> pour activer.</li> <li><code>KDU_ENABLED</code> : active la compilation avec le driver Kakadu pour la lecture des fichiers JPEG2000. Valeur par d\u00e9faut : <code>0</code>, <code>1</code> pour activer.</li> <li><code>KDU_THREADING</code> : renseigne le niveau de parall\u00e9lisation dans le cas de l'utilisation de Kakadu. Valeur par d\u00e9faut : <code>0</code></li> <li><code>DEBUG_BUILD</code> : active la compilation en mode debug. Valeur par d\u00e9faut : <code>0</code>, <code>1</code> pour activer.</li> </ul>"},{"location":"generation/#dependances-a-la-compilation","title":"D\u00e9pendances \u00e0 la compilation","text":"<ul> <li>Submodule GIT<ul> <li><code>https://github.com/rok4/core-cpp</code></li> </ul> </li> <li>Paquets debian<ul> <li>zlib1g-dev</li> <li>libcurl4-openssl-dev</li> <li>libproj-dev</li> <li>libssl-dev</li> <li>libturbojpeg0-dev</li> <li>libjpeg-dev</li> <li>libc6-dev</li> <li>libjson11-1-dev</li> <li>libboost-log-dev</li> <li>libboost-filesystem-dev</li> <li>libboost-system-dev</li> <li>libsqlite3-dev</li> <li>Si <code>KDU_ENABLED</code> \u00e0 0<ul> <li>libopenjp2-7-dev</li> </ul> </li> <li>libpng-dev</li> <li>libtiff5-dev</li> <li>Si <code>OBJECT_ENABLED</code> \u00e0 1<ul> <li>librados-dev</li> </ul> </li> </ul> </li> </ul>"},{"location":"generation/#compilation-et-installation","title":"Compilation et installation","text":"<pre><code>mkdir build &amp;&amp; cd build\ncmake -DCMAKE_INSTALL_PREFIX=/ -DBUILD_VERSION=0.0.1 -DOBJECT_ENABLED=1 ..\nmake\nmake install\n</code></pre>"},{"location":"generation/#variables-denvironnement-utilisees-dans-les-librairies-de-core-cpp","title":"Variables d'environnement utilis\u00e9es dans les librairies de core-cpp","text":"<p>Leur d\u00e9finition est contr\u00f4l\u00e9e \u00e0 l'usage.</p> <ul> <li>Pour le stockage CEPH<ul> <li><code>ROK4_CEPH_CONFFILE</code></li> <li><code>ROK4_CEPH_USERNAME</code></li> <li><code>ROK4_CEPH_CLUSTERNAME</code></li> </ul> </li> <li>Pour le stockage S3<ul> <li><code>ROK4_S3_URL</code></li> <li><code>ROK4_S3_KEY</code></li> <li><code>ROK4_S3_SECRETKEY</code></li> </ul> </li> <li>Pour le stockage SWIFT<ul> <li><code>ROK4_SWIFT_AUTHURL</code></li> <li><code>ROK4_SWIFT_USER</code></li> <li><code>ROK4_SWIFT_PASSWD</code></li> <li><code>ROK4_SWIFT_PUBLICURL</code></li> <li>Si authentification via Swift<ul> <li><code>ROK4_SWIFT_ACCOUNT</code></li> </ul> </li> <li>Si connection via keystone (pr\u00e9sence de <code>ROK4_KEYSTONE_DOMAINID</code>)<ul> <li><code>ROK4_KEYSTONE_DOMAINID</code></li> <li><code>ROK4_KEYSTONE_PROJECTID</code></li> </ul> </li> <li><code>ROK4_SWIFT_TOKEN_FILE</code> afin de sauvegarder le token d'acc\u00e8s, et ne pas le demander si ce fichier en contient un</li> </ul> </li> <li>Pour configurer l'usage de libcurl (int\u00e9raction SWIFT et S3)<ul> <li><code>ROK4_SSL_NO_VERIFY</code></li> <li><code>HTTP_PROXY</code></li> <li><code>HTTPS_PROXY</code></li> <li><code>NO_PROXY</code></li> </ul> </li> </ul>"},{"location":"generation/#presentation-des-outils","title":"Pr\u00e9sentation des outils","text":"<p>\u00c9crits en C++.</p> <p>Voici la l\u00e9gende utilis\u00e9e pour identifi\u00e9 le format des images dans les documentations par commande :</p> <p></p>"},{"location":"generation/#cache2work","title":"CACHE2WORK","text":"<p>Cet outil lit une dalle ROK4 raster et la convertit en une image TIFF non tuil\u00e9e, dont on peut choisir la compression.</p>"},{"location":"generation/#usage","title":"Usage","text":"<p><code>cache2work -c &lt;COMPRESSION&gt; &lt;INPUT FILE/OBJECT&gt; &lt;OUTPUT FILE&gt; [-d]</code></p> <ul> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul>"},{"location":"generation/#exemples","title":"Exemples","text":"<ul> <li><code>cache2work -c zip /home/IGN/slab.tif /home/IGN/workimage.tif</code></li> <li><code>cache2work -c zip ceph://ign/slab /home/IGN/workimage.tif</code></li> </ul>"},{"location":"generation/#checkwork","title":"CHECKWORK","text":"<p>Cet outil prend seulement une image en entr\u00e9e et tente de la lire. Cela permet de d\u00e9tecter d'\u00e9ventuelles erreurs.</p>"},{"location":"generation/#usage_1","title":"Usage","text":"<p><code>checkWork &lt;INPUT FILE&gt; [-h]</code></p> <ul> <li><code>-h</code> : Affiche l'aide</li> </ul>"},{"location":"generation/#exemple","title":"Exemple","text":"<ul> <li><code>checkWork /home/IGN/source.tif</code></li> </ul>"},{"location":"generation/#composentiff","title":"COMPOSENTIFF","text":"<p>Cet outil fusionne plusieurs images dispos\u00e9es en un dallage r\u00e9gulier en une seule. Il est utilis\u00e9 lorsqu'une image est moissonn\u00e9e en plusieurs fois \u00e0 cause de sa taille, pour recomposer l'image d\u00e9sir\u00e9e. Toutes les images en entr\u00e9e doivent voir les m\u00eame dimensions et les m\u00eame caract\u00e9ristiques.</p>"},{"location":"generation/#usage_2","title":"Usage","text":"<p><code>composeNtiff -s &lt;DIRECTORY&gt; -g &lt;VAL&gt; &lt;VAL&gt; -c &lt;VAL&gt; &lt;OUTPUT FILE&gt; [-d]</code></p> <ul> <li><code>-s</code> : dossier contenant toutes les images du quadrillage. Elles sont lues dans l'ordre alpha-num\u00e9rique. Si il a plus d'images que n\u00e9cessaires, les derni\u00e8res ne sont pas utilis\u00e9es</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-g &lt;INTEGER&gt; &lt;INTEGER&gt;</code> : largeur et hauteur de la grille en nombre d'images</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul>"},{"location":"generation/#exemple_1","title":"Exemple","text":"<ul> <li><code>composeNtiff -c zip -s /home/IGN/tiles/ -g 4 4 /home/IGN/workimage.tif</code></li> </ul>"},{"location":"generation/#decimatentiff","title":"DECIMATENTIFF","text":"<p>Cet outil g\u00e9n\u00e8re une image \u00e0 partir de plusieurs image en phase entre elles (m\u00eame r\u00e9solution et m\u00eame d\u00e9calage) en ne gardant qu'un pixel sur N. Cet outil est utilis\u00e9 pour g\u00e9n\u00e9rer une dalle d'un niveau \u00e0 partir de dalles d'un niveau inf\u00e9rieur dans le cas d'une pyramide utilisant un TileMatrixSet \"plus proche voisin\" (une valeur de la donn\u00e9e source n'est pas interpol\u00e9e et se retrouve dans les niveaux sup\u00e9rieurs). Le centre d'un pixel de l'image de sortie doit \u00eatre align\u00e9 avec un pixel d'une image en entr\u00e9e. Le niveau de d\u00e9cimation (N) est d\u00e9duit de la diff\u00e9rence de r\u00e9solution entre les entr\u00e9es et la sortie.</p> <p>Les informations sur les canaux (nombre, taille en bits et format) peuvent :</p> <ul> <li>\u00eatre fournies et des conversions \u00e0 la vol\u00e9e seront potentiellement faites sur les images n'ayant pas les m\u00eames</li> <li>ne pas \u00eatre fournies, auquel cas toutes les images en entr\u00e9e doivent avoir les m\u00eame caract\u00e9ristiques</li> </ul>"},{"location":"generation/#usage_3","title":"Usage","text":"<p><code>decimateNtiff -c &lt;COMPRESSION&gt; &lt;INPUT FILE&gt; &lt;OUTPUT FILE&gt;  [-d]</code></p> <ul> <li><code>-f &lt;FILE&gt;</code> : fichier de configuration contenant l'image en sortie et la liste des images en entr\u00e9e, avec leur g\u00e9or\u00e9f\u00e9rencement et les masques \u00e9ventuels</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-n &lt;COLOR&gt;</code> : couleur de nodata, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules (exemple : 255,255,255 pour du blanc sans transparence)</li> <li><code>-a &lt;FORMAT&gt;</code> : format des canaux : float, uint</li> <li><code>-b &lt;INTEGER&gt;</code> : nombre de bits pour un canal : 8, 32</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>Les options a, b et s doivent \u00eatre toutes fournies ou aucune.</p>"},{"location":"generation/#le-fichier-de-configuration","title":"Le fichier de configuration","text":"<p>Une ligne du fichier de configuration a la forme suivante : <code>IMG &lt;CHEMIN&gt; &lt;XMIN&gt; &lt;YMAX&gt; &lt;XMAX&gt; &lt;YMIN&gt; &lt;RESX&gt; &lt;RESY&gt;</code> pour une image de donn\u00e9e ou <code>MSK &lt;CHEMIN&gt;</code> pour une image de masque.</p> <p>Par exemple : <code>IMG /home/IGN/image.tif 10 150 110 50 0.5 0.5</code>. Si  on veut associer \u00e0 cette image un masque, on mettra sur la ligne suivante <code>MSK /home/IGN/masque.tif</code>. Une ligne de masque doit toujours suivre une ligne d'image.</p> <p>La premi\u00e8re image list\u00e9e sera la sortie (avec \u00e9ventuellement son masque). Les suivantes sont les images en entr\u00e9e. La premi\u00e8re entr\u00e9e peut \u00eatre une image de fond, compatible avec celle de sortie et non avec les autres images en entr\u00e9e (qui seront d\u00e9cim\u00e9es). Seulement dans ce cas nous avons une entr\u00e9e non compatible avec les autres.</p> <p>Exemple de configuration :</p> <pre><code>IMG /home/IGN/IMAGE.tif -499    1501    1501    -499    2       2\nMSK /home/IGN/MASK.tif\nIMG /home/IGN/sources/imagefond.tif -499    1501    1501    -499    2       2\nMSK /home/IGN/sources/maskfond.tif\nIMG /home/IGN/sources/image1.tif 0       1000    1000    0       1       1\nIMG /home/IGN/sources/image2.tif 500     1500    1500    500     1       1\nMSK /home/IGN/sources/mask2.tif\n</code></pre> <p>L'image <code>/home/IGN/IMAGE.tif</code> sera \u00e9crite ainsi que son masque associ\u00e9 <code>/home/IGN/MASK.tif</code></p>"},{"location":"generation/#exemple_2","title":"Exemple","text":"<ul> <li><code>decimateNtiff -f conf.txt -c zip -n -99999</code></li> </ul>"},{"location":"generation/#managenodata","title":"MANAGENODATA","text":"<p>Cet outil permet d'identifier et de modifier une couleur dans une image consid\u00e9r\u00e9e comme du nodata. Il permet \u00e9galement d'\u00e9crire le masque associ\u00e9 \u00e0 l'image sur la base de cette valeur de nodata, et de r\u00e9server cette valeur au nodata (modification des pixels de donn\u00e9es de cette couleur en une autre). Dans ce dernier cas, un pixel de nodata est un pixel de la couleur cible \"reli\u00e9 au bord\" (on proprage le nodata depuis les pixels de la couleur cible en bord d'image).</p>"},{"location":"generation/#usage_4","title":"Usage","text":"<p><code>manageNodata -target &lt;VAL&gt; [-tolerance &lt;VAL&gt;] [-touch-edges] -format &lt;VAL&gt; [-nodata &lt;VAL&gt;] [-data &lt;VAL&gt;] &lt;INPUT FILE&gt; [&lt;OUTPUT FILE&gt;] [-mask-out &lt;VAL&gt;] [-d]</code></p> <ul> <li><code>-target &lt;COLOR&gt;</code> : couleur cible, permettant d'identifier le nodata</li> <li><code>-tolerance &lt;INTEGER&gt;</code> : delta de tol\u00e9rance autour de la couleur cible</li> <li><code>-touche-edges</code> : pr\u00e9cise que le nodata a la couleur cible et \"est reli\u00e9 au bord\".</li> <li><code>-data &lt;COLOR&gt;</code> : nouvelle couleur pour la donn\u00e9e, afin de r\u00e9server la couleur cible au nodata. N'a de sens qu'avec l'option -touch-edges</li> <li><code>-nodata &lt;COLOR&gt;</code> : nouvelle couleur pour le nodata</li> <li><code>-mask-out &lt;FILE&gt;</code> : chemin vers le masque \u00e0 \u00e9crire, associ\u00e9 \u00e0 l'image en entr\u00e9e. Si aucun pixel de nodata n'est trouv\u00e9, le masque n'est pas \u00e9crit</li> <li><code>-format &lt;FORMAT&gt;</code> : format des canaux : uint8, float32</li> <li><code>-channels &lt;INTEGER&gt;</code> : nombre de canaux</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>L'image en entr\u00e9e n'est modifi\u00e9e que si une nouvelle couleur de donn\u00e9e ou de nodata diff\u00e9rente de la couleur cible est pr\u00e9cis\u00e9e, et qu'aucune image en sortie n'est pr\u00e9cis\u00e9e.</p>"},{"location":"generation/#exemples_1","title":"Exemples","text":"<ul> <li><code>manageNodata -target 255,255,255 -touch-edges -data 254,254,254 input_image.tif output_image.tif -channels 3 -format uint8</code></li> <li><code>manageNodata -target -99999 -tolerance 10 input_image.tif -mask-out mask.tif -channels 1 -format float32</code></li> </ul>"},{"location":"generation/#merge4tiff","title":"MERGE4TIFF","text":"<p>Cet outil g\u00e9n\u00e8re une image \u00e0 partir 4 images de m\u00eame dimension dispos\u00e9es en carr\u00e9, en moyennant les pixels 4 par 4. L'image en sortie a les dimensions des images en entr\u00e9e. Une image \u00e0 utiliser comme fond peut \u00eatre donn\u00e9e. Il est possible de pr\u00e9ciser une valeur de gamma pour exag\u00e9rer les contrastes. Cet outil est utilis\u00e9 pour g\u00e9n\u00e9rer une dalle d'un niveau \u00e0 partir du niveau inf\u00e9rieur dans le cas d'une pyramide utilisant un TileMatrixSet de type Quad Tree.</p> <p>Les informations sur les canaux (nombre, taille en bits et format) peuvent :</p> <ul> <li>\u00eatre fournies et des conversions \u00e0 la vol\u00e9e seront potentiellement faites sur les images n'ayant pas les m\u00eames</li> <li>ne pas \u00eatre fournies, auquel cas toutes les images en entr\u00e9e doivent avoir les m\u00eame caract\u00e9ristiques</li> </ul>"},{"location":"generation/#usage_5","title":"Usage","text":"<p><code>merge4tiff [-g &lt;VAL&gt;] -n &lt;VAL&gt; [-c &lt;VAL&gt;] [-iX &lt;FILE&gt; [-mX&lt;FILE&gt;]] -io &lt;FILE&gt; [-mo &lt;FILE&gt;]</code></p> <ul> <li><code>-g &lt;FLOAT&gt;</code> : valeur de gamma permettant d'augmenter les contrastes (si inf\u00e9rieur \u00e0 1) ou de les r\u00e9duire (si sup\u00e9rieur \u00e0 1)</li> <li><code>-n &lt;COLOR&gt;</code> : couleur de nodata, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules (exemple : 255,255,255 pour du blanc sans transparence)</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-io &lt;FILE&gt;</code> : chemin de l'image de sortie</li> <li><code>-mo &lt;FILE&gt;</code> : chemin du masque de sortie associ\u00e9 (optionnel)</li> <li><code>-iX &lt;FILE&gt;</code> : chemin d'une image en entr\u00e9e<ul> <li>X = [1..4] : position de l'image</li> </ul> </li> </ul> <pre><code>image1 | image2\n-------+-------\nimage3 | image4\n</code></pre> <pre><code>* X = b : image de fond\n</code></pre> <ul> <li><code>-mX &lt;FILE&gt;</code> : X = [1..4] ou b, masque associ\u00e9 \u00e0 l'image en entr\u00e9e</li> <li><code>-a &lt;FORMAT&gt;</code> : format des canaux : float, uint</li> <li><code>-b &lt;INTEGER&gt;</code> : nombre de bits pour un canal : 8, 32</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>Les options a, b et s doivent \u00eatre toutes fournies ou aucune.</p>"},{"location":"generation/#exemples_2","title":"Exemples","text":"<ul> <li><code>merge4tiff -g 1 -n 255,255,255 -c zip -ib backgroundImage.tif -i1 image1.tif -i3 image3.tif -io imageOut.tif</code></li> <li><code>merge4tiff -g 1 -n 255,255,255 -c zip -i1 image1.tif -m1 mask1.tif -i3 image3.tif -m3 mask3.tif -mo maskOut.tif  -io imageOut.tif</code></li> </ul>"},{"location":"generation/#mergentiff","title":"MERGENTIFF","text":"<p>Cet outil g\u00e9n\u00e8re une image, d\u00e9finie par son rectangle englobant, sa projection et la r\u00e9solution pixel, \u00e0 partir d'images g\u00e9or\u00e9f\u00e9renc\u00e9es. Ces derni\u00e8res peuvent avoir des projections et des r\u00e9solutions diff\u00e9rentes, se recouvrir, ne pas recouvrir l'int\u00e9gralit\u00e9 de l'image en sortie, avoir des caract\u00e9ristiques diff\u00e9rentes. Cet outil est utilis\u00e9 pour g\u00e9n\u00e9rer le niveau le mieux r\u00e9solu dans une pyramide \u00e0 partir des images en entr\u00e9e.</p> <p>Les informations sur les canaux (nombre, taille en bits et format) peuvent :</p> <ul> <li>\u00eatre fournies et des conversions \u00e0 la vol\u00e9e seront potentiellement faites sur les images n'ayant pas les m\u00eames</li> <li>ne pas \u00eatre fournies, auquel cas toutes les images en entr\u00e9e doivent avoir les m\u00eame caract\u00e9ristiques</li> </ul>"},{"location":"generation/#usage_6","title":"Usage","text":"<p><code>mergeNtiff -f &lt;FILE&gt; [-r &lt;DIR&gt;] -c &lt;VAL&gt; -i &lt;VAL&gt; -n &lt;VAL&gt; [-a &lt;VAL&gt; -s &lt;VAL&gt; -b &lt;VAL&gt;]</code></p> <ul> <li><code>-f &lt;FILE&gt;</code> : fichier de configuration contenant l'image en sortie et la liste des images en entr\u00e9e, avec leur g\u00e9or\u00e9f\u00e9rencement et les masques \u00e9ventuels</li> <li><code>-r &lt;DIRECTORY&gt;</code> : dossier racine \u00e0 utiliser pour les images dont le chemin commence par un <code>?</code> dans le fichier de configuration. Le chemin du dossier doit finir par un <code>/</code></li> <li><code>-p &lt;FILE&gt;</code> : fichier de style \u00e0 appliquer aux images avant reprojection ou r\u00e9echantillonnage</li> <li><code>-i &lt;INTERPOLATION&gt;</code> : interpolation \u00e0 utiliser pour les reprojections et le r\u00e9echantillonnage : nn (plus proche voisin), linear, bicubic, lanzos</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-n &lt;COLOR&gt;</code> : couleur de nodata, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules (exemple : 255,255,255 pour du blanc sans transparence). Si un style est fourni, cette valeur de nodata est celle dans les donn\u00e9es source. Le nodata dans l'image en sortie est d\u00e9duit du style (ou est \u00e9gal \u00e0 celui en entr\u00e9e si le style ne modifie pas le format des donn\u00e9es).</li> <li><code>-a &lt;FORMAT&gt;</code> : format des canaux : float, uint</li> <li><code>-b &lt;INTEGER&gt;</code> : nombre de bits pour un canal : 8, 32</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>Les options a, b et s doivent \u00eatre toutes fournies ou aucune.</p>"},{"location":"generation/#le-fichier-de-configuration_1","title":"Le fichier de configuration","text":"<p>Une ligne du fichier de configuration a la forme suivante : <code>IMG &lt;CHEMIN&gt; &lt;CRS&gt; &lt;XMIN&gt; &lt;YMAX&gt; &lt;XMAX&gt; &lt;YMIN&gt; &lt;RESX&gt; &lt;RESY&gt;</code> pour une image de donn\u00e9e ou <code>MSK &lt;CHEMIN&gt;</code> pour une image de masque.</p> <p>Par exemple : <code>IMG /home/IGN/image.tif EPSG:1234 10 150 110 50 0.5 0.5</code>. Si  on veut associer \u00e0 cette image un masque, on mettra sur la ligne suivante <code>MSK /home/IGN/masque.tif</code>. Une ligne de masque doit toujours suivre une ligne d'image. Si on souhaite pr\u00e9ciser un chemin relatif \u00e0 la racine pass\u00e9e via l'option <code>-r</code>, on mettra le chemin <code>MSK ?masque.tif</code></p> <p>La premi\u00e8re image list\u00e9e sera la sortie (avec \u00e9ventuellement son masque). Les suivantes sont les images en entr\u00e9e.</p> <p>Exemple de configuration :</p> <pre><code>IMG /home/IGN/IMAGE.tif EPSG:1234 -499    1501    1501    -499    2       2\nMSK /home/IGN/MASK.tif\nIMG /home/IGN/sources/imagefond.tif EPSG:1234  -499    1501    1501    -499    2       2\nMSK /home/IGN/sources/maskfond.tif\nIMG /home/IGN/sources/image1.tif EPSG:4567  0       1000    1000    0       1       1\nIMG /home/IGN/sources/image2.tif EPSG:4567  500     1500    1500    500     1       1\nMSK /home/IGN/sources/mask2.tif\n</code></pre> <p>L'image <code>/home/IGN/IMAGE.tif</code> sera \u00e9crite ainsi que son masque associ\u00e9 <code>/home/IGN/MASK.tif</code></p>"},{"location":"generation/#exemples_3","title":"Exemples","text":"<ul> <li><code>mergeNtiff -f conf.txt -c zip -i bicubic -n 255,255,255</code></li> <li><code>mergeNtiff -f conf.txt -c zip -i nn -s 1 -b 32 -p gray -a float -n -99999</code></li> </ul>"},{"location":"generation/#overlayntiff","title":"OVERLAYNTIFF","text":"<p>Cet outil g\u00e9n\u00e8re une image \u00e0 partir de plusieurs images de m\u00eame dimension et format de canal (entier non sign\u00e9 sur 8 bits ou flottant sur 32 bits) par superposition. Le calcul est fait pixel par pixel \u00e0 partir de ceux sources avec le choix du mode : par transparence, par multiplication, en tenant compte des masques associ\u00e9s... Cet outil est utilis\u00e9 lors de g\u00e9n\u00e9rations JOINCACHE lorsque plusieurs dalles de diff\u00e9rentes pyramides sont trouv\u00e9es pour une m\u00eame dalle en sortie. Les images en entr\u00e9e peuvent avoir un nombre de canaux diff\u00e9rent.</p>"},{"location":"generation/#usage_7","title":"Usage","text":"<p><code>overlayNtiff -f &lt;FILE&gt; -m &lt;VAL&gt; -c &lt;VAL&gt; -s &lt;VAL&gt; -p &lt;VAL [-n &lt;VAL&gt;] -b &lt;VAL&gt;</code></p> <ul> <li><code>-f &lt;FILE&gt;</code> : fichier de configuration contenant l'image en sortie et la liste des images en entr\u00e9e, avec les masques \u00e9ventuels</li> <li><code>-m &lt;METHOD&gt;</code> : m\u00e9thode de fusion des pixels (toutes tiennent compte des \u00e9ventuels masques) :<ul> <li><code>ALPHATOP</code> : fusion par alpha blending</li> <li><code>MULTIPLY</code> : fusion par multiplication des valeurs des canaux</li> <li><code>TOP</code> : seul le pixel de donn\u00e9e du dessus est pris en compte</li> </ul> </li> <li><code>-b &lt;COLOR&gt;</code> : couleur de fond, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules (exemple : 255,255,255 pour du blanc sans transparence)</li> <li><code>-t &lt;COLOR&gt;</code> : couleur \u00e0 consid\u00e9rer comme transparente, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-p &lt;PHOTOMETRIC&gt;</code> : photom\u00e9trie : gray, rgb</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul>"},{"location":"generation/#le-fichier-de-configuration_2","title":"Le fichier de configuration","text":"<p>Une ligne du fichier de configuration a la forme suivante : <code>&lt;CHEMIN DE L'IMAGE&gt; [&lt;CHEMIN DU MASQUE ASSOCI\u00c9&gt;]</code>.</p> <p>La premi\u00e8re image list\u00e9e sera la sortie (avec \u00e9ventuellement son masque). Les suivantes sont les images en entr\u00e9e. L'ordre a de l'importance, les premi\u00e8res images sources seront consid\u00e9r\u00e9es comme allant en dessous, quelque soit la m\u00e9thode utilis\u00e9e pour la fusion.</p> <p>Exemple de configuration :</p> <pre><code>/home/IGN/IMAGE.tif  /home/IGN/MASK.tif\n/home/IGN/sources/imagefond.tif\n/home/IGN/sources/image1.tif\n/home/IGN/sources/image2.tif /home/IGN/sources/mask2.tif\n</code></pre> <p>L'image <code>/home/IGN/IMAGE.tif</code> sera \u00e9crite ainsi que son masque associ\u00e9 <code>/home/IGN/MASK.tif</code></p>"},{"location":"generation/#exemple_3","title":"Exemple","text":"<ul> <li><code>overlayNtiff -f conf.txt -m ALPHATOP -s 1 -c zip -p gray -t 255,255,255 -b 0</code></li> </ul>"},{"location":"generation/#pbf2cache","title":"PBF2CACHE","text":"<p>Cet outil \u00e9crit une dalle \u00e0 partir des tuiles PBF rang\u00e9es par coordonn\u00e9es (<code>&lt;dossier racine&gt;/x/y.pbf</code>). La dalle \u00e9crite est au format ROK4, c'est-\u00e0-dire un fichier TIFF, dont les donn\u00e9es sont tuil\u00e9es : le TIFF ne sert que de conteneurs pour regrouper les tuiles PBF. L'en-t\u00eate est de taille fixe (2048 octets).</p>"},{"location":"generation/#usage_8","title":"Usage","text":"<p><code>pbf2cache -r &lt;DIRECTORY&gt; -t &lt;VAL&gt; &lt;VAL&gt; -ultile &lt;VAL&gt; &lt;VAL&gt; &lt;OUTPUT FILE/OBJECT&gt;  [-d]</code></p> <ul> <li><code>-r &lt;DIRECTORY&gt;</code> : dossier contenant l'arborescence de tuiles PBF</li> <li><code>-t &lt;VAL&gt; &lt;VAL&gt;</code> : nombre de tuiles dans une dalle, en largeur et en hauteur</li> <li><code>-ultile &lt;VAL&gt; &lt;VAL&gt;</code> : indice de la tuile en haut \u00e0 gauche dans la dalle</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul>"},{"location":"generation/#exemple_4","title":"Exemple","text":"<p>Avec la commande suivante : <code>pbf2cache -r /home/IGN/pbfs -t 3 2 -ultile 17 36 /home/IGN/output.tif</code> (on veut 3x2 tuiles dans une dalle, et l'indice de la tuile en haut \u00e0 gauche est (17,36)), les fichiers suivants seront cherch\u00e9s et int\u00e9gr\u00e9s \u00e0 la dalle fichier <code>/home/IGN/output.tif</code> si pr\u00e9sents dans cet ordre :</p> <ul> <li><code>/home/IGN/pbfs/17/36.pbf</code></li> <li><code>/home/IGN/pbfs/18/36.pbf</code></li> <li><code>/home/IGN/pbfs/19/36.pbf</code></li> <li><code>/home/IGN/pbfs/17/37.pbf</code></li> <li><code>/home/IGN/pbfs/18/37.pbf</code></li> <li><code>/home/IGN/pbfs/19/37.pbf</code></li> </ul> <p>Si une tuile est absente (cela arrive si elle ne devait pas contenir d'objets), on pr\u00e9cise dans la dalle que l'on a une tuile de taille 0.</p>"},{"location":"generation/#work2cache","title":"WORK2CACHE","text":"<p>Cette commande va produire une image TIFF, tuil\u00e9e, avec une en-t\u00eate de taille fixe de 2048 octets afin que ROK4SERVER puisse ne pas la lire (toutes les informations lui sont d\u00e9j\u00e0 connues gr\u00e2ce au descripteur de pyramide).</p> <p>Par d\u00e9faut, on ne pr\u00e9cise pas les caract\u00e9ristique de l'image en sortie (nombre de canaux, format des canaux...) mais on peut pr\u00e9ciser l'ensemble pour r\u00e9aliser une conversion (passage en noir et blanc par exemple).</p> <p>La taille de tuile pr\u00e9cis\u00e9e doit \u00eatre coh\u00e9rente avec la taille totale de la dalle (doit \u00eatre un diviseur des dimensions totales).</p>"},{"location":"generation/#usage_9","title":"Usage","text":"<p><code>work2cache -c &lt;VAL&gt; -t &lt;VAL&gt; &lt;VAL&gt; &lt;INPUT FILE&gt; &lt;OUTPUT FILE/OBJECT&gt; [-a &lt;VAL&gt; -s &lt;VAL&gt; -b &lt;VAL&gt;] [-crop]</code></p> <ul> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb, png</li> <li><code>-t &lt;INTEGER&gt; &lt;INTEGER&gt;</code> : taille pixel d'une tuile, enlargeur et hauteur. Doit \u00eatre un diviseur de la largeur et de la hauteur de l'image en entr\u00e9e</li> <li><code>-a &lt;FORMAT&gt;</code> : format des canaux : float, uint</li> <li><code>-b &lt;INTEGER&gt;</code> : nombre de bits pour un canal : 8, 32</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-crop</code> : dans le cas d'une compression des donn\u00e9es en JPEG, un bloc (16x16 pixels, base d'application de la compression) qui contient un pixel blanc est compl\u00e8tement rempli de blanc</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>Les options a, b et s doivent \u00eatre toutes fournies ou aucune.</p> <p>La compression PNG a la particularit\u00e9 de ne pas \u00eatre un standard du TIFF. Une image dans ce format, propre \u00e0 ROK4, contient des tuiles qui sont des images PNG ind\u00e9pendantes, avec les en-t\u00eates PNG. Cela permet de renvoyer sans traitement une tuile au format PNG. Ce fonctionnement est calqu\u00e9 sur le format JPEG.</p>"},{"location":"generation/#exemples_4","title":"Exemples","text":"<ul> <li>Stockage fichier sans conversion : <code>work2cache input.tif -c png -t 256 256 output.tif</code></li> <li>Stockage fichier avec conversion : <code>work2cache input.tif -c png -t 256 256 -a uint -b 8 -s 1 output.tif</code></li> <li>Stockage CEPH sans conversion : <code>work2cache input.tif -c png -t 256 256 ceph://PYRAMIDS/output.tif</code></li> <li>Stockage S3 sans conversion : <code>work2cache input.tif -c png -t 256 256 s3://PYRAMIDS/output.tif</code></li> <li>Stockage SWIFT sans conversion : <code>work2cache input.tif -c png -t 256 256 swift://PYRAMIDS/output.tif</code></li> </ul>"},{"location":"generation/CHANGELOG/","title":"Outils de g\u00e9n\u00e9ration ROK4","text":""},{"location":"generation/CHANGELOG/#summary","title":"Summary","text":"<p>Corrections de la gestion du style dans mergeNtiff et ajout d'includes manquants</p>"},{"location":"generation/CHANGELOG/#changelog","title":"Changelog","text":""},{"location":"generation/CHANGELOG/#fixed","title":"[Fixed]","text":"<ul> <li>Outil <code>manageNodata</code> : une erreur lors de la lecture initiale (et compl\u00e8te) de l'image de donn\u00e9es en entr\u00e9e fait sortir en erreur la commande</li> <li>Outil <code>mergeNtiff</code> : gestion correcte d'un style de pente pur (sans palette), dans le cas d'images en entr\u00e9e phas\u00e9e avec la sortie (pas de r\u00e9echantillonnage ou reprojection)</li> <li>Include de la librairie d'annuaire (stockage, proj...)</li> </ul>"},{"location":"generation/CHANGELOG/#changed","title":"[Changed]","text":"<ul> <li>Prise en compte du nouveau nommage dans l'utilisation de l'annuaire de contexte de stockage</li> </ul>"},{"location":"pregeneration/","title":"Outils de pr\u00e9-g\u00e9n\u00e9ration","text":"<p>Les outils de pr\u00e9-g\u00e9n\u00e9ration font partie du projet open-source ROK4 (sous licence CeCILL-C) d\u00e9velopp\u00e9 par les \u00e9quipes du projet G\u00e9oportail(@Geoportail) de l\u2019Institut National de l\u2019Information G\u00e9ographique et Foresti\u00e8re (@IGNFrance). Ils sont \u00e9crits en perl et travaillent en amont lors de la g\u00e9n\u00e9ration d'une pyramide raster (BE4, JOINCACHE) ou vecteur (4ALAMO), d'une recopie de pyramide (PYR2PYR) ou du recalcul de t\u00eate d'une pyramide raster (4HEAD)</p> <p>Ces outils identifient le travail \u00e0 r\u00e9aliser et le r\u00e9partissent dans des scripts BASH, selon un niveau de parall\u00e9lisation choisi. C'est l'ex\u00e9cution de ces derniers qui \u00e9crit les dalles des pyramides.</p> <p>Ces scripts utilisent les outils de g\u00e9n\u00e9ration du projet, ainsi que des commandes externes.</p> <p>Il est possible que les scripts BASH sachent faire de la reprise sur erreur. Dans chaque dossier temporaire individuel, un fichier liste contient le travail d\u00e9j\u00e0 r\u00e9alis\u00e9. Au lancement du script, si ce fichier liste existe d\u00e9j\u00e0, il identifie la derni\u00e8re dalle g\u00e9n\u00e9r\u00e9e et ignorera toutes les instructions jusqu'\u00e0 retomber sur cette dalle. On peut donc en cas d'erreur relancer le script sans param\u00e9trage et reprendre o\u00f9 il en \u00e9tait \u00e0 l'ex\u00e9cution pr\u00e9c\u00e9dente.</p> <p>De m\u00eame, un fichier .prog \u00e0 c\u00f4t\u00e9 du script peut \u00eatre mis \u00e0 jour avec le pourcentage de progression (calcul\u00e9 \u00e0 partir des lignes du script).</p>"},{"location":"pregeneration/#installation-depuis-le-paquet-debian","title":"Installation depuis le paquet debian","text":"<p>T\u00e9l\u00e9charger les paquets sur GitHub : </p> <ul> <li>Les librairies Core</li> <li>Les outils</li> </ul> <pre><code>apt install ./librok4-core-perl-&lt;version&gt;-linux-all.deb\napt install ./rok4-pregeneration-&lt;version&gt;-linux-all.deb\n</code></pre>"},{"location":"pregeneration/#installation-depuis-les-sources","title":"Installation depuis les sources","text":"<p>D\u00e9pendances (paquets debian) :</p> <ul> <li>perl-base</li> <li>librok4-core-perl</li> <li>libfindbin-libs-perl</li> <li>libmath-bigint-perl</li> <li>liblog-log4perl-perl</li> <li>libjson-parse-perl</li> <li>libjson-perl</li> </ul> <pre><code>perl Makefile.PL INSTALL_BASE=/usr VERSION=0.0.1 PREREQ_FATAL=1\nmake\nmake injectversion\nmake install\n</code></pre>"},{"location":"pregeneration/#variables-denvironnement-utilisees-dans-les-librairies-rok4core","title":"Variables d'environnement utilis\u00e9es dans les librairies ROK4::Core","text":"<p>Leur d\u00e9finition est contr\u00f4l\u00e9e \u00e0 l'usage.</p> <ul> <li><code>ROK4_TMS_DIRECTORY</code> pour y chercher les Tile Matrix Sets. Ces derniers peuvent \u00eatre t\u00e9l\u00e9charg\u00e9s sur GitHub, install\u00e9s depuis le paquet debian et seront alors dans le dossier <code>/etc/rok4/tilematrixsets</code>.</li> <li>Pour le stockage CEPH<ul> <li><code>ROK4_CEPH_CONFFILE</code></li> <li><code>ROK4_CEPH_USERNAME</code></li> <li><code>ROK4_CEPH_CLUSTERNAME</code></li> </ul> </li> <li>Pour le stockage S3<ul> <li><code>ROK4_S3_URL</code></li> <li><code>ROK4_S3_KEY</code></li> <li><code>ROK4_S3_SECRETKEY</code></li> </ul> </li> <li>Pour le stockage SWIFT<ul> <li><code>ROK4_SWIFT_AUTHURL</code></li> <li><code>ROK4_SWIFT_USER</code></li> <li><code>ROK4_SWIFT_PASSWD</code></li> <li><code>ROK4_SWIFT_PUBLICURL</code></li> <li>Si authentification via Swift<ul> <li><code>ROK4_SWIFT_ACCOUNT</code></li> </ul> </li> <li>Si connection via keystone (pr\u00e9sence de <code>ROK4_KEYSTONE_DOMAINID</code>)<ul> <li><code>ROK4_KEYSTONE_DOMAINID</code></li> <li><code>ROK4_KEYSTONE_PROJECTID</code></li> </ul> </li> </ul> </li> <li>Pour configurer l'agent de requ\u00eate (int\u00e9raction SWIFT et S3)<ul> <li><code>ROK4_SSL_NO_VERIFY</code></li> <li><code>HTTP_PROXY</code></li> <li><code>HTTPS_PROXY</code></li> <li><code>NO_PROXY</code></li> </ul> </li> </ul>"},{"location":"pregeneration/#presentation-des-outils","title":"Pr\u00e9sentation des outils","text":""},{"location":"pregeneration/#be4","title":"BE4","text":"<p>L'outil BE4 g\u00e9n\u00e8re une pyramide raster \u00e0 partir d'images g\u00e9or\u00e9f\u00e9renc\u00e9es ou d'un service WMS. Il permet de mettre \u00e0 jour une pyramide raster existante. Si des images sont en entr\u00e9e, elles peuvent \u00eatre converties \u00e0 la vol\u00e9e dans le format de la pyramide en sortie. Il est \u00e9galement possible d'appliquer aux images en entr\u00e9e un style, comme le calcul de pente \u00e0 partir de donn\u00e9es MNT.</p> <p>Stockages g\u00e9r\u00e9s : FICHIER, CEPH, S3, SWIFT</p> <p>Parall\u00e9lisable, reprise sur erreur, progression.</p> <p>Outils de g\u00e9n\u00e9ration utilis\u00e9s :</p> <ul> <li>cache2work</li> <li>checkWork</li> <li>composeNtiff</li> <li>decimateNtiff</li> <li>merge4tiff</li> <li>mergeNtiff</li> <li>work2cache</li> </ul> <p>Outils externes utilis\u00e9s :</p> <ul> <li>wget</li> </ul>"},{"location":"pregeneration/#usage","title":"Usage","text":"<p><code>be4.pl --conf /home/IGN/conf.json [--help|--usage|--version]</code></p> <ul> <li><code>--help</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--usage</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--version</code> Affiche la version de l'outil et quitte</li> <li><code>--conf &lt;file path&gt;</code> Execute l'outil en prenant en compte ce fichier de configuration</li> </ul>"},{"location":"pregeneration/#details","title":"D\u00e9tails","text":"<p>\u00c9tape 1 </p> <p>\u00c9tape 2 (QTree) </p> <p>\u00c9tape 2 (NNGraph) </p>"},{"location":"pregeneration/#exemples-de-configuration","title":"Exemples de configuration","text":"<p>G\u00e9n\u00e9ration d'une nouvelle pyramide depuis des images g\u00e9or\u00e9f\u00e9renc\u00e9es type MNT, avec application d'un style de pente. Les styles peuvent \u00eatre t\u00e9l\u00e9charg\u00e9s sur GitHub, install\u00e9s depuis le paquet debian et seront alors dans le dossier <code>/etc/rok4/styles</code>.</p> <pre><code>{\n    \"logger\": {\n        \"level\": \"INFO\",\n        \"layout\": \"%5p : %m (%M) %n\"\n    },\n    \"datasources\": [\n        {\n            \"top\": \"0\",\n            \"bottom\": \"&lt;AUTO&gt;\",\n            \"source\": {\n                \"type\": \"IMAGES\",\n                \"directory\": \"/data/RGEALTI5M\",\n                \"srs\": \"IGNF:LAMB93\"\n            }\n        }\n    ],\n    \"pyramid\": {\n        \"type\": \"GENERATION\",\n        \"name\": \"RGEALTI\",\n        \"compression\": \"zip\",\n        \"tms\": \"LAMB93_1M_MNT.json\",\n        \"storage\": {\n            \"type\": \"FILE\",\n            \"root\": \"/data/tsatabin/PYRAMIDS\"\n        },\n        \"nodata\": [0,0,0,0],\n        \"pixel\": {\n            \"sampleformat\": \"UINT8\",\n            \"samplesperpixel\": 4\n        }\n    },\n    \"process\": {\n        \"directories\": {\n            \"scripts\": \"/scripts\",\n            \"local_tmp\": \"/tmp\",\n            \"shared_tmp\": \"/share\"\n        },\n        \"parallelization\": 1,\n        \"style\": \"/etc/rok4/styles/montagne.json\",\n        \"nodata\": [-99999]\n    }\n}\n</code></pre> <p>Mise \u00e0 jour par r\u00e9f\u00e9rence d'une pyramide S3 par moissonnage d'un service WMS</p> <pre><code>{\n    \"logger\": {\n        \"level\": \"INFO\",\n        \"layout\": \"%5p : %m (%M) %n\"\n    },\n    \"datasources\": [\n        {\n            \"top\": \"0\",\n            \"bottom\": \"8\",\n            \"source\": {\n                \"type\": \"WMS\",\n                \"area\": {\n                    \"bbox\": [5,45,6,46],\n                    \"srs\": \"EPSG:4326\"\n                },\n                \"layers\": \"GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2\",\n                \"url\": \"https://wxs.ign.fr/essentiels/geoportail/r/wms\"\n            }\n        },\n        {\n            \"top\": \"9\",\n            \"bottom\": \"12\",\n            \"source\": {\n                \"type\": \"WMS\",\n                \"area\": {\n                    \"bbox\": [5,45,6,46],\n                    \"srs\": \"EPSG:4326\"\n                },\n                \"layers\": \"GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2\",\n                \"url\": \"https://wxs.ign.fr/essentiels/geoportail/r/wms\"\n            }\n        }\n    ],\n    \"pyramid\": {\n        \"type\": \"UPDATE\",\n        \"name\": \"PLANIGNV2_UPDATED\",\n        \"pyramid_to_update\": \"s3://bucket/pyramides/PLANIGNV2.json\",\n    },\n    \"process\": {\n        \"directories\": {\n            \"scripts\": \"/scripts\",\n            \"local_tmp\": \"/tmp\",\n            \"shared_tmp\": \"/share\"\n        },\n        \"parallelization\": 1\n    }\n}\n</code></pre>"},{"location":"pregeneration/#joincache","title":"JOINCACHE","text":"<p>L'outil JOINCACHE g\u00e9n\u00e8rent une pyramide raster \u00e0 partir d'autres pyramide raster compatibles (m\u00eame TMS, dalles de m\u00eame dimensions, canaux au m\u00eame format). La composition se fait verticalement (choix des pyramides sources par niveau) et horizontalement (choix des pyramides source par zone au sein d'un niveau). La fusion de plusieurs dalles sources peut se faire selon plusieurs m\u00e9thodes (masque, alpha top, multiplication)</p> <p>Stockages g\u00e9r\u00e9s : FICHIER, CEPH, S3, SWIFT</p> <p>Parall\u00e9lisable, reprise sur erreur, progression.</p> <p>Outils de g\u00e9n\u00e9ration utilis\u00e9s :</p> <ul> <li>cache2work</li> <li>overlayNtiff</li> <li>work2cache</li> </ul>"},{"location":"pregeneration/#usage_1","title":"Usage","text":"<p><code>joincache.pl --conf /home/IGN/conf.json [--help|--usage|--version]</code></p> <ul> <li><code>--help</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--usage</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--version</code> Affiche la version de l'outil et quitte</li> <li><code>--conf &lt;file path&gt;</code> Execute l'outil en prenant en compte ce fichier de configuration principal</li> </ul>"},{"location":"pregeneration/#details_1","title":"D\u00e9tails","text":"<p>\u00c9tape 1 </p> <p>\u00c9tape 2 </p>"},{"location":"pregeneration/#exemples-de-configuration_1","title":"Exemples de configuration","text":"<p>G\u00e9n\u00e9ration d'une pyramide par fusion de 2 pyramides CEPH, avec conversion des canaux</p> <pre><code>{\n    \"logger\": {\n        \"level\": \"WARN\",\n        \"layout\": \"%5p : %m (%M) %n\",\n        \"file\": \"/var/log/joincache.log\"\n    },\n    \"datasources\": [\n        {\n            \"top\": \"0\",\n            \"bottom\": \"10\",\n            \"source\": {\n                \"type\": \"PYRAMIDS\",\n                \"area\": {\n                    \"bbox\": [\n                        -572324.2901945519,\n                        5061666.243846581,\n                        1064224.752260841,\n                        6637050.045897862\n                    ]\n                },\n                \"descriptors\": [\n                    \"ceph:///pool/pyramids/NORD.json\",\n                    \"ceph:///pool/pyramids/SUD.json\"\n                ]\n            }\n        }\n    ],\n    \"pyramid\": {\n        \"name\": \"ENTIER\",\n        \"root\": \"pool\",\n        \"pixel\": {\n            \"samplesperpixel\": 1,\n            \"sampleformat\": \"UINT8\"\n        },\n        \"nodata\": [255],\n        \"compression\": \"png\"\n    },\n    \"process\": {\n        \"directories\": {\n            \"scripts\": \"/scripts\",\n            \"local_tmp\": \"/tmp\",\n            \"shared_tmp\": \"/share\"\n        },\n        \"parallelization\": 1,\n        \"merge_method\": \"TOP\",\n        \"mask\": true\n    }\n}\n</code></pre>"},{"location":"pregeneration/#4alamo","title":"4ALAMO","text":"<p>L'outil 4ALAMO g\u00e9n\u00e8rent une pyramide vecteur \u00e0 partir d'une base de donn\u00e9es PostgreSQL ou de fichiers vecteurs. Ils permettent de mettre \u00e0 jour une pyramide vecteur existante.</p> <p>Stockages g\u00e9r\u00e9s : FICHIER, CEPH, S3, SWIFT</p> <p>Parall\u00e9lisable, reprise sur erreur, progression.</p> <p>Outils de g\u00e9n\u00e9ration utilis\u00e9s :</p> <ul> <li>pbf2cache</li> </ul> <p>Outils externes utilis\u00e9s :</p> <ul> <li>ogr2ogr</li> <li>tippecanoe</li> </ul>"},{"location":"pregeneration/#usage_2","title":"Usage","text":"<p><code>4alamo.pl --conf /home/IGN/conf.json [--help|--usage|--version]</code></p> <ul> <li><code>--help</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--usage</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--version</code> Affiche la version de l'outil et quitte</li> <li><code>--conf &lt;file path&gt;</code> Execute l'outil en prenant en compte ce fichier de configuration</li> </ul>"},{"location":"pregeneration/#details_2","title":"D\u00e9tails","text":"<p>\u00c9tape 1 </p> <p>\u00c9tape 2 </p>"},{"location":"pregeneration/#exemples-de-configuration_2","title":"Exemples de configuration","text":"<p>Mise \u00e0 jour par injection d'une pyramide SWIFT \u00e0 partir de tables PostgreSQL</p> <pre><code>{\n   \"logger\": {\n      \"level\": \"ERROR\",\n      \"layout\": \"%5p : %m (%M) %n\"\n   },\n   \"datasources\": [\n      {\n         \"top\": \"4\",\n         \"bottom\": \"9\",\n         \"source\": {\n            \"type\": \"POSTGRESQL\",\n            \"area\": {\n               \"bbox\": [10,45,15,50]\n            },\n            \"srs\": \"EPSG:4326\",\n            \"db\" : {\n               \"user\" : \"reader\",\n               \"password\" : \"reader\",\n               \"database\" : \"geodata\",\n               \"host\" : \"postgresql.internal\"\n            },\n            \"tables\" : [\n               {\n                  \"schema\" : \"essentiels\",\n                  \"native_name\" : \"region\",\n                  \"attributes\" : [\"*\"]\n               }\n            ]\n         }\n      },\n      {\n         \"top\": \"10\",\n         \"bottom\": \"12\",\n         \"source\": {\n            \"type\": \"POSTGRESQL\",\n            \"area\": {\n               \"bbox\": [10,45,15,50]\n            },\n            \"srs\": \"EPSG:4326\",\n            \"db\" : {\n               \"user\" : \"reader\",\n               \"password\" : \"reader\",\n               \"database\" : \"geodata\",\n               \"host\" : \"postgresql.internal\"\n            },\n            \"tables\" : [\n               {\n                  \"schema\" : \"essentiels\",\n                  \"native_name\" : \"departement\",\n                  \"attributes\" : [\"*\"]\n               },\n               {\n                  \"schema\" : \"essentiels\",\n                  \"native_name\" : \"region\",\n                  \"attributes\" : [\"*\"]\n               }\n            ]\n         }\n      }\n   ],\n   \"pyramid\": {\n      \"type\": \"INJECTION\",\n      \"pyramid_to_inject\": \"swift:///container/pyramids/LIMADM.json\"\n   },\n    \"process\": {\n        \"directories\": {\n            \"scripts\": \"/scripts\",\n            \"local_tmp\": \"/tmp\",\n            \"shared_tmp\": \"/share\"\n        },\n        \"parallelization\": 10\n    }\n}\n</code></pre>"},{"location":"pregeneration/#4head","title":"4HEAD","text":"<p>Cet outil permet de reg\u00e9n\u00e9rer des niveaux de la pyramide en partant d'un de ses niveaux. La pyramide est modifi\u00e9e et sa liste, qui fait foi en terme de contenu de la pyramide, est mise \u00e0 jour pour toujours correspondre au contenu final de la pyramide. L'outil perl modifie la liste et le descripteur et g\u00e9n\u00e8re des script shell dont l'ex\u00e9cution modifiera les dalles de la pyramide. Seuls les niveaux entre celui de r\u00e9f\u00e9rence (non inclus) et le niveau du haut fournis (inclus) sont modifi\u00e9s. Potentiellement des nouveaux niveaux sont ajout\u00e9s (lorsque l'outil est utilis\u00e9 pour construire la t\u00eate de la pyramide qui n'existait pas).</p> <p>Par d\u00e9faut, l'outil g\u00e9n\u00e8re deux scripts (<code>SCRIPT_1.sh</code> et <code>SCRIPT_FINISHER.sh</code>). Si on pr\u00e9cise un niveau de parall\u00e9lisation (via l'option <code>--parallel</code>) de N, on aura alors N scripts <code>SCRIPT_X.sh</code> et toujours <code>SCRIPT_FINISHER.sh</code> pour reg\u00e9n\u00e9rer l'ensemble des dalles. Tous les scripts <code>SCRIPT_X.sh</code> peuvent \u00eatre ex\u00e9cuter en parall\u00e8le, mais il faut attendre la fin de tous ces scripts pour lancer <code>SCRIPT_FINISHER.sh</code>.</p> <p>Le script <code>main.sh</code> permet de lancer proprement tous ces scripts sur la m\u00eame machine. Il ne permet donc pas de r\u00e9partir les ex\u00e9cutions sur un pool de machine. L'appel \u00e0 faire est logg\u00e9 en fin d'ex\u00e9cution de <code>4head.pl</code>.</p> <p>Stockages g\u00e9r\u00e9s : FICHIER, CEPH, S3, SWIFT</p> <p>Parall\u00e9lisable.</p> <p>Types de pyramides g\u00e9r\u00e9s : RASTER QTREE</p>"},{"location":"pregeneration/#commande","title":"Commande","text":"<p><code>4head.pl --pyr file:///home/ign/PYRAMID.pyr --tmsdir /home/ign/TMS/ --reference-level 19 --top-level 4 --tmp /home/ign/tmp/ --scripts /home/ign/scripts/ [--parallel 10] [--help|--usage|--version]</code></p>"},{"location":"pregeneration/#options","title":"Options","text":"<ul> <li><code>--help</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--usage</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--version</code> Affiche la version de l'outil et quitte</li> <li><code>--pyr</code> Pr\u00e9cise le chemin vers le descripteur de la pyramide \u00e0 modifier. Ce chemin est pr\u00e9fix\u00e9 par le type de stockage du descripteur : <code>file://</code>, <code>s3://</code>, <code>ceph://</code> ou <code>swift://</code></li> <li><code>--tmsdir</code> Pr\u00e9cise le dossier contenant au moins le TMS utilis\u00e9 par la pyramide \u00e0 modifier</li> <li><code>--reference-level</code> Pr\u00e9cise le niveau de la pyramide d'o\u00f9 partir pour reg\u00e9n\u00e9rer les niveaux sup\u00e9rieurs</li> <li><code>--top-level</code> Pr\u00e9cise le niveau jusqu'auquel reg\u00e9n\u00e9rer les dalles</li> <li><code>--tmp</code> Pr\u00e9cise un dossier \u00e0 utiliser comme espace temporaire de g\u00e9n\u00e9ration. Il doit \u00eatre partag\u00e9 entre tous les scripts</li> <li><code>--script</code> Pr\u00e9cise un dossier o\u00f9 \u00e9crire les scripts</li> <li><code>--parallel</code> Pr\u00e9cise le nombre de scripts pour modifier les dalles du niveau au dessus du niveau de r\u00e9f\u00e9rence (Optionnel, 1 par d\u00e9faut)</li> </ul>"},{"location":"pregeneration/#pyr2pyr","title":"PYR2PYR","text":"<p>Outil : <code>pyr2pyr.pl</code></p> <p>Cet outil copie une pyramide d'un stockage \u00e0 un autre.</p> <p>Conversions possibles :</p> <ul> <li>FICHIER -&gt; FICHIER, CEPH, S3, SWIFT</li> <li>CEPH -&gt; FICHIER, CEPH, S3, SWIFT</li> <li>S3 -&gt; FICHIER</li> </ul> <p>Parall\u00e9lisable, reprise sur erreur, progression.</p>"},{"location":"pregeneration/#usage_3","title":"Usage","text":"<p><code>pyr2pyr.pl --conf /home/IGN/conf.json [--help|--usage|--version]</code></p> <ul> <li><code>--help</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--usage</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--version</code> Affiche la version de l'outil et quitte</li> <li><code>--conf &lt;file path&gt;</code> Execute l'outil en prenant en compte ce fichier de configuration</li> </ul>"},{"location":"pregeneration/#details_3","title":"D\u00e9tails","text":"<p>\u00c9tape 1 </p> <p>\u00c9tape 2 </p>"},{"location":"pregeneration/#exemples-de-configuration_3","title":"Exemples de configuration","text":"<p>Recopie d'une pyramide CEPH -&gt; SWIFT</p> <pre><code>{\n    \"logger\": {\n        \"level\": \"DEBUG\",\n        \"layout\": \"%5p : %m (%M) %n\"\n    },\n    \"from\": {\n        \"descriptor\": \"ceph:///pool/pyramids/SCAN1000.json\"\n    },\n    \"to\": {\n        \"name\": \"pyramids/SCAN1000\",\n        \"storage\": {\n            \"type\": \"SWIFT\",\n            \"root\": \"container\"\n        }\n    },\n    \"process\": {\n        \"directories\": {\n            \"scripts\": \"/scripts\",\n            \"local_tmp\": \"/tmp\",\n            \"shared_tmp\": \"/share\"\n        },\n        \"parallelization\": 32,\n        \"follow_links\": true\n    }\n}\n</code></pre>"},{"location":"pregeneration/CHANGELOG/","title":"Outils de pr\u00e9-g\u00e9n\u00e9ration ROK4","text":""},{"location":"pregeneration/CHANGELOG/#summary","title":"Summary","text":"<p>Uniformisation de la configuration de Joincache avec les autres outils</p>"},{"location":"pregeneration/CHANGELOG/#changelog","title":"Changelog","text":""},{"location":"pregeneration/CHANGELOG/#changed","title":"[Changed]","text":"<ul> <li>Joincache</li> <li>Pour le stockage de la pyramide en sortie, on ne pr\u00e9cise que la racine, le type de stockage \u00e9tant forc\u00e9ment le m\u00eame que celui des pyramides en entr\u00e9e.</li> </ul>"},{"location":"pytools/","title":"Outils Python","text":"<p>Ce projet contient des outils de gestion des pyramides de donn\u00e9es, \u00e9crits en Python.</p> <ul> <li>Compilations<ul> <li>Outils</li> <li>Documentation</li> </ul> </li> <li>Installation</li> <li>PYR2PYR<ul> <li>Fonctionnement</li> <li>Configuration</li> </ul> </li> <li>MAKE-LAYER</li> </ul>"},{"location":"pytools/#compilations","title":"Compilations","text":""},{"location":"pytools/#outils","title":"Outils","text":"<p><code>VERSION=1.0.0 python setup.py bdist_wheel</code></p>"},{"location":"pytools/#documentation","title":"Documentation","text":"<pre><code>pip install json-schema-for-humans pdoc3 jsonschema2md\nmkdir html\ngenerate-schema-doc bin/*.schema.json ./html/\n</code></pre>"},{"location":"pytools/#installation","title":"Installation","text":"<p>R\u00e9cup\u00e9ration des artefacts sur GitHub :</p> <ul> <li>Fichier Wheel des librairies</li> <li>Fichier Wheel des outils</li> </ul> <p>Installation dans un environnement :</p> <pre><code>sudo apt install python3-rados\npython -m venv --system-site-packages venv\nsource venv/bin/activate\npip install rok4lib-&lt;VERSION&gt;-py3-none-any.whl\npip install rok4tools-&lt;VERSION&gt;-py3-none-any.whl\n</code></pre> <p>Installation syst\u00e8me :</p> <pre><code>sudo apt install python3-rados\nsudo pip install rok4lib-&lt;VERSION&gt;-py3-none-any.whl\nsudo pip install rok4tools-&lt;VERSION&gt;-py3-none-any.whl\n</code></pre>"},{"location":"pytools/#pyr2pyr","title":"PYR2PYR","text":"<p>PYR2PYR est un outil de copie d'une pyramide d'un stockage \u00e0 un autre. Il est possible de filtrer les dalles transf\u00e9r\u00e9e en pr\u00e9cisant une taille limite sous laquelle les donn\u00e9es ne sont pas recopi\u00e9es. La copie des dalles est parall\u00e9lisable. Si des signatures MD5 sont pr\u00e9sente dans le fichier liste, elles sont contr\u00f4l\u00e9es apr\u00e8s recopie.</p> <p>Un exemple de configuration est affichable avec la commande <code>pyr2pyr.py --role example</code> et l'appel <code>pyr2pyr.py --role check --conf conf.json</code> permet de valider un fichier de configuration. Le fichier de configuration peut \u00eatre un objet, auquel cas le chemin doit \u00eatre pr\u00e9fix\u00e9 par le type de stockage (exemple : <code>s3://bucket/configuration.json</code>)</p>"},{"location":"pytools/#fonctionnement","title":"Fonctionnement","text":"<p>Une copie compl\u00e8te d'une pyramide implique l'utilisation de l'outil avec les 3 modes suivants, dans cet ordre (tous les modes utilisent le fichier de configuration) :</p> <ol> <li>R\u00f4le <code>master</code><ul> <li>Actions : g\u00e9n\u00e9ration des N TODO lists, d\u00e9pos\u00e9 dans un dossier pr\u00e9cis\u00e9 dans la configuration (peut \u00eatre un stockage objet).</li> <li>Appel : <code>pyr2pyr.py --role master --conf conf.json</code></li> </ul> </li> <li>R\u00f4le <code>agent</code> : <ul> <li>Actions : lecture de la TODO list depuis le dossier de traitement et recopie des dalles</li> <li>Appel (un appel par TODO list) : <code>pyr2pyr.py --role agent --conf conf.json --split X</code></li> </ul> </li> <li>R\u00f4le <code>finisher</code> : <ul> <li>Actions : lecture des TODO lists pour \u00e9crire le fichier liste final et \u00e9criture du descripteur de la pyramide en sortie.</li> <li>Appel : <code>pyr2pyr.py --role finisher --conf conf.json</code></li> </ul> </li> </ol> <p></p>"},{"location":"pytools/#configuration","title":"Configuration","text":"<p>Possibilit\u00e9s de contenu du fichier JSON (g\u00e9n\u00e9r\u00e9 \u00e0 partir du sch\u00e9ma JSON avec <code>jsonschema2md bin/pyr2pyr.schema.json /dev/stdout</code>)</p> <ul> <li><code>logger</code> (object): Logger configuration.<ul> <li><code>layout</code> (string): Log format, according to logging python library. Default: <code>%(asctime)s %(levelname)s: %(message)s</code>.</li> <li><code>file</code> (string): Path to log file. Standard output is used if not provided.</li> <li><code>level</code> (string): Log level. Must be one of: <code>['DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL', 'NOTSET']</code>. Default: <code>WARNING</code>.</li> </ul> </li> <li><code>from</code> (object): Pyramid to copy.<ul> <li><code>descriptor</code> (string): Path to pyramid's descriptor to copy.</li> </ul> </li> <li><code>to</code> (object): Pyramid to write.<ul> <li><code>name</code> (string): Output pyramid's name.</li> <li><code>storage</code> (object)<ul> <li><code>type</code> (string): Storage type. Must be one of: <code>['FILE', 'S3', 'CEPH']</code>.</li> <li><code>root</code> (string): Storage root : a directory for FILE storage, pool name for CEPH storage, bucket name for S3 storage.</li> <li><code>depth</code> (integer): Tree depth, only for FILE storage. Minimum: <code>1</code>. Default: <code>2</code>.</li> </ul> </li> </ul> </li> <li><code>process</code> (object): Processing parameters.<ul> <li><code>directory</code> (string): Directory to write copies to process, FILE directory or S3/CEPH prefix.</li> <li><code>parallelization</code> (integer): Parallelization level, number of todo lists and agents working at the same time. Minimum: <code>1</code>. Default: <code>1</code>.</li> <li><code>follow_links</code> (boolean): Do we follow links (data slabs in others pyramids than the 'from' one). Default: <code>False</code>.</li> <li><code>slab_limit</code> (integer): Minimum slab size (if under, we do not copy). Minimum: <code>0</code>. Default: <code>0</code>.</li> </ul> </li> </ul>"},{"location":"pytools/#make-layer","title":"MAKE-LAYER","text":"<p>MAKE-LAYER est un outil g\u00e9n\u00e9rant un descripteur de couche compatible avec le serveur \u00e0 partir des pyramides de donn\u00e9es \u00e0 utiliser</p> <p>Utilisation : <code>make-layer [-h] --pyramids storage://path/to/pyr.json[&gt;BOTTOM&gt;TOP] [storage://path/to/pyr.json[&gt;BOTTOM&gt;TOP] ...] --name my data [--styles normal [normal ...]] [--title my data]</code></p>"},{"location":"pytools/CHANGELOG/","title":"Outils ROK4 Python","text":""},{"location":"pytools/CHANGELOG/#summary","title":"Summary","text":"<p>Ajout de l'outil make-layer</p>"},{"location":"pytools/CHANGELOG/#changelog","title":"Changelog","text":""},{"location":"pytools/CHANGELOG/#added","title":"[Added]","text":"<ul> <li>Outil MAKE-LAYER : g\u00e9n\u00e8re un descripteur de couche compatible avec le serveur \u00e0 partir des pyramides de donn\u00e9es \u00e0 utiliser</li> </ul>"},{"location":"server/","title":"Serveur de diffusion WMS, WMTS et TMS","text":"<p>Le serveur fait partie du projet open-source ROK4 (sous licence CeCILL-C) d\u00e9velopp\u00e9 par les \u00e9quipes du projet G\u00e9oportail(@Geoportail) de l\u2019Institut National de l\u2019Information G\u00e9ographique et Foresti\u00e8re (@IGNFrance). Il est \u00e9crit en C++ et permet la diffusion de donn\u00e9es raster ou vecteur.</p> <p>Le serveur impl\u00e9mente les standards ouverts de l\u2019Open Geospatial Consortium (OGC) WMS 1.3.0 et WMTS 1.0.0, ainsi que le TMS (Tile Map Service). Il vise deux objectifs principaux :</p> <ul> <li>L\u2019utilisation d\u2019un cache de donn\u00e9es raster unique permettant de servir indiff\u00e9remment des flux WMS, WMTS et TMS</li> <li>Des performances de traitement d\u2019image et de diffusion accrues</li> <li>La diffusion de tuiles vecteur telles qu'elles sont stock\u00e9es, sans transformation (TMS uniquement)</li> <li>La diffusion en WMTS selon des Tile Matrix Sets diff\u00e9rents de celui de la pyramide utilis\u00e9e.</li> </ul> <p>Les pyramides de donn\u00e9es utilis\u00e9es sont produites via les outils de pr\u00e9g\u00e9n\u00e9ration et de g\u00e9n\u00e9ration.</p>"},{"location":"server/#installation-via-le-paquet-debian","title":"Installation via le paquet debian","text":"<p>T\u00e9l\u00e9charger les paquets sur GitHub :</p> <ul> <li>le serveur</li> <li>les styles</li> <li>les TMS</li> </ul> <pre><code>apt install ./rok4-styles-&lt;version&gt;-linux-all.deb\napt install ./rok4-tilematrixsets-&lt;version&gt;-linux-all.deb\napt install ./rok4-server-&lt;version&gt;-&lt;system&gt;-amd64.deb\n</code></pre>"},{"location":"server/#installation-depuis-les-sources","title":"Installation depuis les sources","text":""},{"location":"server/#recuperation-du-projet","title":"R\u00e9cup\u00e9ration du projet","text":"<pre><code>git clone --recursive https://github.com/rok4/server\n</code></pre> <p>ou</p> <pre><code>git clone https://github.com/rok4/server\ngit submodule update --init --recursive\n</code></pre>"},{"location":"server/#variables-cmake","title":"Variables CMake","text":"<ul> <li><code>CMAKE_INSTALL_PREFIX</code> : dossier d'installation du serveur. Valeur par d\u00e9faut : <code>/usr/local</code></li> <li><code>BUILD_VERSION</code> : version du serveur compil\u00e9. Valeur par d\u00e9faut : <code>0.0.0</code></li> <li><code>OBJECT_ENABLED</code> : active la compilation des classes de gestion des stockages objet. Valeur par d\u00e9faut : <code>0</code>, <code>1</code> pour activer.</li> <li><code>DEBUG_BUILD</code> : active la compilation en mode debug. Valeur par d\u00e9faut : <code>0</code>, <code>1</code> pour activer.</li> <li><code>UNITTEST_ENABLED</code> : active la compilation des tests unitaires. Valeur par d\u00e9faut : <code>0</code>, <code>1</code> pour activer.</li> </ul>"},{"location":"server/#dependances-a-la-compilation","title":"D\u00e9pendances \u00e0 la compilation","text":"<ul> <li>Submodule GIT</li> <li><code>https://github.com/rok4/core-cpp</code></li> <li>Paquets debian</li> <li>libfcgi-dev</li> <li>libtinyxml-dev</li> <li>zlib1g-dev</li> <li>libcurl4-openssl-dev</li> <li>libproj-dev</li> <li>libssl-dev</li> <li>libturbojpeg0-dev</li> <li>libjpeg-dev</li> <li>libc6-dev</li> <li>libjson11-1-dev</li> <li>libboost-log-dev</li> <li>libboost-filesystem-dev</li> <li>libboost-system-dev</li> <li>libsqlite3-dev</li> <li>Si <code>OBJECT_ENABLED</code> \u00e0 <code>1</code><ul> <li>librados-dev</li> </ul> </li> <li>Si <code>UNITTEST_ENABLED</code> \u00e0 <code>1</code><ul> <li>libcppunit-dev</li> </ul> </li> </ul>"},{"location":"server/#compilation-et-installation","title":"Compilation et installation","text":"<pre><code>mkdir build &amp;&amp; cd build\ncmake -DCMAKE_INSTALL_PREFIX=/ -DBUILD_VERSION=0.0.1 -DOBJECT_ENABLED=1 ..\nmake\nmake install\n</code></pre>"},{"location":"server/#variables-denvironnement-utilisees-dans-les-librairies-de-core-cpp","title":"Variables d'environnement utilis\u00e9es dans les librairies de core-cpp","text":"<p>Leur d\u00e9finition est contr\u00f4l\u00e9e \u00e0 l'usage.</p> <ul> <li>Pour le stockage CEPH<ul> <li><code>ROK4_CEPH_CONFFILE</code></li> <li><code>ROK4_CEPH_USERNAME</code></li> <li><code>ROK4_CEPH_CLUSTERNAME</code></li> </ul> </li> <li>Pour le stockage S3<ul> <li><code>ROK4_S3_URL</code></li> <li><code>ROK4_S3_KEY</code></li> <li><code>ROK4_S3_SECRETKEY</code></li> </ul> </li> <li>Pour le stockage SWIFT<ul> <li><code>ROK4_SWIFT_AUTHURL</code></li> <li><code>ROK4_SWIFT_USER</code></li> <li><code>ROK4_SWIFT_PASSWD</code></li> <li><code>ROK4_SWIFT_PUBLICURL</code></li> <li>Si authentification via Swift<ul> <li><code>ROK4_SWIFT_ACCOUNT</code></li> </ul> </li> <li>Si connection via keystone (pr\u00e9sence de <code>ROK4_KEYSTONE_DOMAINID</code>)<ul> <li><code>ROK4_KEYSTONE_DOMAINID</code></li> <li><code>ROK4_KEYSTONE_PROJECTID</code></li> </ul> </li> <li><code>ROK4_SWIFT_TOKEN_FILE</code> afin de sauvegarder le token d'acc\u00e8s, et ne pas le demander si ce fichier en contient un</li> </ul> </li> <li>Pour configurer l'usage de libcurl (int\u00e9raction SWIFT et S3)<ul> <li><code>ROK4_SSL_NO_VERIFY</code></li> <li><code>HTTP_PROXY</code></li> <li><code>HTTPS_PROXY</code></li> <li><code>NO_PROXY</code></li> </ul> </li> </ul>"},{"location":"server/#utilisation-du-serveur","title":"Utilisation du serveur","text":"<p>Le serveur ROK4 est lanc\u00e9 en mode stand alone. Nous utiliserons ici Nginx comme serveur front pour \"traduire\" les requ\u00eates HTTP en FCGI et les rediriger vers le serveur ROK4.</p>"},{"location":"server/#configurer-le-serveur","title":"Configurer le serveur","text":"<p>Dans le fichier <code>server.json</code>, on pr\u00e9cise le port d'\u00e9coute :</p> <pre><code>    \"port\": \":9000\"\n</code></pre> <p>On configure les logs de mani\u00e8re \u00e0 les retrouver dans un fichier par jour :</p> <pre><code>\"logger\": {\n    \"output\": \"rolling_file\",\n    \"level\": \"info\",\n    \"file_prefix\": \"/var/log/rok4\",\n    \"file_period\": 86400\n}\n</code></pre> <p>Les r\u00e9pertoires dans lesquels sont les tile matrix sets et les styles peuvent \u00eatre des dossiers (comme <code>file:///etc/rok4/tilematrixsets</code>) ou des pr\u00e9fixes objets  (comme <code>s3://tilematrixsets</code>). Sans pr\u00e9fixe pr\u00e9cisant le type de stockage, le chemin est interpr\u00e9t\u00e9 en mode fichier.</p> <ul> <li>Les param\u00e8tres possibles du fichier de configuration <code>server.json</code> sont d\u00e9crits ici</li> <li>Les param\u00e8tres possibles du fichier de configuration <code>services.json</code> sont d\u00e9crits ici</li> </ul>"},{"location":"server/#lancer-le-serveur","title":"Lancer le serveur","text":""},{"location":"server/#en-ligne-de-commande","title":"En ligne de commande","text":"<p>La ligne de commande permettant de lancer ROK4 comme instance autonome est la suivante :</p> <pre><code>rok4 -f /chemin/vers/fichier/server.json &amp;\n</code></pre>"},{"location":"server/#en-tant-que-service-systemctl","title":"En tant que service systemctl","text":"<p>Selon l'emplacement d'installation, le fichier dans <code>service/rok4.service</code> peut d\u00e9j\u00e0 \u00eatre \u00e0 un endroit pris en compte par systemctl (comme <code>/usr/lib/systemd/system</code>). Celui ci est \u00e9crit pour un d\u00e9ploiement \u00e0 la racine, modifiez les chemins pour qu'il soit adapt\u00e9 \u00e0 votre d\u00e9ploiement. Si l'installation a \u00e9t\u00e9 faite via le paquet debian, le service est d\u00e9j\u00e0 correctement install\u00e9, et les configurations sont dans <code>/etc/rok4</code>.</p> <pre><code>EnvironmentFile=/etc/rok4/config/env\nWorkingDirectory=/etc/rok4/config/\n</code></pre> <p>Le fichier <code>config/env</code> permet de d\u00e9finir les variables d'environnement propres au serveur pour configurer l'utilisation de stockages objets (voir ici).</p> <p>Le serveur est lanc\u00e9 en tant que user (et group) <code>rok4</code>. Il convient donc de le cr\u00e9er : <code>useradd rok4</code>.</p> <p>Il suffit alors de recharger le d\u00e9mon systemctl avec la commande <code>systemctl daemon-reload</code>. Vous pouvez maintenant piloter le serveur ROK4 via ce syst\u00e8me, comme le d\u00e9marrer avec <code>systemctl start rok4</code>.</p>"},{"location":"server/#installer-et-configurer-nginx","title":"Installer et configurer NGINX","text":"<ul> <li>Sous Debian : <code>apt install nginx</code></li> <li>Sous Centos : <code>yum install nginx</code></li> </ul> <p>Remplacer le fichier <code>default</code> pr\u00e9sent dans le r\u00e9pertoire <code>/etc/nginx/sites-enabled</code> par le contenu suivant :</p> <pre><code>upstream rok4 { server localhost:9000; }\n\nserver {\n    listen 80;\n    root /var/www;\n    server_name localhost;\n\n    access_log /var/log/rok4_access.log;\n    error_log /var/log/rok4_error.log;\n\n    location /rok4 {\n        rewrite /rok4/?(.*) /$1 break;\n        fastcgi_pass rok4;\n        include fastcgi_params;\n    }\n}\n</code></pre> <p>On red\u00e9marre nginx : <code>systemctl restart nginx</code></p>"},{"location":"server/#acces-aux-capacites-du-serveur","title":"Acc\u00e8s aux capacit\u00e9s du serveur","text":"<ul> <li>Liste des services de diffusion : http://localhost/rok4/</li> <li>GetCapabilities des services de diffusion<ul> <li>WMS : http://localhost/rok4/wms?request=GetCapabilities&amp;service=WMS</li> <li>WMTS : http://localhost/rok4/wmts?request=GetCapabilities&amp;service=WMTS</li> <li>TMS : http://localhost/rok4/tms/1.0.0</li> </ul> </li> <li>Racine de l'API d'administration : http://localhost/rok4/admin/</li> </ul>"},{"location":"server/#fonctionnement-general-du-serveur","title":"Fonctionnement g\u00e9n\u00e9ral du serveur","text":""},{"location":"server/#identification-du-service-et-du-type-de-requete","title":"Identification du service et du type de requ\u00eate","text":"<p>Lorsque le serveur re\u00e7oit une requ\u00eate, c'est le premier \u00e9l\u00e9ment du chemin qui d\u00e9termine le service :</p> <ul> <li><code>/</code> -&gt; requ\u00eate globale</li> <li><code>/healthcheck</code> -&gt; requ\u00eate d'\u00e9tat de sant\u00e9 ou statut du serveur</li> <li><code>/wmts</code> -&gt; requ\u00eate WMTS</li> <li><code>/wms</code> -&gt; requ\u00eate WMS</li> <li><code>/tms</code> -&gt; requ\u00eate TMS</li> <li><code>/admin</code> -&gt; requ\u00eate d'administration</li> </ul> <p>En WMS et WMTS, si c'est une requ\u00eate POST, le corps est interpr\u00e9t\u00e9 pour extraire les informations. Seuls le getCapabilities, le getMap et le getTile sont disponibles en POST. Le param\u00e8tre de requ\u00eate ou le corps doit confirmer le service pour que la requ\u00eate soit valide.</p> <p>Les requ\u00eates g\u00e9r\u00e9es par le serveur sont d\u00e9crites dans des sp\u00e9cifications au format Open API.</p>"},{"location":"server/#acces-aux-donnees","title":"Acc\u00e8s aux donn\u00e9es","text":"<p>L'acc\u00e8s aux donn\u00e9es stock\u00e9es dans les pyramides se fait toujours par tuile. Dans le cas du TMS et WMTS, la requ\u00eate doit contenir les indices (colonne et ligne) de la tuile voulue. La tuile est ensuite renvoy\u00e9e sans traitement, ou avec simple ajout/modification de l'en-t\u00eate (en TIFF et en PNG). Dans le cas d'un GetMap en WMS, l'emprise demand\u00e9e est convertie dans le syst\u00e8me de coordonn\u00e9es de la pyramide, et on identifie ainsi la liste des indices des tuiles requises pour calcul\u00e9e l'image voulue. De la m\u00eame mani\u00e8re qu'en WMTS et TMS, le serveur sait \u00e0 partir des indices o\u00f9 r\u00e9cup\u00e9rer la donn\u00e9e dans l'espace de stockage des pyramides.</p> <p>Avec les indices de la tuile \u00e0 lire, le serveur calcule le nom de la dalle qui la contient et le num\u00e9ro de la tuile dans cette dalle. Le serveur commence par r\u00e9cup\u00e9rer le header et l'index de la dalle, contenant les offsets et les tailles de toutes les tuiles de la dalle. Le header fait toujours 2048 octets et l'index a une taille connue par le serveur.</p> <p>Dans le cas du stockage objet (CEPH, S3, SWIFT), les objets symboliques ne font jamais plus de 2047 octets. Cette premi\u00e8re lecture permet donc de les identifier (on lit moins que voulu). Dans ce cas, ce qu'on a lu contient le nom de l'objet contenant r\u00e9ellement la donn\u00e9e (pr\u00e9c\u00e9d\u00e9 de la signature <code>SYMLINK#</code>). On va donc reproduire l'op\u00e9ration sur ce nouvel objet, qui lui ne doit pas \u00eatre un objet symbolique (pas de lien en cascade). En mode fichier, ce m\u00e9canisme est transparent pour le serveur car g\u00e9r\u00e9 par le syst\u00e8me de fichiers.</p> <p>Une fois que l'on a r\u00e9cup\u00e9r\u00e9 l'index, et gr\u00e2ce au num\u00e9ro de la tuile dans la dalle, on va pouvoir conna\u00eetre l'offset et la taille. On va donc faire une deuxi\u00e8me lecture de la dalle pour r\u00e9cup\u00e9rer la donn\u00e9e de la tuile.</p>"},{"location":"server/#gestion-des-configurations","title":"Gestion des configurations","text":"<p>Au d\u00e9marrage du serveur, toutes les configurations (serveur, services, tile matrix sets, styles et couches) sont charg\u00e9es depuis les fichiers. Lors du fonctionnement, si une requ\u00eate d'administration modifie cette configuration, les fichiers sont mis \u00e0 jour (\u00e9crits, \u00e9cras\u00e9s ou supprim\u00e9s).</p> <p></p>"},{"location":"server/#personnalisation-des-points-dacces-aux-services","title":"Personnalisation des points d'acc\u00e8s aux services","text":"<p>Pour que les URLs pr\u00e9sentes dans les r\u00e9ponses des services soient correctes malgr\u00e9 des r\u00e9ecritures, il est important de bien renseigner les champs suivant dans le fichier <code>services.json</code>:</p> <pre><code>    \"wms\": {\n        \"endpoint_uri\": \"http://localhost/rok4/wms\",\n    },\n    \"wmts\": {\n        \"endpoint_uri\": \"http://localhost/rok4/wmts\"\n    },\n    \"tms\": {\n        \"endpoint_uri\": \"http://localhost/rok4/tms\"\n    }\n</code></pre>"},{"location":"server/CHANGELOG/","title":"Serveur de diffusion ROK4","text":""},{"location":"server/CHANGELOG/#summary","title":"Summary","text":"<p>Correction de la gestion des styles d'une couche</p>"},{"location":"server/CHANGELOG/#changelog","title":"Changelog","text":""},{"location":"server/CHANGELOG/#changed","title":"[Changed]","text":"<ul> <li>Le style par d\u00e9faut d'une couche est d\u00e9fini comme le premier style d\u00e9fini au niveau de la couche</li> </ul>"},{"location":"server/CHANGELOG/#fixed","title":"[Fixed]","text":"<ul> <li>Pas de r\u00e9cup\u00e9ration du style lors de l'interrogation en TMS d'une couche de tuiles vectorielles</li> </ul>"},{"location":"specifications/api_server_redoc/","title":"API du serveur (Redoc)","text":""},{"location":"specifications/api_server_swaggerui/","title":"API du serveur (SwaggerUI)","text":""},{"location":"specifications/pyramid/","title":"Sp\u00e9cification d'une pyramide ROK4","text":""},{"location":"specifications/pyramid/#glossaire","title":"Glossaire","text":"Vocabulaire D\u00e9finition Fichier \u00c9l\u00e9ment de stockage de la donn\u00e9e dans un syst\u00e8me de fichier. Un fichier est indentifi\u00e9 par son chemin complet dans une arborescence Objet \u00c9l\u00e9ment de stockage de la donn\u00e9e dans un syst\u00e8me de stockage objet : CEPH, S3 ou SWIFT. Un objet est identifi\u00e9 par son nom et le nom du conteneur (pool CEPH, bucket S3 ou container SWIFT) dans lequel il est stock\u00e9 SRS Syst\u00e8me \u00e0 R\u00e9f\u00e9rence Spatiale, syst\u00e8me de coordonn\u00e9es TM Tile Matrix, d\u00e9finition d'un quadrillage : une origine + une r\u00e9solution + deux dimensions en pixels TMS Tile Matrix Set, ensembles de Tile Matrix, dans un m\u00eame syst\u00e8me de coordonn\u00e9es Pyramide Donn\u00e9e raster ou vecteur pr\u00e9d\u00e9coup\u00e9e et pr\u00e9calcul\u00e9e, dans une projection, \u00e0 diff\u00e9rentes r\u00e9solutions (niveaux), utilis\u00e9e par une couche ROK4SERVER Niveau Partie d\u2019une pyramide, contenant des dalles homog\u00e8nes en r\u00e9solution (l'identifiant et la r\u00e9solution du niveau sont d\u00e9finis dans le Tile Matrix Set) Tuile Unit\u00e9 de donn\u00e9e \u00e9lementaire manipul\u00e9 par ROK4SERVER, appartenant \u00e0 un niveau de pyramide dont les dimensions pixels sont d\u00e9finis dans le Tile Matrix (la tuile est la donn\u00e9e demand\u00e9e lors d'un GetTile en WMTS ou en Tile Map Service) Dalle Un fichier ou objet constituant une pyramide de donn\u00e9e, contenant une ou plusieurs tuiles contigu\u00ebs d'un niveau R\u00e9solution Dimensions de l'emprise au sol (dans l'unit\u00e9 du SRS) d'un pixel WMS Web Map Service : r\u00e9f\u00e9rence OGC WMTS Web Map Tiling Standard : r\u00e9f\u00e9rence OGC TMS Tile Map Service : r\u00e9f\u00e9rence OSGEO"},{"location":"specifications/pyramid/#le-tile-matrix-set","title":"Le Tile Matrix Set","text":"<p>Un TMS est un ensemble de Tile Matrix, d\u00e9finissant le quadrillage d'autant de niveaux dans un fichier JSON. Le SRS du TMS est indiqu\u00e9 avec la m\u00eame convention que pour les utilitaires bas\u00e9s sur la librairie PROJ, c\u2019est-\u00e0-dire avec une cha\u00eene de caract\u00e8res form\u00e9e du registre dans lequel est d\u00e9fini le SRS et de l\u2019identifiant du SRS dans ce registre, par exemple\u00a0: IGNF:LAMB93 ou EPSG:4326. EPSG peut \u00eatre indiqu\u00e9 en minuscules ou en majuscule.  Toutes les informations sont d\u00e9finies en fonction du SRS (unit\u00e9 du SRS pour les coordonn\u00e9es et les r\u00e9solutions). Un TM poss\u00e8de un identifiant (cha\u00eene de caract\u00e8res) unique dans le TMS. Les r\u00e9solutions d'un niveau \u00e0 l'autre ne vont pas n\u00e9cessairement de deux en deux (bien que ce soit le cas le plus courant).</p> <pre><code>{\n   \"crs\" : \"EPSG:2154\",\n   \"id\" : \"LAMB93\",\n   \"orderedAxes\" : [\n      \"X\",\n      \"Y\"\n   ],\n   \"tileMatrices\" : [\n      {\n         \"matrixWidth\" : 2,\n         \"scaleDenominator\" : 373497230.535336,\n         \"tileWidth\" : 256,\n         \"tileHeight\" : 256,\n         \"pointOfOrigin\" : [\n            0,\n            12000000\n         ],\n         \"matrixHeight\" : 2,\n         \"cellSize\" : 104579.224549894,\n         \"id\" : \"0\"\n      }\n   ]\n}\n</code></pre> <p></p> <p>Ce d\u00e9coupage de l'espace en tuile permet de se localiser gr\u00e2ce \u00e0 des indices (principe du WMTS et du Tile Map Service). Ainsi, une tuile peut \u00eatre identifi\u00e9e avec\u00a0:</p> <ul> <li>son niveau</li> <li>son indice de colonne (0 pour la premi\u00e8re en partant de la gauche)</li> <li>son indice de ligne (0 pour la premi\u00e8re en partant du haut)</li> </ul> <p>On peut passer des coordonn\u00e9es aux indices facilement. Cette conversion est utilis\u00e9e pour identifier les tuiles n\u00e9cessaires \u00e0 la construction d'une image \u00e0 partir de son emprise.</p>"},{"location":"specifications/pyramid/#la-pyramide","title":"La pyramide","text":"<p>Une pyramide est constitu\u00e9e d\u2019un ensemble de niveaux. Chaque niveau de la pyramide correspond \u00e0 un Tile Matrix, une r\u00e9solution.</p> <p>Une pyramide peut \u00eatre de trois types :</p> <ul> <li>Les pyramides raster : pyramide contenant de la donn\u00e9e image. Utilis\u00e9e par ROK4SERVER, elle peut \u00eatre diffus\u00e9e en WMS, WMTS et TMS. ROK4SERVER sait interpr\u00e9ter la donn\u00e9e contenue dans cette pyramide et peut la r\u00e9echantillonner, la reprojeter, y appliquer un style.</li> <li>Les pyramides vecteur : pyramide contenant de la donn\u00e9e vecteur. Utilis\u00e9e par ROK4SERVER, elle ne peut \u00eatre diffus\u00e9e qu'en TMS. ROK4SERVER ne sait pas interpr\u00e9ter la donn\u00e9e contenue dans les tuiles et ne peut alors que les retourner telles qu'elles sont stock\u00e9es.</li> </ul> <p>Sch\u00e9ma JSON d'un descripteur de pyramide</p> <p>Quand la pyramide contient des tuiles, elles sont regroup\u00e9es par contigu\u00eft\u00e9 en dalles, stock\u00e9es en tant que fichier ou objet (Ceph, S3 ou Swift).</p> <p></p>"},{"location":"specifications/pyramid/#caracteristiques-des-donnees","title":"Caract\u00e9ristiques des donn\u00e9es","text":"<p>Les caract\u00e9ristiques globales d'une pyramide raster sont :</p> <ul> <li>le nombre de canaux par pixel</li> <li>le nombre de bits par canal</li> <li>la photom\u00e9trie (rgb, gray...)</li> <li>le format des canaux</li> <li>la compression des images (aucun, jpeg, lzw, packbit...)</li> </ul> <p>Les caract\u00e9ristiques globales d'une pyramide vecteur sont :</p> <ul> <li>le format de la donn\u00e9e : Mapbox Vector Tile conditionn\u00e9 en PBF.</li> </ul> <p>Ces caract\u00e9ristiques sont valables pour l'ensemble de la pyramide.</p>"},{"location":"specifications/pyramid/#les-tables","title":"Les tables","text":"<p>Pour une pyramide vecteur, on va pr\u00e9ciser les tables et leurs attributs pr\u00e9sentes dans les donn\u00e9es, et ce par niveau. On aura \u00e9galement des informations sur les valeurs prises par les attributs.</p>"},{"location":"specifications/pyramid/#les-masques","title":"Les masques","text":"<p>Il est possible de stocker les masques en parall\u00e8le de la donn\u00e9e dans le cas d'une pyramide raster. Les masques sont des images aux m\u00eame dimensions que les images de donn\u00e9es et permettent de distinguer pr\u00e9cis\u00e9ment les pixels de donn\u00e9es de ceux de nodata. Les masques sont des images \u00e0 1 canal sur 8 bits, compress\u00e9 en deflate (zip). La valeur 0 signifie que le pixel correspondant dans l'image de donn\u00e9es est du nodata, les valeurs de 1 \u00e0 255 signifient qu'il s'agit de donn\u00e9e.</p>"},{"location":"specifications/pyramid/#le-descripteur-de-pyramide","title":"Le descripteur de pyramide","text":"<p>Le descripteur de pyramide est un document JSON (extension .json), au nom de la pyramide et contenant toutes les informations n\u00e9cessaires \u00e0 ROK4SERVER pour exploiter la pyramide (pr\u00e9sent\u00e9es au dessus). Elles sont \u00e9galement utilis\u00e9es lorsque l'on utilise les outils ROK4GENERATION pour manipuler une pyramide : on r\u00e9cup\u00e8re ainsi les caract\u00e9ristiques de la pyramide pour utiliser les m\u00eames.</p> <p>Selon le type de la pyramide, les informations pr\u00e9sentes dans le descripteur sont diff\u00e9rentes</p>"},{"location":"specifications/pyramid/#informations-globales","title":"Informations globales","text":"Type de pyramide Raster Vecteur Nom du TMS associ\u00e9 Pr\u00e9sent Pr\u00e9sent Format(contient la compression et le format des donn\u00e9es) TIFF_RAW_UINT8TIFF_RAW_FLOAT32TIFF_LZW_UINT8TIFF_LZW_FLOAT32TIFF_ZIP_UINT8TIFF_ZIP_FLOAT32TIFF_PKB_UINT8TIFF_PKB_FLOAT32TIFF_PNG_UINT8TIFF_JPG_UINT8 TIFF_PBF_MVT Le nombre de canaux des donn\u00e9es Pr\u00e9sent Absent La valeur du nodata Pr\u00e9sent Absent L'interpolation utilis\u00e9e \u00e0 la g\u00e9n\u00e9ration Pr\u00e9sent Absent La photom\u00e9trie des donn\u00e9es Pr\u00e9sent Absent <p>Extrait d'un descripteur de pyramide raster, pour du MNT\u00a0:</p> <pre><code>{\n    \"format\": \"TIFF_LZW_FLOAT32\",\n    \"mask_format\": \"TIFF_ZIP_UINT8\",\n    \"tile_matrix_set\": \"RGM04UTM38S_10cm\",\n    \"raster_specifications\": {\n        \"channels\": 1,\n        \"nodata\": \"-99999\",\n        \"photometric\": \"gray\",\n        \"interpolation\": \"nn\"\n    }\n}\n</code></pre> <p>On notera que le SRS n'est pas renseign\u00e9, il l'est indirectement via le TMS.</p>"},{"location":"specifications/pyramid/#informations-par-niveau","title":"Informations par niveau","text":"<p>Les niveaux sont renseign\u00e9s dans l'ordre, du plus haut (moins r\u00e9solu) au plus bas (meilleure r\u00e9solution). Les informations suivantes sont pr\u00e9sentes pour les 3 types de pyramides :</p> <ul> <li>L'identifiant du Tile Matrix\u00a0: code unique du niveau, identique \u00e0 celui dans le TMS.</li> <li>Le nombre de tuiles, dans la hauteur et dans la largeur, dans une dalle.</li> <li>Les indices des tuiles extr\u00eames pour ce niveau\u00a0: au-del\u00e0, on sait d'avance qu'il n'y aura pas de donn\u00e9es</li> </ul>"},{"location":"specifications/pyramid/#pyramide-raster","title":"Pyramide raster","text":"<ul> <li>Les informations sur le stockage des donn\u00e9es et \u00e9ventuellement des masques :<ul> <li>En mode \"fichier\" : les dossiers \"racine\" pour ce niveau, en relatif par rapport \u00e0 l'emplacement du descripteur et la profondeur de l'arborescence (nombre de sous dossier) \u00e0 partir de la racine du niveau.</li> <li>En mode \"objet\" : les pr\u00e9fixes utilis\u00e9s pour le nommage des dalles, le conteneur objet et dans le cas Swift, le type d'authentification. Les informations g\u00e9n\u00e9rale sur le cluster (URL, user...) sont stock\u00e9es dans des variables d'environnement ou dans la configuration de ROK4SERVER.</li> </ul> </li> </ul> <p>Exemple de niveau d'une pyramide raster avec masques stock\u00e9 dans un pool Ceph :</p> <pre><code>{\n    \"levels\": [\n        {\n            \"tile_limits\": {\n                \"min_row\": 0,\n                \"min_col\": 0,\n                \"max_col\": 0,\n                \"max_row\": 0\n            },\n            \"storage\": {\n                \"mask_prefix\": \"IGN/SCAN1000/MASK_0\",\n                \"type\": \"CEPH\",\n                \"image_prefix\": \"IGN/SCAN1000/DATA_0\"\n            },\n            \"tiles_per_height\": 16,\n            \"id\": \"0\",\n            \"tiles_per_width\": 16\n        },\n        {\n            \"tiles_per_width\": 16,\n            \"id\": \"1\",\n            \"storage\": {\n                \"mask_prefix\": \"IGN/SCAN1000/MASK_1\",\n                \"type\": \"CEPH\",\n                \"image_prefix\": \"IGN/SCAN1000/DATA_1\"\n            },\n            \"tiles_per_height\": 16,\n            \"tile_limits\": {\n                \"min_col\": 0,\n                \"min_row\": 0,\n                \"max_row\": 0,\n                \"max_col\": 0\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"specifications/pyramid/#pyramide-vecteur","title":"Pyramide vecteur","text":"<ul> <li>Les informations sur le stockage des donn\u00e9es :<ul> <li>En mode \"fichier\" : les dossiers \"racine\" pour ce niveau, en relatif par rapport \u00e0 l'emplacement du descripteur et la profondeur de l'arborescence (nombre de sous dossier) \u00e0 partir de la racine du niveau.</li> <li>En mode \"objet\" : les pr\u00e9fixes utilis\u00e9s pour le nommage des dalles, le conteneur objet et dans le cas Swift, le type d'authentification. Les informations g\u00e9n\u00e9rale sur le cluster (URL, user...) sont stock\u00e9es dans des variables d'environnement ou dans la configuration de ROK4SERVER.</li> </ul> </li> <li>Les informations sur les tables et leurs attributs dans les donn\u00e9es de ce niveau : on va potentiellement d\u00e9tailler les valeurs distinctes prises si il y en a moins de 50, et donner le minimum et le maximum pour les attributs num\u00e9riques.</li> </ul> <p>Exemple de niveau d'une pyramide vecteur stock\u00e9 dans un dossier :</p> <pre><code>{\n    \"levels\": [\n                {\n            \"tiles_per_height\": 8,\n            \"tables\": [\n                {\n                    \"attributes\": [\n                        {\n                            \"count\": 101,\n                            \"name\": \"insee_dep\",\n                            \"type\": \"character varying(3)\"\n                        },\n                        {\n                            \"type\": \"character varying(5)\",\n                            \"count\": 34968,\n                            \"name\": \"insee_com\"\n                        },\n                        {\n                            \"type\": \"character varying(24)\",\n                            \"name\": \"id\",\n                            \"count\": 34968\n                        },\n                        {\n                            \"type\": \"character varying(50)\",\n                            \"count\": 32485,\n                            \"name\": \"nom_com_m\"\n                        },\n                        {\n                            \"name\": \"population\",\n                            \"count\": 5817,\n                            \"type\": \"numeric(11,0)\"\n                        },\n                        {\n                            \"min\": 1,\n                            \"name\": \"ogc_fid\",\n                            \"count\": 34968,\n                            \"max\": 34968,\n                            \"type\": \"integer\"\n                        },\n                        {\n                            \"type\": \"character varying(2)\",\n                            \"count\": 61,\n                            \"name\": \"insee_can\"\n                        },\n                        {\n                            \"values\": [\n                                \"75\",\n                                \"06\",\n                                \"24\",\n                                \"03\",\n                                \"01\",\n                                \"28\",\n                                \"52\",\n                                \"93\",\n                                \"04\",\n                                \"94\",\n                                \"02\",\n                                \"44\",\n                                \"53\",\n                                \"27\",\n                                \"32\",\n                                \"11\",\n                                \"76\",\n                                \"84\"\n                            ],\n                            \"type\": \"character varying(2)\",\n                            \"count\": 18,\n                            \"name\": \"insee_reg\"\n                        },\n                        {\n                            \"name\": \"statut\",\n                            \"count\": 5,\n                            \"values\": [\n                                \"Pr\u00e9fecture\",\n                                \"Sous-pr\u00e9fecture\",\n                                \"Capitale d'\u00e9tat\",\n                                \"Pr\u00e9fecture de r\u00e9gion\",\n                                \"Commune simple\"\n                            ],\n                            \"type\": \"character varying(24)\"\n                        },\n                        {\n                            \"count\": 10,\n                            \"name\": \"insee_arr\",\n                            \"values\": [\n                                \"NC\",\n                                \"1\",\n                                \"4\",\n                                \"9\",\n                                \"8\",\n                                \"6\",\n                                \"3\",\n                                \"2\",\n                                \"7\",\n                                \"5\"\n                            ],\n                            \"type\": \"character varying(2)\"\n                        },\n                        {\n                            \"name\": \"nom_com\",\n                            \"count\": 32704,\n                            \"type\": \"character varying(50)\"\n                        },\n                        {\n                            \"name\": \"code_epci\",\n                            \"count\": 1256,\n                            \"type\": \"character varying(21)\"\n                        },\n                        {\n                            \"type\": \"character varying(3)\",\n                            \"values\": [\n                                \"COM\"\n                            ],\n                            \"count\": 1,\n                            \"name\": \"type\"\n                        }\n                    ],\n                    \"geometry\": \"MULTIPOLYGON\",\n                    \"name\": \"commune\"\n                }\n            ],\n            \"storage\": {\n                \"image_directory\": \"COMMUNES/DATA/18\",\n                \"path_depth\": 2,\n                \"type\": \"FILE\"\n            },\n            \"tile_limits\": {\n                \"min_col\": 132753,\n                \"max_row\": 91738,\n                \"max_col\": 136273,\n                \"min_row\": 90179\n            },\n            \"id\": \"18\",\n            \"tiles_per_width\": 8\n        }\n    ]\n}\n</code></pre>"},{"location":"specifications/pyramid/#larchitecture-de-stockage","title":"L'architecture de stockage","text":"<p>Le serveur ROK4 acc\u00e8de toujours aux donn\u00e9es par tuile (via ses indices) : * en WMTS et TMS, dans la grille native, on ne demande qu'une tuile * en WMTS, dans une grille additionnelle, on liste les tuiles sources n\u00e9cessaires \u00e0 la constitution de la tuile \u00e0 retourner * en WMS, \u00e0 partir de la zone demand\u00e9e, on liste les tuiles sources n\u00e9cessaires \u00e0 la constitution de l'image \u00e0 retourner</p> <p>ROK4GENERATION et ROK4SERVER se mettent donc d'accord sur la fa\u00e7on d'agencer les donn\u00e9es :</p> <ul> <li>Le d\u00e9coupage en tuile est d\u00e9fini par le TMS (comme vu plus haut)</li> <li>Le regroupement en dalle est d\u00e9fini dans le descripteur de pyramide : des indices de la tuile, par division euclidienne, on obtient les indices de la dalle, en partant du coin sup\u00e9rieur gauche d\u00e9finit dans le TMS.</li> <li>Reste l'emplacement de stockage de la dalle, que nous allons d\u00e9crire maintenant</li> <li>Et quelle partie de la dalle correspond \u00e0 notre tuile, ce que nous verrons apr\u00e8s dans la partie \"La structure d'une dalle\"</li> </ul> <p>On note les indices avec la colonne en premier : (colonne, ligne)</p>"},{"location":"specifications/pyramid/#en-mode-fichier","title":"En mode fichier","text":"<p>Toutes les dalles, que ce soit les donn\u00e9es ou les masques, sont dans un dossier portant le m\u00eame nom que le descripteur. Le nom de la pyramide ne peut pas contenir de <code>/</code> dans le cas d'un stockage objet. Elles sont cependant s\u00e9par\u00e9es dans des sous arborescences parall\u00e8les :</p> <ul> <li>/pyramid/directory//DATA//... <li>/pyramid/directory//DATA//... <p>Repartons des indices de la tuile voulue (414, 3134) avec des dalles de 16 tuiles par 16 tuiles : on veut donc acc\u00e9der \u00e0 la dalle (25,195). Ces indices sont ensuite convertis en base 36 (avec les chiffres dans cet ordre : 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ) : (24,195) donne ('P', '5F')</p> <p>On peut \u00eatre amen\u00e9 \u00e0 ajouter des 0 pour forcer la longueur de l'\u00e9criture en base 36, pour s'adapter \u00e0 la profondeur d'arborescence voulue ou avoir la m\u00eame longueur pour les 2 indices. Avec une profondeur d'arborescence de 2, les indices vont \u00eatre d\u00e9coup\u00e9s en 3 parties (les deux niveaux de dossier + le nom du fichier). On a donc besoin d'avoir des indices en base 36 sur au moins 3 chiffre : ('00P', '05F'). On obtient le chemin suivant, en relatif \u00e0 partir de la racine du niveau (que ce soit la donn\u00e9e ou le masque) : <code>00/05/PF.tif</code>. Soit un chemin complet :</p> <ul> <li>pour la dalle de donn\u00e9e : <code>/pyramid/directory/&lt;Pyramid's name&gt;/DATA/&lt;level&gt;/00/05/PF.tif</code></li> <li>pour la dalle de masque : <code>/pyramid/directory/&lt;Pyramid's name&gt;/MASK/&lt;level&gt;/00/05/PF.tif</code></li> </ul> <p>Dans un cas o\u00f9 l'\u00e9criture en base 36 n\u00e9cessite plus de chiffres qu'il n'y a de parties dans le chemin, c'est le premier dossier qui contiendra plus de chiffres : ('C4C3C2C1C0','L4L3L2L1L0') donnera C4L4C3L3C2L2/C1L1/C0L0.tif.</p> <p>Avec cette mani\u00e8re de ranger les donn\u00e9es, un dossier de l'arborescence contiendra des dalles contigu\u00ebs.</p>"},{"location":"specifications/pyramid/#en-mode-objet","title":"En mode objet","text":"<p>En mode objet, le nommage est beaucoup plus simple car on utilise directement les indices de dalle en base 10. De plus,l e nom de la pyramide peut contenir des <code>/</code>. Si on reprend la dalle pr\u00e9c\u00e9dente (24,195), on aura les objets suivants :</p> <ul> <li>pour la dalle de donn\u00e9e : <code>&lt;Pyramid's name&gt;/DATA_&lt;level&gt;_24_195</code></li> <li>pour la dalle de masque : <code>&lt;Pyramid's name&gt;/MASK_&lt;level&gt;_24_195</code></li> </ul>"},{"location":"specifications/pyramid/#la-structure-dune-dalle","title":"La structure d'une dalle","text":"<p>Les dalles sont utilise le conteneur TIFF (Tagged Image File Format). Ce dernier offre de nombreuse possibilit\u00e9 de stockage des donn\u00e9es. Le concept principal est de renseigner les diff\u00e9rentes informations via des \u00ab\u00a0tags\u00a0\u00bb, des champs (liste des tags).</p> <p>Dans le cas d'une dalle vecteur, TIFF sert uniquement de conteneur et aucune information propre aux donn\u00e9es raster n'est donn\u00e9e. On a alors une dalle uniquement utilisable par les outils ROK4. Seule la possibilit\u00e9 de tuilage des donn\u00e9es qu'offre le TIFF est utilis\u00e9e.</p> <p>Dans le cas d'une dalle raster, on peut pr\u00e9ciser les nombres de canaux, leur format et taille, la photom\u00e9trie, la structure des donn\u00e9es, toute sorte de m\u00e9tadonn\u00e9es, rendant possible l'interpr\u00e9tation de l'image par les programmes.</p> <p>Ce document n'a par pour but de reprendre les sp\u00e9cifications du format TIFF, mais de voir globalement les possibilit\u00e9s et pr\u00e9ciser celles exploit\u00e9es.</p>"},{"location":"specifications/pyramid/#len-tete","title":"L'en-t\u00eate","text":"<p>On retrouve dans cette partie toutes les informations sur le fichier que les logiciels vont utiliser pour afficher la dalle dans le cas du raster.</p> <p></p> <p>Par exemple, l'\u00e9tiquette imageWidth (256), de type Long (4), une seule valeur sur 32 bits, elle tient donc sans passer par une adresse\u00a0: 4096. Ce qui donne en h\u00e9xad\u00e9cimal, little endian\u00a0: <code>00 01   04 00   01 00 00 00   00 10 00 00</code></p> <p>Cependant, ROK4SERVER a d\u00e9j\u00e0 connaissance de ces m\u00e9tadonn\u00e9es car stock\u00e9es dans le descripteur de pyramide et le TMS. On peut donc gagner du temps en ignorant cet en-t\u00eate. C'est pourquoi celle-ci fait toujours 2048 octets, dont la majorit\u00e9 n'est pas exploit\u00e9e.</p> <p>On va enfin trouver dans cet en-t\u00eate les informations sur le tuilage, ou plut\u00f4t sur l'endroit o\u00f9 ces informations sont stock\u00e9es (adresses et tailles).</p>"},{"location":"specifications/pyramid/#les-donnees","title":"Les donn\u00e9es","text":""},{"location":"specifications/pyramid/#le-tuilage","title":"Le tuilage","text":"<p>Le format TIFF permet de stocker les donn\u00e9es par bloc, ceci dans le but d\u2019acc\u00e9der efficacement \u00e0 toutes les parties de la dalle. On peut ainsi acc\u00e9der \u00e0 chaque tuile contenue dans la dalle directement, sans lire depuis le d\u00e9but. On conserve bien dans la structure de la dalle le d\u00e9coupage en tuile. Chaque tuile est ind\u00e9pendante des autres, formant un fichier \u00e0 part enti\u00e8re, moins l'en-t\u00eate. Elles sont enregistr\u00e9es de gauche \u00e0 droite puis de haut en bas.</p> <p>Pour ce faire, on renseigne l'adresse de d\u00e9but (TileOffsets) sur 4 octets et la taille en octet (TileByteCounts) sur 4 octets de chaque tuile. Ces valeurs sont stock\u00e9es \u00e0 partir de 2048 octets, ce sont les premi\u00e8res valeurs lues par ROK4SERVER.</p> <p></p> <p>L'en-t\u00eate contient les \u00e9tiquettes\u00a0:</p> <ul> <li>TileOffsets\u00a0: tag 324, type Long, on aura N valeurs, et celles-ci ne tenant pas toutes sur 4 octets, on donne l'adresse \u00e0 laquelle ces valeurs commencent (ici 2048)</li> <li>TileByteCounts\u00a0: tag 325, type Long, on aura N valeurs, et celles-ci ne tenant pas toutes sur 4 octets, on donne l'adresse \u00e0 laquelle ces valeurs commencent (ici 2048 + 4*N)</li> </ul> <p>De cette mani\u00e8re, que ce soit ROK4 en \u00e9t\u00eatant de 2048 octets, ou les autres programmes, le tuilage est compris.</p>"},{"location":"specifications/pyramid/#la-compression-cas-raster","title":"La compression (cas raster)","text":"<p>Le format TIFF permet officiellement de nombreuses compressions pour des donn\u00e9es raster. Cette compression est effectu\u00e9e sur chaque tuile. ROK4SERVER, pour des donn\u00e9es raster, va comprendre l'absence de compression et les compressions\u00a0:</p> <ul> <li>sans pertes\u00a0: LZW, PNG, PackBits, Deflate</li> <li>avec pertes\u00a0: JPEG</li> </ul> <p>Le PNG a une particularit\u00e9\u00a0: la compression correspond \u00e0 du Deflate, mais on veut que ROK4SERVER puisse retourner facilement des tuiles de PNG, avec l'en-t\u00eate. Dans ce cas, les dalles ne sont pas lisible par d'autres applications que ROK4. Les tuiles stock\u00e9es contiennent chacune leur en-t\u00eate afin de pouvoir \u00eatre renvoy\u00e9es directement.</p> <p></p>"},{"location":"specifications/pyramid/#cas-vecteur","title":"Cas vecteur","text":"<p>Le stockage de donn\u00e9es vecteur dans des dalles TIFF est un fonctionnement propre au projet ROK4. Cette fa\u00e7on de faire permet d'exploiter tout le fonctionnement mis en place pour le raster afin de diffuser des tuiles vecteur. ROK4SERVER ne sait pas interpr\u00e9ter les tuiles, et se contente de les lires dans les dalles et de les renvoyer lorsqu'elles sont requ\u00eat\u00e9es en TMS.</p> <p>Concr\u00e8tement, ce sont les tuiles au format Mapbox Vector Tile empaquet\u00e9es en PBF, g\u00e9n\u00e9r\u00e9es par l'outil Tippecanoe, qui sont regroup\u00e9es et encapsul\u00e9es dans une dalle TIFF. Ce fonctionnement rejoint celui du PNG pour les donn\u00e9es raster.</p>"},{"location":"specifications/pyramid/#recapitulatif","title":"R\u00e9capitulatif","text":"<p>Voici la structure globale d'une dalle de la pyramide ROK4, dalle contenant N tuiles.</p> <p></p>"},{"location":"specifications/pyramid/#les-references","title":"Les r\u00e9f\u00e9rences","text":"<p>Lors de la cr\u00e9ation d'une pyramide de mise \u00e0 jour, on ne va potentiellement pas recopier toutes les donn\u00e9es de la version pr\u00e9c\u00e9dente, mais simplement les r\u00e9f\u00e9rencer \u00e0 l'aide de liens symbolique en stockage fichier ou d'objets symboliques (objet contenant simplement le nom du contenant et de l'objet cible pr\u00e9c\u00e9d\u00e9 de la signature <code>SYMLINK#</code> : <code>SYMLINK#&lt;contenant&gt;/&lt;nom de l'objet&gt;</code>) en stockage objet. Cela est mis en place par les outils de pr\u00e9g\u00e9n\u00e9ration mais est transparent pour le serveur qui se contente de lire UNE pyramide.</p>"},{"location":"specifications/pyramid/#le-fichier-liste","title":"Le fichier liste","text":"<p>Le fichier liste est un fichier texte (extension .list) au nom de la pyramide et situ\u00e9 \u00e0 c\u00f4t\u00e9 du descripteur de pyramide. Il contient la liste de toutes les dalles de donn\u00e9es et masques que contient la pyramide. Si certaines dalles ne sont que des r\u00e9f\u00e9rences dans la pyramide (liens/objets symboliques), c'est le nom du fichier/objet cible qui est list\u00e9 (appartenant \u00e0 la structure d'une autre pyramide).</p> <p>Ce fichier est uniquement utilis\u00e9 par les outils de pr\u00e9g\u00e9n\u00e9ration, pour conna\u00eetre sans avoir \u00e0 parcourir la pyramide son contenu exact (indispensable lors d'une mise \u00e0 jour). Dans le cas du stockage objet, o\u00f9 aucun parcours n'est possible, ce fichier est particuli\u00e8rement pr\u00e9cieux.</p> <p>Le fichier liste est en deux parties, s\u00e9par\u00e9es par un di\u00e8se :</p> <ul> <li>L'en-t\u00eate permet de lister et d'indexer les pyramides r\u00e9f\u00e9renc\u00e9es, c'est-\u00e0-dire contenant au moins une des dalles list\u00e9es. L'index 0 sera pour la pyramide elle m\u00eame. Ces index sont utilis\u00e9s dans la liste des dalles pour \"factoriser\" les racines des pyramides (conteneur + nom dans le cas objet, dossier racine des donn\u00e9es de la pyramide dans le cas fichier).</li> <li>La liste des dalles (donn\u00e9es et masques)</li> </ul> <p>Exemple de liste pour un stockage fichier</p> <pre><code>0=/home/ign/PYRAMIDS/PYRAMID_V2\n1=/home/ign/PYRAMIDS/PYRAMID_V1\n\\#\n1/DATA/19/04/RR/R2.tif\n1/DATA/19/04/RR/R3.tif\n1/DATA/19/04/RR/S1.tif\n1/DATA/19/04/RR/T1.tif\n1/DATA/19/04/RR/U0.tif\n1/DATA/19/04/RR/U1.tif\n1/DATA/19/04/RR/S2.tif\n1/DATA/19/04/RR/T2.tif\n1/DATA/19/04/RR/S3.tif\n1/DATA/19/04/RR/T3.tif\n1/DATA/19/04/RR/U2.tif\n1/DATA/18/02/DD/VJ.tif\n1/DATA/17/01/66/XR.tif\n1/DATA/16/00/3L/GD.tif\n1/DATA/18/02/DD/WI.tif\n1/DATA/18/02/DD/XI.tif\n0/DATA/19/04/VZ/JV.tif\n0/DATA/19/04/VZ/FY.tif\n0/DATA/19/04/VZ/FZ.tif\n0/DATA/19/04/VZ/GX.tif\n0/DATA/19/04/VZ/HX.tif\n0/DATA/19/04/VZ/IW.tif\n0/DATA/19/04/VZ/JW.tif\n0/DATA/19/04/VZ/IX.tif\n0/DATA/19/04/VZ/JX.tif\n0/DATA/19/04/VZ/GY.tif\n0/DATA/19/04/VZ/HY.tif\n0/DATA/19/04/VZ/GZ.tif\n0/DATA/19/04/VZ/HZ.tif\n0/DATA/19/04/VZ/IY.tif\n0/DATA/19/04/VZ/JY.tif\n0/DATA/19/04/VZ/IZ.tif\n0/DATA/19/04/VZ/JZ.tif\n</code></pre> <p>Exemple de liste pour un stockage objet</p> <pre><code>0=PYRAMIDS/PYRAMID_V2\n1=PYRAMIDS/PYRAMID_V1\n\\#\n0/DATA_11_65_42\n0/MASK_11_65_42\n0/DATA_11_65_43\n0/MASK_11_65_43\n0/DATA_11_66_42\n0/MASK_11_66_42\n0/DATA_11_67_42\n0/MASK_11_67_42\n0/DATA_11_66_43\n0/MASK_11_66_43\n0/DATA_11_67_43\n0/MASK_11_67_43\n0/DATA_11_65_44\n0/MASK_11_65_44\n1/DATA_11_61_42\n1/MASK_11_61_42\n1/DATA_11_61_43\n1/MASK_11_61_43\n1/DATA_11_62_42\n1/MASK_11_62_42\n1/DATA_11_63_42\n1/MASK_11_63_42\n1/DATA_11_62_43\n1/MASK_11_62_43\n</code></pre>"},{"location":"tools/","title":"Outils de maintenance","text":"<p>Cette suite d'outil facilite la gestion des pyramides (suppression, statistiques), la cr\u00e9ation de descripteur de couche par d\u00e9faut, ainsi qu'un outil de conversion bas\u00e9 sur les TMS.</p>"},{"location":"tools/#installation-depuis-le-paquet-debian","title":"Installation depuis le paquet debian","text":"<p>T\u00e9l\u00e9charger les paquets sur GitHub : </p> <ul> <li>Les librairies Core</li> <li>Les outils</li> </ul> <pre><code>apt install ./librok4-core-perl-&lt;version&gt;-linux-all.deb\napt install ./rok4-tools-&lt;version&gt;-linux-all.deb\n</code></pre>"},{"location":"tools/#installation-depuis-les-sources","title":"Installation depuis les sources","text":"<p>D\u00e9pendances (paquets debian) :</p> <ul> <li>perl-base</li> <li>librok4-core-perl</li> <li>libfindbin-libs-perl</li> <li>libterm-progressbar-perl</li> <li>liblog-log4perl-perl</li> <li>libjson-parse-perl</li> <li>libjson-perl</li> </ul> <pre><code>perl Makefile.PL INSTALL_BASE=/usr VERSION=0.0.1 PREREQ_FATAL=1\nmake\nmake injectversion\nmake install\n</code></pre>"},{"location":"tools/#variables-denvironnement-utilisees-dans-les-librairies-rok4core","title":"Variables d'environnement utilis\u00e9es dans les librairies ROK4::Core","text":"<p>Leur d\u00e9finition est contr\u00f4l\u00e9e \u00e0 l'usage.</p> <ul> <li><code>ROK4_TMS_DIRECTORY</code> pour y chercher les Tile Matrix Sets. Ces derniers peuvent \u00eatre t\u00e9l\u00e9charg\u00e9s sur GitHub, install\u00e9s depuis le paquet debian et seront alors dans le dossier <code>/etc/rok4/tilematrixsets</code>.</li> <li>Pour le stockage CEPH<ul> <li><code>ROK4_CEPH_CONFFILE</code></li> <li><code>ROK4_CEPH_USERNAME</code></li> <li><code>ROK4_CEPH_CLUSTERNAME</code></li> </ul> </li> <li>Pour le stockage S3<ul> <li><code>ROK4_S3_URL</code></li> <li><code>ROK4_S3_KEY</code></li> <li><code>ROK4_S3_SECRETKEY</code></li> </ul> </li> <li>Pour le stockage SWIFT<ul> <li><code>ROK4_SWIFT_AUTHURL</code></li> <li><code>ROK4_SWIFT_USER</code></li> <li><code>ROK4_SWIFT_PASSWD</code></li> <li><code>ROK4_SWIFT_PUBLICURL</code></li> <li>Si authentification via Swift<ul> <li><code>ROK4_SWIFT_ACCOUNT</code></li> </ul> </li> <li>Si connection via keystone (pr\u00e9sence de <code>ROK4_KEYSTONE_DOMAINID</code>)<ul> <li><code>ROK4_KEYSTONE_DOMAINID</code></li> <li><code>ROK4_KEYSTONE_PROJECTID</code></li> </ul> </li> </ul> </li> <li>Pour configurer l'agent de requ\u00eate (int\u00e9raction SWIFT et S3)<ul> <li><code>ROK4_SSL_NO_VERIFY</code></li> <li><code>HTTP_PROXY</code></li> <li><code>HTTPS_PROXY</code></li> <li><code>NO_PROXY</code></li> </ul> </li> </ul>"},{"location":"tools/#presentation-des-outils","title":"Pr\u00e9sentation des outils","text":""},{"location":"tools/#convert2json","title":"CONVERT2JSON","text":"<p>Cet outil convertit un descripteur de pyramide de l'ancien format (XML) vers le nouveau (JSON).</p>"},{"location":"tools/#commande","title":"Commande","text":"<p><code>convert2json.pl &lt;storage type&gt;://&lt;decriptor path&gt;</code></p>"},{"location":"tools/#sup-pyr","title":"SUP-PYR","text":"<p>Cet outil supprime une pyramide \u00e0 partir de son descripteur. Pour une pyramide stock\u00e9e en fichier, il suffit de supprimer le dossier des donn\u00e9es. Dans le cas de stockage objet, le fichier liste est parcouru et les dalles sont supprim\u00e9es une par une.</p> <p>Stockages g\u00e9r\u00e9s : FICHIER, CEPH, S3, SWIFT</p>"},{"location":"tools/#commande_1","title":"Commande","text":"<p><code>sup-pyr.pl --pyramid=&lt;storage type&gt;://&lt;decriptor path&gt; [--full] [--stop]</code></p>"},{"location":"tools/#options","title":"Options","text":"<ul> <li><code>--pyramid</code> Pr\u00e9cise le chemin vers le descripteur de la pyramide \u00e0 supprimer. Ce chemin est pr\u00e9fix\u00e9 par le type de stockage du descripteur : <code>file://</code>, <code>s3://</code>, <code>ceph://</code> ou <code>swift://</code></li> <li><code>--full</code> Pr\u00e9cise si on supprime \u00e9galement le fichier liste et le descripteur de la pyramide \u00e0 la fin</li> <li><code>--stop</code> Pr\u00e9cise si on souhaite arr\u00eater la suppression lorsqu'une erreur est rencontr\u00e9e</li> </ul>"},{"location":"tools/#create-layer","title":"CREATE-LAYER","text":"<p>Cet outil g\u00e9n\u00e8re un descripteur de couche pour ROK4SERVER \u00e0 partir du descripteur de pyramide et du dossier des TileMatrixSets. La couche utilisera alors la pyramide en entr\u00e9e dans sa globalit\u00e9. Le descripteur de couche est \u00e9crit dans la sortie standard.</p>"},{"location":"tools/#commandes","title":"Commandes","text":"<ul> <li><code>create-layer.pl --pyramid=&lt;storage type&gt;://&lt;decriptor path&gt; [--title \"Titre de la couche\"] [--abstract \"R\u00e9sum\u00e9 de la couche\"]</code></li> </ul>"},{"location":"tools/#options_1","title":"Options","text":"<ul> <li><code>--pyramid</code> Pr\u00e9cise le chemin vers le descripteur de la pyramide que la couche doit utiliser. Ce chemin est pr\u00e9fix\u00e9 par le type de stockage du descripteur : <code>file://</code>, <code>s3://</code>, <code>ceph://</code> ou <code>swift://</code></li> <li><code>--title &lt;string&gt;</code> Optionnel, titre de la couche</li> <li><code>--abstract &lt;string&gt;</code> Optionnel, r\u00e9sum\u00e9 de la couche</li> </ul>"},{"location":"tools/#pyrolyse","title":"PYROLYSE","text":"<p>Cet outil g\u00e9n\u00e8re un fichier JSON contenant, pour les dalles et les tuiles, DATA ou MASK, la taille totale, le nombre, la taille moyenne minimale et maximale, au global et par niveau. Les tailles sont en octet et les mesures sont faites sur les vraies donn\u00e9es (list\u00e9es dans le fichier liste). Pour des donn\u00e9es vecteur, on ne compte que les tuiles de taille non nulle.</p> <p>Stockages g\u00e9r\u00e9s pour l'analyse des dalles : FICHIER, CEPH, S3, SWIFT Stockages g\u00e9r\u00e9s pour l'analyse des tuiles : FICHIER, SWIFT</p>"},{"location":"tools/#commande_2","title":"Commande","text":"<p><code>pyrolyse.pl --pyramid=&lt;storage type&gt;://&lt;decriptor path&gt; --json=file [--slabs ALL|DATA|MASK] [--tiles ALL|DATA|MASK] [--perfs=file] [--follow-links] [--progress]</code></p>"},{"location":"tools/#options_2","title":"Options","text":"<ul> <li><code>--pyramid</code> Pr\u00e9cise le chemin vers le descripteur de la pyramide \u00e0 analyser. Ce chemin est pr\u00e9fix\u00e9 par le type de stockage du descripteur : <code>file://</code>, <code>s3://</code>, <code>ceph://</code> ou <code>swift://</code></li> <li><code>--json</code> Pr\u00e9cise le fichier \u00e0 \u00e9crire en sortie (ne doit pas exister)</li> <li><code>--slabs</code> Pr\u00e9cise si l'on veut analyser la taille des dalles</li> <li><code>--tiles</code> Pr\u00e9cise si l'on veut analyser la taille des tuiles</li> <li><code>--perfs</code> D\u00e9finit le fichier dans lequel \u00e9crire les temps de lecture des index des dalles (uniquement r\u00e9alis\u00e9 si on souhaite l'analyse des tailles des tuiles)</li> <li><code>--follow-links</code> Pr\u00e9cise si l'on souhaite traiter les cibles des liens comme des dalles de la pyramide (sinon on compte simplement le nombre de liens)</li> <li><code>--progress</code> Active la barre de progression. Celle ci va sur la sortie des erreurs.</li> </ul>"},{"location":"tools/#tms-toolbox","title":"TMS-TOOLBOX","text":"<p>Outil : <code>tms-toolbox.pl</code></p> <p>Ce outil permet de r\u00e9aliser de nombreuses conversion entre indices de dalles, de tuiles, requ\u00eates getTile ou getMap, liste de fichiers, g\u00e9om\u00e9trie WKT... gr\u00e2ce au TMS utilis\u00e9 (ne n\u00e9cessite pas de pyramide).</p> <p>D\u00e9tails</p>"},{"location":"tools/CHANGELOG/","title":"Outils de gestion ROK4","text":""},{"location":"tools/CHANGELOG/#summary","title":"Summary","text":"<p>Le projet ROK4 a \u00e9t\u00e9 totalement refondu, dans son organisation et sa mise \u00e0 disposition. Les composants sont d\u00e9sormais disponibles dans des releases sur GitHub au format debian.</p> <p>Cette release contient les outils de gestion et d'analyse.</p>"},{"location":"tools/CHANGELOG/#changelog","title":"Changelog","text":""},{"location":"tools/CHANGELOG/#added","title":"[Added]","text":"<ul> <li>Les outils sont capables de lire les descripteurs directement sur les stockages objets</li> <li>Ajout d'un outil permettant de convertir les descripteurs de pyramide dans l'ancien format (XML) au nouveau format (JSON)</li> <li>Ajout d'un outil d'analyse de pyramide (taille moyenne des dalles, utiles, temps d'acc\u00e8s au stockage...)</li> </ul>"},{"location":"tools/CHANGELOG/#changed","title":"[Changed]","text":"<ul> <li>Les param\u00e8tres ont \u00e9t\u00e9 uniformis\u00e9s entre les diff\u00e9rents outils (comme <code>--pyramid</code> pour fournir le chemin vers un descripteur de pyramide)</li> <li>Les chemins sont fournis dans un format pr\u00e9cisant le type de stockage : <code>(file|ceph|s3|swift)://&lt;chemin vers le fichier ou l'objet&gt;</code>. Dans le cas du stockage objet, le chemin est de la forme <code>&lt;nom du contenant&gt;/&lt;nom de l'objet&gt;</code></li> <li>L'outil de cr\u00e9ation du descripteur de couche affiche le r\u00e9sultat dans la sortie standard</li> </ul>"},{"location":"tools/bin/tms-toolbox/","title":"TMS-TOOLBOX","text":"<ul> <li>Usage</li> <li>Commandes</li> <li>Options</li> <li>Entr\u00e9es et sorties</li> <li>Conversions possibles</li> </ul>"},{"location":"tools/bin/tms-toolbox/#usage","title":"Usage","text":""},{"location":"tools/bin/tms-toolbox/#commandes","title":"Commandes","text":"<ul> <li><code>tms-toolbox.pl --tms &lt;TMS name&gt; [--slabsize &lt;INT&gt;x&lt;INT&gt;] [--storage FILE[:&lt;INT&gt;]|CEPH|S3|SWIFT] [--level &lt;STRING&gt;] [--above &lt;STRING&gt;] [--ratio &lt;INT&gt;] --from &lt;STRING&gt; --to &lt;STRING&gt; [--progress] [--buffer &lt;INT&gt;]</code></li> </ul>"},{"location":"tools/bin/tms-toolbox/#options","title":"Options","text":"<ul> <li><code>--help</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--usage</code> Affiche le lien vers la documentation utilisateur de l'outil et quitte</li> <li><code>--version</code> Affiche la version de l'outil et quitte</li> <li><code>--tms &lt;file path&gt;</code> nom du TMS \u00e0 utiliser</li> <li><code>--level &lt;string&gt;</code> Niveau du TMS \u00e0 consid\u00e9rer</li> <li><code>--above &lt;string&gt;</code> Niveau du TMS jusqu'auquel travailler (uniquement pour les QTree)</li> <li><code>--storage FILE[:&lt;integer&gt;]|CEPH|S3|SWIFT</code> Stockage, type et \u00e9ventuellement profondeur d'arborescence. <code>FILE:2</code> par d\u00e9faut.</li> <li><code>--ratio &lt;integer&gt;</code> ratio \u00e0 appliquer pour certaines conversion. <code>1</code> par d\u00e9faut.</li> <li><code>--slabsize &lt;integer&gt;x&lt;integer&gt;</code> Nombre de tuiles, en largeur et en hauteur, dans la dalle</li> <li><code>--from &lt;string&gt;</code> Donn\u00e9es en entr\u00e9e du convertisseur</li> <li><code>--to &lt;string&gt;</code> Donn\u00e9es en sortie du convertisseur</li> <li><code>--buffer &lt;integer&gt;</code> Pr\u00e9cision d'une taille de buffer en pixel \u00e0 appliquer pour \u00e9largir les \u00e9tendues lors des conversions</li> <li><code>--progress</code> Active la barre de progression. Celle ci va sur la sortie des erreurs. Le contenu attendu (sortie standard) doit alors \u00eatre redirig\u00e9 vers un fichier.</li> </ul>"},{"location":"tools/bin/tms-toolbox/#entrees-et-sorties","title":"Entr\u00e9es et sorties","text":"Types Entr\u00e9e Sortie Description <code>BBOX:&lt;XMIN&gt;,&lt;YMIN&gt;,&lt;XMAX&gt;,&lt;YMAX&gt;</code> x Rectangle englobant <code>BBOXES_LIST:&lt;FILE PATH&gt;</code> x Fichier listant des rectangle englobants <code>XMIN,YMIN,XMAX,YMAX</code> <code>GEOM_FILE:&lt;FILE PATH&gt;</code> x x Fichier contenant une g\u00e9om\u00e9trie en GML, KML, JSON ou WKT (filtrage sur l'extention) <code>GEOM</code> x x G\u00e9om\u00e9trie au format WKT <code>GETMAP_PARAMS</code> x Param\u00e8tres d'un GetMap WMS WIDTH, HEIGHT, CRS et BBOX <code>GETTILE_PARAMS</code> x Param\u00e8tres d'un GetTile WMTS TILEMATRIX, TILECOL et TILEROW <code>POINT:&lt;X&gt;,&lt;Y&gt;</code> x Coordonn\u00e9es d'un point <code>PYRAMID_LIST:&lt;FILE PATH&gt;</code> x Fichier liste d'une pyramide <code>SLAB_INDICE:&lt;COL&gt;,&lt;ROW&gt;</code> x Indice d'une dalle, colonne et ligne <code>SLAB_INDICES</code> x Indices de dalles <code>COL,ROW</code> <code>SLAB_INDICES_LIST:&lt;FILE PATH&gt;</code> x Fichier listant des indices de dalles <code>COL,ROW</code> <code>SLAB_INFO</code> x Indices et informations de stockage d'une dalle, pour un ou plusieurs niveaux <code>SLAB_PATH:&lt;STORAGE NAME&gt;</code> x Nom de stockage de la dalle, fichier pou objet, contenant au moins les indices <code>SLAB_PATHS</code> x Suffixes de stockage de dalles <code>SLABS_COUNT</code> x Nombre de dalles <code>SQL_FILE:&lt;FILE PATH&gt;</code> x Fichier SQL d'insertion de dalles (level, col, row, geom) dans la table slabs <code>TFW_FILE:&lt;FILE PATH&gt;</code> x Fichier TFW de g\u00e9or\u00e9f\u00e9rencement <code>TILE_INDICE:&lt;COL&gt;,&lt;ROW&gt;</code> x Indices d'une tuile, colonne et ligne <code>TILE_INFO</code> x Indices d'une tuile, pour un ou plusieurs niveaux <p>Pour les param\u00e8tres avec , le fichier doit exister si en entr\u00e9e, et ne doit pas exister si en sortie."},{"location":"tools/bin/tms-toolbox/#conversions-possibles","title":"Conversions possibles","text":"Entr\u00e9e Sortie Options obligatoires Options facultatives BBOX GETTILE_PARAMS level, slabsize BBOX SLAB_INDICES level, slabsize BBOX SQL_FILE level, slabsize BBOXES_LIST SLAB_INDICES level, slabsize GEOM_FILE GETTILE_PARAMS level, slabsize GEOM_FILE SLAB_INDICES level, slabsize GEOM_FILE SLABS_COUNT level, slabsize GEOM_FILE SQL_FILE level, slabsize POINT SLAB_INFO slabsize level, storage POINT TILE_INFO level PYRAMID_LIST GEOM_FILE level, slabsize PYRAMID_LIST GETTILE_PARAMS slabsize ratio SLAB_INDICE TFW_FILE level, slabsize SLAB_INDICE GEOM level, slabsize SLAB_INDICES_LIST GETMAP_PARAMS level, slabsize ratio SLAB_INDICES_LIST SLAB_PATHS level, slabsize above SLAB_PATH GEOM level, slabsize storage TILE_INDICE SLAB_INFO level, slabsize storage TILE_INDICE GETMAP_PARAMS level buffer"}]}