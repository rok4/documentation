name: Build and release

on:
  workflow_dispatch:
    inputs:
      generation_tag:
        description: 'generation code tag'
        required: true
        default: 'develop'
      pregeneration_tag:
        description: 'pregeneration code tag'
        required: true
        default: 'develop'
      coreperl_tag:
        description: 'core-perl code tag'
        required: true
        default: 'develop'
      corepython_tag:
        description: 'core-python code tag'
        required: true
        default: 'develop'
      corecpp_tag:
        description: 'core-cpp code tag'
        required: true
        default: 'develop'
      server_tag:
        description: 'server code tag'
        required: true
        default: 'develop'
      tools_tag:
        description: 'tools code version'
        required: true
        default: 'develop'
      pytools_tag:
        description: 'pytools code version'
        required: true
        default: 'develop'
      docker_tag:
        description: 'docker code version'
        required: true
        default: 'develop'
      use_cache:
        description: 'use dependencies cache'
        required: true
        default: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        name: Cache dependencies
        id: cache-deps
        with:
            path: "~/deps"
            key: deps

      - name: Install dependencies
        env:
          CACHE_HIT: ${{steps.cache-deps.outputs.cache-hit}}
        run: |
            if [[ "$CACHE_HIT" == 'true' && ${{ github.event.inputs.use_cache }} == 'true' ]]; then
              sudo cp --verbose --force --recursive ~/deps/* /
            else
              sudo apt update
              sudo apt -y install gettext doxygen graphviz naturaldocs mkdocs liblog-log4perl-perl python3-gdal python3-rados
              mkdir -p ~/deps
              sudo dpkg -L gettext | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/deps/
              sudo dpkg -L doxygen | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/deps/
              sudo dpkg -L graphviz | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/deps/
              sudo dpkg -L naturaldocs | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/deps/
              sudo dpkg -L mkdocs | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/deps/
              sudo dpkg -L liblog-log4perl-perl | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/deps/
              sudo dpkg -L python3-gdal | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/deps/
              sudo dpkg -L python3-rados | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/deps/
            fi
            sudo pip3 install mkdocs-material mkdocs-select-files pdoc3 boto3 gdal

      - name: Build documentation
        run: |
          bash build.sh --clone --doxygen --naturaldocs --pdoc --mkdocs --generation ${{ github.event.inputs.generation_tag }} --docker ${{ github.event.inputs.docker_tag }} --pregeneration ${{ github.event.inputs.pregeneration_tag }} --coreperl ${{ github.event.inputs.coreperl_tag }} --corepython ${{ github.event.inputs.corepython_tag }} --corecpp ${{ github.event.inputs.corecpp_tag }} --tools ${{ github.event.inputs.tools_tag }} --pytools ${{ github.event.inputs.pytools_tag }} --server ${{ github.event.inputs.server_tag }}

      - name: Publish on gh-pages branch
        run: |
          rm .gitignore
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add build/target/dist
          git commit -m "update doc"
          git push origin `git subtree split --prefix build/target/dist`:gh-pages --force
